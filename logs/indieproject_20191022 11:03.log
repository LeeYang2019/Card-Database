[DEBUG] 2019-10-22 11:02:58.778 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-22 11:02:58.789 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-22 11:02:58.795 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-22 11:02:58.875 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-22 11:02:58.879 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-22 11:02:59.144 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-22 11:02:59.147 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-22 11:02:59.157 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-22 11:02:59.525 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-22 11:02:59.550 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-22 11:02:59.550 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-22 11:02:59.575 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-22 11:02:59.632 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1e63d216
[DEBUG] 2019-10-22 11:02:59.634 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1e63d216
[DEBUG] 2019-10-22 11:02:59.634 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1e63d216
[DEBUG] 2019-10-22 11:02:59.634 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2d6aca33
[DEBUG] 2019-10-22 11:02:59.635 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@35f8a9d3
[DEBUG] 2019-10-22 11:02:59.636 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@13a37e2a
[DEBUG] 2019-10-22 11:02:59.637 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1473b8c0
[DEBUG] 2019-10-22 11:02:59.637 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1473b8c0
[DEBUG] 2019-10-22 11:02:59.637 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1473b8c0
[DEBUG] 2019-10-22 11:02:59.638 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@33abde31
[DEBUG] 2019-10-22 11:02:59.642 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@33abde31
[DEBUG] 2019-10-22 11:02:59.642 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@33abde31
[DEBUG] 2019-10-22 11:02:59.643 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@b558294
[DEBUG] 2019-10-22 11:02:59.644 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@b558294
[DEBUG] 2019-10-22 11:02:59.644 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@b558294
[DEBUG] 2019-10-22 11:02:59.644 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3bcd426c
[DEBUG] 2019-10-22 11:02:59.645 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3bcd426c
[DEBUG] 2019-10-22 11:02:59.645 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3bcd426c
[DEBUG] 2019-10-22 11:02:59.647 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@160396db
[DEBUG] 2019-10-22 11:02:59.647 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@160396db
[DEBUG] 2019-10-22 11:02:59.647 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@160396db
[DEBUG] 2019-10-22 11:02:59.651 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@76b224cd
[DEBUG] 2019-10-22 11:02:59.651 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@76b224cd
[DEBUG] 2019-10-22 11:02:59.652 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@76b224cd
[DEBUG] 2019-10-22 11:02:59.653 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@aa10649
[DEBUG] 2019-10-22 11:02:59.653 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@aa10649
[DEBUG] 2019-10-22 11:02:59.653 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@aa10649
[DEBUG] 2019-10-22 11:02:59.654 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6b63d445
[DEBUG] 2019-10-22 11:02:59.654 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6b63d445
[DEBUG] 2019-10-22 11:02:59.654 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@30404dba
[DEBUG] 2019-10-22 11:02:59.655 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@30404dba
[DEBUG] 2019-10-22 11:02:59.656 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5bfc257
[DEBUG] 2019-10-22 11:02:59.656 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5bfc257
[DEBUG] 2019-10-22 11:02:59.657 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@783efb48
[DEBUG] 2019-10-22 11:02:59.657 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3af356f
[DEBUG] 2019-10-22 11:02:59.658 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@41aaedaa
[DEBUG] 2019-10-22 11:02:59.658 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@41aaedaa
[DEBUG] 2019-10-22 11:02:59.658 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@71391b3f
[DEBUG] 2019-10-22 11:02:59.658 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@71391b3f
[DEBUG] 2019-10-22 11:02:59.665 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@66596a88
[DEBUG] 2019-10-22 11:02:59.667 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@66596a88
[DEBUG] 2019-10-22 11:02:59.669 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4bb8855f
[DEBUG] 2019-10-22 11:02:59.669 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4bb8855f
[DEBUG] 2019-10-22 11:02:59.670 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7a6ebe1e
[DEBUG] 2019-10-22 11:02:59.671 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7a6ebe1e
[DEBUG] 2019-10-22 11:02:59.674 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@48c4245d
[DEBUG] 2019-10-22 11:02:59.674 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@48c4245d
[DEBUG] 2019-10-22 11:02:59.675 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@659925f4
[DEBUG] 2019-10-22 11:02:59.675 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@659925f4
[DEBUG] 2019-10-22 11:02:59.676 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@426e505c
[DEBUG] 2019-10-22 11:02:59.676 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@426e505c
[DEBUG] 2019-10-22 11:02:59.679 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@322803db
[DEBUG] 2019-10-22 11:02:59.683 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@322803db
[DEBUG] 2019-10-22 11:02:59.687 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@aa004a0
[DEBUG] 2019-10-22 11:02:59.688 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@aa004a0
[DEBUG] 2019-10-22 11:02:59.688 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1bcf67e8
[DEBUG] 2019-10-22 11:02:59.688 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1bcf67e8
[DEBUG] 2019-10-22 11:02:59.689 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3a4ba480
[DEBUG] 2019-10-22 11:02:59.689 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3a4ba480
[DEBUG] 2019-10-22 11:02:59.689 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3a4ba480
[DEBUG] 2019-10-22 11:02:59.692 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@131fcb6f
[DEBUG] 2019-10-22 11:02:59.692 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@25d3cfc8
[DEBUG] 2019-10-22 11:02:59.695 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25d3cfc8
[DEBUG] 2019-10-22 11:02:59.695 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25d3cfc8
[DEBUG] 2019-10-22 11:02:59.696 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@677b8e13
[DEBUG] 2019-10-22 11:02:59.697 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@57540fd0
[DEBUG] 2019-10-22 11:02:59.697 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@57540fd0
[DEBUG] 2019-10-22 11:02:59.697 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3adbe50f
[DEBUG] 2019-10-22 11:02:59.697 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3adbe50f
[DEBUG] 2019-10-22 11:02:59.700 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@67001148
[DEBUG] 2019-10-22 11:02:59.700 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@67001148
[DEBUG] 2019-10-22 11:02:59.701 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@383f1975
[DEBUG] 2019-10-22 11:02:59.702 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@383f1975
[DEBUG] 2019-10-22 11:02:59.702 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@773c0293
[DEBUG] 2019-10-22 11:02:59.706 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@773c0293
[DEBUG] 2019-10-22 11:02:59.706 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dbd803f
[DEBUG] 2019-10-22 11:02:59.707 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@529cfee5
[DEBUG] 2019-10-22 11:02:59.707 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@529cfee5
[DEBUG] 2019-10-22 11:02:59.708 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@529cfee5
[DEBUG] 2019-10-22 11:02:59.708 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4158debd
[DEBUG] 2019-10-22 11:02:59.708 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4158debd
[DEBUG] 2019-10-22 11:02:59.708 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4158debd
[DEBUG] 2019-10-22 11:02:59.709 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@55cff952
[DEBUG] 2019-10-22 11:02:59.710 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@226b143b
[DEBUG] 2019-10-22 11:02:59.713 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7aad3f7d
[DEBUG] 2019-10-22 11:02:59.713 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7aad3f7d
[DEBUG] 2019-10-22 11:02:59.713 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7aad3f7d
[DEBUG] 2019-10-22 11:02:59.714 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2bfbffb2
[DEBUG] 2019-10-22 11:02:59.714 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2bfbffb2
[DEBUG] 2019-10-22 11:02:59.714 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2bfbffb2
[DEBUG] 2019-10-22 11:02:59.715 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3e850122
[DEBUG] 2019-10-22 11:02:59.715 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4cdd2c73
[DEBUG] 2019-10-22 11:02:59.716 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@398474a2
[DEBUG] 2019-10-22 11:02:59.716 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@398474a2
[DEBUG] 2019-10-22 11:02:59.716 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6a10b263
[DEBUG] 2019-10-22 11:02:59.722 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@543e593
[DEBUG] 2019-10-22 11:02:59.722 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@543e593
[DEBUG] 2019-10-22 11:02:59.723 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@64138b0c
[DEBUG] 2019-10-22 11:02:59.724 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64138b0c
[DEBUG] 2019-10-22 11:02:59.724 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@bdc8014
[DEBUG] 2019-10-22 11:02:59.724 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1698d7c0
[DEBUG] 2019-10-22 11:02:59.726 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@65bb9029
[DEBUG] 2019-10-22 11:02:59.733 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@60dd3c23
[DEBUG] 2019-10-22 11:02:59.733 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@60dd3c23
[DEBUG] 2019-10-22 11:02:59.733 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1f1cae23
[DEBUG] 2019-10-22 11:02:59.733 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7c455e96
[DEBUG] 2019-10-22 11:02:59.733 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@985696
[DEBUG] 2019-10-22 11:02:59.733 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5bcde458
[DEBUG] 2019-10-22 11:02:59.733 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@215a34b4
[DEBUG] 2019-10-22 11:02:59.733 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@77bd7fe7
[DEBUG] 2019-10-22 11:02:59.733 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@35d3ab60
[DEBUG] 2019-10-22 11:02:59.733 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@10876a6
[DEBUG] 2019-10-22 11:02:59.768 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-22 11:02:59.769 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-22 11:02:59.771 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-22 11:02:59.773 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-22 11:02:59.777 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-22 11:02:59.777 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-22 11:02:59.779 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-22 11:02:59.779 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-22 11:02:59.781 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-22 11:02:59.781 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-22 11:02:59.781 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-22 11:02:59.781 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-22 11:02:59.782 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-22 11:02:59.817 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-22 11:02:59.822 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_yugioh_card_db
[INFO ] 2019-10-22 11:02:59.822 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-22 11:02:59.822 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-22 11:03:00.067 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-22 11:03:00.826 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-22 11:03:00.828 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-22 11:03:00.828 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-22 11:03:00.896 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-22 11:03:00.918 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-22 11:03:00.963 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-22 11:03:01.021 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-22 11:03:01.025 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@710d89e2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1d75e7af]
[DEBUG] 2019-10-22 11:03:01.178 [main] AnnotationBinder - Binding entity from annotated class: edu.yang.entity.YugiohCard
[DEBUG] 2019-10-22 11:03:01.211 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-22 11:03:01.220 [main] EntityBinder - Import with entity name YugiohCard
[DEBUG] 2019-10-22 11:03:01.222 [main] EntityBinder - Bind entity edu.yang.entity.YugiohCard on table yugioh_card
[DEBUG] 2019-10-22 11:03:01.267 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:03:01.271 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-22 11:03:01.272 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:id]
[DEBUG] 2019-10-22 11:03:01.278 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-22 11:03:01.280 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-22 11:03:01.282 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-22 11:03:01.286 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:03:01.288 [main] PropertyBinder - MetadataSourceProcessor property cardName with lazy=false
[DEBUG] 2019-10-22 11:03:01.289 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardName]
[DEBUG] 2019-10-22 11:03:01.289 [main] SimpleValueBinder - building SimpleValue for cardName
[DEBUG] 2019-10-22 11:03:01.289 [main] PropertyBinder - Building property cardName
[DEBUG] 2019-10-22 11:03:01.289 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_type, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:03:01.289 [main] PropertyBinder - MetadataSourceProcessor property cardType with lazy=false
[DEBUG] 2019-10-22 11:03:01.289 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardType]
[DEBUG] 2019-10-22 11:03:01.289 [main] SimpleValueBinder - building SimpleValue for cardType
[DEBUG] 2019-10-22 11:03:01.289 [main] PropertyBinder - Building property cardType
[DEBUG] 2019-10-22 11:03:01.294 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='yugiohCard'}
[DEBUG] 2019-10-22 11:03:01.295 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=entries, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:03:01.297 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:03:01.307 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:03:01.308 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=entries_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:03:01.308 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='entries_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-22 11:03:01.315 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='yugiohCard'}
[DEBUG] 2019-10-22 11:03:01.315 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='yugiohCard'}
[DEBUG] 2019-10-22 11:03:01.315 [main] CollectionBinder - Collection role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:01.317 [main] PropertyBinder - Building property entries
[DEBUG] 2019-10-22 11:03:01.317 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-22 11:03:01.317 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:03:01.319 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-22 11:03:01.322 [main] AnnotationBinder - Binding entity from annotated class: edu.yang.entity.User
[DEBUG] 2019-10-22 11:03:01.322 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-22 11:03:01.322 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-22 11:03:01.323 [main] EntityBinder - Bind entity edu.yang.entity.User on table user
[DEBUG] 2019-10-22 11:03:01.326 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:03:01.327 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-22 11:03:01.327 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:id]
[DEBUG] 2019-10-22 11:03:01.327 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-22 11:03:01.327 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-22 11:03:01.327 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-22 11:03:01.327 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-22 11:03:01.328 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=cards, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:03:01.328 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:03:01.328 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:03:01.328 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=cards_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:03:01.328 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='cards_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-22 11:03:01.330 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-22 11:03:01.330 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-22 11:03:01.330 [main] CollectionBinder - Collection role: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:03:01.331 [main] PropertyBinder - Building property cards
[DEBUG] 2019-10-22 11:03:01.331 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_password, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:03:01.331 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2019-10-22 11:03:01.331 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:password]
[DEBUG] 2019-10-22 11:03:01.331 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2019-10-22 11:03:01.331 [main] PropertyBinder - Building property password
[DEBUG] 2019-10-22 11:03:01.331 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:03:01.331 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-22 11:03:01.331 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:userName]
[DEBUG] 2019-10-22 11:03:01.331 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-22 11:03:01.331 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-22 11:03:01.331 [main] AnnotationBinder - Binding entity from annotated class: edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-10-22 11:03:01.332 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-22 11:03:01.332 [main] EntityBinder - Import with entity name YugiohCardHistory
[DEBUG] 2019-10-22 11:03:01.333 [main] EntityBinder - Bind entity edu.yang.entity.YugiohCardHistory on table yugioh_card_history
[DEBUG] 2019-10-22 11:03:01.337 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:03:01.337 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-22 11:03:01.337 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCardHistory:id]
[DEBUG] 2019-10-22 11:03:01.338 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-22 11:03:01.338 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-22 11:03:01.338 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-22 11:03:01.338 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:03:01.339 [main] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2019-10-22 11:03:01.339 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCardHistory:price]
[DEBUG] 2019-10-22 11:03:01.339 [main] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2019-10-22 11:03:01.340 [main] PropertyBinder - Building property price
[DEBUG] 2019-10-22 11:03:01.340 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=update_date, insertable=true, updatable=false, unique=false}
[DEBUG] 2019-10-22 11:03:01.340 [main] PropertyBinder - MetadataSourceProcessor property ts with lazy=false
[DEBUG] 2019-10-22 11:03:01.340 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCardHistory:ts]
[DEBUG] 2019-10-22 11:03:01.341 [main] SimpleValueBinder - building SimpleValue for ts
[DEBUG] 2019-10-22 11:03:01.341 [main] PropertyBinder - Building property ts
[DEBUG] 2019-10-22 11:03:01.354 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-22 11:03:01.356 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=yugiohCard, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:03:01.357 [main] PropertyBinder - Building property yugiohCard
[DEBUG] 2019-10-22 11:03:01.363 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-22 11:03:01.364 [main] SimpleValueBinder - Starting fillSimpleValue for cardName
[DEBUG] 2019-10-22 11:03:01.364 [main] SimpleValueBinder - Starting fillSimpleValue for cardType
[DEBUG] 2019-10-22 11:03:01.364 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-22 11:03:01.364 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2019-10-22 11:03:01.364 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-22 11:03:01.364 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-22 11:03:01.364 [main] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2019-10-22 11:03:01.364 [main] SimpleValueBinder - Starting fillSimpleValue for ts
[DEBUG] 2019-10-22 11:03:01.369 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [yugioh_card]
[DEBUG] 2019-10-22 11:03:01.369 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2019-10-22 11:03:01.369 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [yugioh_card_history]
[DEBUG] 2019-10-22 11:03:01.369 [main] CollectionSecondPass - Second pass for collection: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:01.373 [main] CollectionBinder - Binding a OneToMany: edu.yang.entity.YugiohCard.entries through a foreign key
[DEBUG] 2019-10-22 11:03:01.373 [main] CollectionBinder - Mapping collection: edu.yang.entity.YugiohCard.entries -> yugioh_card_history
[DEBUG] 2019-10-22 11:03:01.374 [main] TableBinder - Retrieving property edu.yang.entity.YugiohCardHistory.yugiohCard
[DEBUG] 2019-10-22 11:03:01.375 [main] CollectionSecondPass - Mapped collection key: yugiohCard_id, one-to-many: edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-10-22 11:03:01.376 [main] CollectionSecondPass - Second pass for collection: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:03:01.377 [main] CollectionBinder - Binding a OneToMany: edu.yang.entity.User.cards through a foreign key
[DEBUG] 2019-10-22 11:03:01.377 [main] CollectionBinder - Mapping collection: edu.yang.entity.User.cards -> yugioh_card
[DEBUG] 2019-10-22 11:03:01.377 [main] TableBinder - Retrieving property edu.yang.entity.YugiohCard.user
[DEBUG] 2019-10-22 11:03:01.377 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: edu.yang.entity.YugiohCard
[DEBUG] 2019-10-22 11:03:01.377 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.User
[DEBUG] 2019-10-22 11:03:01.381 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.YugiohCard
[DEBUG] 2019-10-22 11:03:01.388 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.User
[DEBUG] 2019-10-22 11:03:01.389 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.YugiohCard
[DEBUG] 2019-10-22 11:03:01.436 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-22 11:03:01.437 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-22 11:03:01.437 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-22 11:03:01.437 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-22 11:03:01.437 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-22 11:03:01.437 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-22 11:03:01.437 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-22 11:03:01.437 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-22 11:03:01.437 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-22 11:03:01.437 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-22 11:03:01.437 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-22 11:03:01.437 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-22 11:03:01.437 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-22 11:03:01.437 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-22 11:03:01.437 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-22 11:03:01.437 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-22 11:03:01.438 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-22 11:03:01.438 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-22 11:03:01.438 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-22 11:03:01.438 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-22 11:03:01.438 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-22 11:03:01.438 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-22 11:03:01.438 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-22 11:03:01.439 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-22 11:03:01.439 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-22 11:03:01.439 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-22 11:03:01.439 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-22 11:03:01.439 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-22 11:03:01.440 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-22 11:03:01.440 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-22 11:03:01.440 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-22 11:03:01.440 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-22 11:03:01.440 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-22 11:03:01.440 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-22 11:03:01.440 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-22 11:03:01.440 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-22 11:03:01.440 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-22 11:03:01.440 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-22 11:03:01.441 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-22 11:03:01.507 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-22 11:03:01.534 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-22 11:03:01.534 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/IdeaProjects/indieproject/target/test-classes:/home/student/IdeaProjects/indieproject/target/classes:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=/home/student/IdeaProjects/indieproject/target/surefire/surefirebooter13766047465148957599.jar /home/student/IdeaProjects/indieproject/target/surefire/surefire14186521953131213448tmp /home/student/IdeaProjects/indieproject/target/surefire/surefire_015780952479471986165tmp, jdk.debug=release, surefire.test.class.path=/home/student/IdeaProjects/indieproject/target/test-classes:/home/student/IdeaProjects/indieproject/target/classes:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, basedir=/home/student/IdeaProjects/indieproject, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, surefire.real.class.path=/home/student/IdeaProjects/indieproject/target/surefire/surefirebooter13766047465148957599.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.0.0-31-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test_yugioh_card_db, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, localRepository=/home/student/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.4, user.dir=/home/student/IdeaProjects/indieproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1e3e1014, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, idea.version2019.1.4=true, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/test_yugioh_card_db, java.class.version=55.0}
[DEBUG] 2019-10-22 11:03:01.559 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-22 11:03:01.559 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-22 11:03:01.561 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-22 11:03:01.561 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@710d89e2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@656f62dc]
[DEBUG] 2019-10-22 11:03:01.680 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.User] is safe
[DEBUG] 2019-10-22 11:03:01.680 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.User
[DEBUG] 2019-10-22 11:03:01.703 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.User] is safe
[DEBUG] 2019-10-22 11:03:01.703 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.User
[DEBUG] 2019-10-22 11:03:01.982 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCard] is safe
[DEBUG] 2019-10-22 11:03:01.986 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCard
[DEBUG] 2019-10-22 11:03:01.986 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCard] is safe
[DEBUG] 2019-10-22 11:03:01.986 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCard
[DEBUG] 2019-10-22 11:03:02.026 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCardHistory] is safe
[DEBUG] 2019-10-22 11:03:02.026 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-10-22 11:03:02.030 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCardHistory] is safe
[DEBUG] 2019-10-22 11:03:02.030 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-10-22 11:03:02.068 [main] AbstractCollectionPersister - Static SQL for collection: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:03:02.068 [main] AbstractCollectionPersister -  Row insert: update yugioh_card set user_id=? where id=?
[DEBUG] 2019-10-22 11:03:02.068 [main] AbstractCollectionPersister -  Row update: update yugioh_card set  where id=?
[DEBUG] 2019-10-22 11:03:02.068 [main] AbstractCollectionPersister -  Row delete: update yugioh_card set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-22 11:03:02.068 [main] AbstractCollectionPersister -  One-shot delete: update yugioh_card set user_id=null where user_id=?
[DEBUG] 2019-10-22 11:03:02.072 [main] AbstractCollectionPersister - Static SQL for collection: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:02.072 [main] AbstractCollectionPersister -  Row insert: update yugioh_card_history set yugiohCard_id=? where id=?
[DEBUG] 2019-10-22 11:03:02.072 [main] AbstractCollectionPersister -  Row update: update yugioh_card_history set  where id=?
[DEBUG] 2019-10-22 11:03:02.072 [main] AbstractCollectionPersister -  Row delete: update yugioh_card_history set yugiohCard_id=null where yugiohCard_id=? and id=?
[DEBUG] 2019-10-22 11:03:02.072 [main] AbstractCollectionPersister -  One-shot delete: update yugioh_card_history set yugiohCard_id=null where yugiohCard_id=?
[DEBUG] 2019-10-22 11:03:02.079 [main] AbstractEntityPersister - Static SQL for entity: edu.yang.entity.User
[DEBUG] 2019-10-22 11:03:02.079 [main] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2019-10-22 11:03:02.079 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.user_password as user_pas2_0_, user_.user_name as user_nam3_0_ from user user_ where user_.id=?
[DEBUG] 2019-10-22 11:03:02.079 [main] AbstractEntityPersister -  Insert 0: insert into user (user_password, user_name, id) values (?, ?, ?)
[DEBUG] 2019-10-22 11:03:02.079 [main] AbstractEntityPersister -  Update 0: update user set user_password=?, user_name=? where id=?
[DEBUG] 2019-10-22 11:03:02.079 [main] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2019-10-22 11:03:02.079 [main] AbstractEntityPersister -  Identity insert: insert into user (user_password, user_name) values (?, ?)
[DEBUG] 2019-10-22 11:03:02.103 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ef85555]
[DEBUG] 2019-10-22 11:03:02.105 [main] MetamodelGraphWalker - Visiting attribute path : cards
[DEBUG] 2019-10-22 11:03:02.115 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@611b35d6]
[DEBUG] 2019-10-22 11:03:02.116 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@251c4280]
[DEBUG] 2019-10-22 11:03:02.117 [main] MetamodelGraphWalker - Visiting attribute path : cards.cardName
[DEBUG] 2019-10-22 11:03:02.117 [main] MetamodelGraphWalker - Visiting attribute path : cards.cardType
[DEBUG] 2019-10-22 11:03:02.117 [main] MetamodelGraphWalker - Visiting attribute path : cards.entries
[DEBUG] 2019-10-22 11:03:02.117 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b4732dc]
[DEBUG] 2019-10-22 11:03:02.117 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45292ec1]
[DEBUG] 2019-10-22 11:03:02.118 [main] MetamodelGraphWalker - Visiting attribute path : cards.entries.price
[DEBUG] 2019-10-22 11:03:02.118 [main] MetamodelGraphWalker - Visiting attribute path : cards.entries.ts
[DEBUG] 2019-10-22 11:03:02.118 [main] MetamodelGraphWalker - Visiting attribute path : cards.entries.yugiohCard
[DEBUG] 2019-10-22 11:03:02.118 [main] MetamodelGraphWalker - Property path deemed to be circular : cards.entries.yugiohCard
[DEBUG] 2019-10-22 11:03:02.120 [main] MetamodelGraphWalker - Visiting attribute path : cards.user
[DEBUG] 2019-10-22 11:03:02.120 [main] MetamodelGraphWalker - Property path deemed to be circular : cards.user
[DEBUG] 2019-10-22 11:03:02.120 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-10-22 11:03:02.120 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-22 11:03:02.120 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-22 11:03:02.136 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-22 11:03:02.147 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:0>, path=edu.yang.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.User.cards, querySpaceUid=<gen:1>, path=edu.yang.entity.User.cards)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:2>, path=edu.yang.entity.User.cards.<elements>)
                - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:3>, path=edu.yang.entity.User.cards.<elements>.entries)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:4>, path=edu.yang.entity.User.cards.<elements>.entries.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(cards)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.User.cards)
                - SQL table alias mapping - cards1_
                - alias suffix - 1_
                - suffixed key columns - {user_id4_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCard)
                      - SQL table alias mapping - cards1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(entries)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=edu.yang.entity.YugiohCard.entries)
                            - SQL table alias mapping - entries2_
                            - alias suffix - 3_
                            - suffixed key columns - {yugiohCa4_2_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_2_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=edu.yang.entity.YugiohCardHistory)
                                  - SQL table alias mapping - entries2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_2_4_}

[DEBUG] 2019-10-22 11:03:02.150 [main] EntityLoader - Static select for entity edu.yang.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_name as user_nam3_0_0_, cards1_.user_id as user_id4_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_name as card_nam2_1_2_, cards1_.card_type as card_typ3_1_2_, cards1_.user_id as user_id4_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-10-22 11:03:02.150 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dca31eb]
[DEBUG] 2019-10-22 11:03:02.150 [main] MetamodelGraphWalker - Visiting attribute path : cards
[DEBUG] 2019-10-22 11:03:02.150 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b56b031]
[DEBUG] 2019-10-22 11:03:02.150 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e7af36e]
[DEBUG] 2019-10-22 11:03:02.153 [main] MetamodelGraphWalker - Visiting attribute path : cards.cardName
[DEBUG] 2019-10-22 11:03:02.153 [main] MetamodelGraphWalker - Visiting attribute path : cards.cardType
[DEBUG] 2019-10-22 11:03:02.153 [main] MetamodelGraphWalker - Visiting attribute path : cards.entries
[DEBUG] 2019-10-22 11:03:02.153 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@aa61e4e]
[DEBUG] 2019-10-22 11:03:02.153 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@733e6df7]
[DEBUG] 2019-10-22 11:03:02.153 [main] MetamodelGraphWalker - Visiting attribute path : cards.entries.price
[DEBUG] 2019-10-22 11:03:02.153 [main] MetamodelGraphWalker - Visiting attribute path : cards.entries.ts
[DEBUG] 2019-10-22 11:03:02.153 [main] MetamodelGraphWalker - Visiting attribute path : cards.entries.yugiohCard
[DEBUG] 2019-10-22 11:03:02.153 [main] MetamodelGraphWalker - Property path deemed to be circular : cards.entries.yugiohCard
[DEBUG] 2019-10-22 11:03:02.153 [main] MetamodelGraphWalker - Visiting attribute path : cards.user
[DEBUG] 2019-10-22 11:03:02.153 [main] MetamodelGraphWalker - Property path deemed to be circular : cards.user
[DEBUG] 2019-10-22 11:03:02.153 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-10-22 11:03:02.153 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-22 11:03:02.153 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-22 11:03:02.153 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-22 11:03:02.154 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:0>, path=edu.yang.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.User.cards, querySpaceUid=<gen:1>, path=edu.yang.entity.User.cards)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:2>, path=edu.yang.entity.User.cards.<elements>)
                - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:3>, path=edu.yang.entity.User.cards.<elements>.entries)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:4>, path=edu.yang.entity.User.cards.<elements>.entries.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(cards)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.User.cards)
                - SQL table alias mapping - cards1_
                - alias suffix - 1_
                - suffixed key columns - {user_id4_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCard)
                      - SQL table alias mapping - cards1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(entries)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=edu.yang.entity.YugiohCard.entries)
                            - SQL table alias mapping - entries2_
                            - alias suffix - 3_
                            - suffixed key columns - {yugiohCa4_2_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_2_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=edu.yang.entity.YugiohCardHistory)
                                  - SQL table alias mapping - entries2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_2_4_}

[DEBUG] 2019-10-22 11:03:02.154 [main] EntityLoader - Static select for entity edu.yang.entity.User [READ]: select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_name as user_nam3_0_0_, cards1_.user_id as user_id4_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_name as card_nam2_1_2_, cards1_.card_type as card_typ3_1_2_, cards1_.user_id as user_id4_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-10-22 11:03:02.173 [main] Loader - Static select for action ACTION_MERGE on entity edu.yang.entity.User: select user0_.id as id1_0_1_, user0_.user_password as user_pas2_0_1_, user0_.user_name as user_nam3_0_1_, cards1_.user_id as user_id4_1_3_, cards1_.id as id1_1_3_, cards1_.id as id1_1_0_, cards1_.card_name as card_nam2_1_0_, cards1_.card_type as card_typ3_1_0_, cards1_.user_id as user_id4_1_0_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id where user0_.id=?
[DEBUG] 2019-10-22 11:03:02.174 [main] Loader - Static select for action ACTION_REFRESH on entity edu.yang.entity.User: select user0_.id as id1_0_1_, user0_.user_password as user_pas2_0_1_, user0_.user_name as user_nam3_0_1_, cards1_.user_id as user_id4_1_3_, cards1_.id as id1_1_3_, cards1_.id as id1_1_0_, cards1_.card_name as card_nam2_1_0_, cards1_.card_type as card_typ3_1_0_, cards1_.user_id as user_id4_1_0_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id where user0_.id=?
[DEBUG] 2019-10-22 11:03:02.176 [main] AbstractEntityPersister - Static SQL for entity: edu.yang.entity.YugiohCard
[DEBUG] 2019-10-22 11:03:02.176 [main] AbstractEntityPersister -  Version select: select id from yugioh_card where id =?
[DEBUG] 2019-10-22 11:03:02.177 [main] AbstractEntityPersister -  Snapshot select: select yugiohcard_.id, yugiohcard_.card_name as card_nam2_1_, yugiohcard_.card_type as card_typ3_1_, yugiohcard_.user_id as user_id4_1_ from yugioh_card yugiohcard_ where yugiohcard_.id=?
[DEBUG] 2019-10-22 11:03:02.178 [main] AbstractEntityPersister -  Insert 0: insert into yugioh_card (card_name, card_type, user_id, id) values (?, ?, ?, ?)
[DEBUG] 2019-10-22 11:03:02.178 [main] AbstractEntityPersister -  Update 0: update yugioh_card set card_name=?, card_type=?, user_id=? where id=?
[DEBUG] 2019-10-22 11:03:02.178 [main] AbstractEntityPersister -  Delete 0: delete from yugioh_card where id=?
[DEBUG] 2019-10-22 11:03:02.178 [main] AbstractEntityPersister -  Identity insert: insert into yugioh_card (card_name, card_type, user_id) values (?, ?, ?)
[DEBUG] 2019-10-22 11:03:02.178 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30aec673]
[DEBUG] 2019-10-22 11:03:02.178 [main] MetamodelGraphWalker - Visiting attribute path : cardName
[DEBUG] 2019-10-22 11:03:02.178 [main] MetamodelGraphWalker - Visiting attribute path : cardType
[DEBUG] 2019-10-22 11:03:02.178 [main] MetamodelGraphWalker - Visiting attribute path : entries
[DEBUG] 2019-10-22 11:03:02.178 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@188a5fc2]
[DEBUG] 2019-10-22 11:03:02.178 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cb9ef52]
[DEBUG] 2019-10-22 11:03:02.178 [main] MetamodelGraphWalker - Visiting attribute path : entries.price
[DEBUG] 2019-10-22 11:03:02.178 [main] MetamodelGraphWalker - Visiting attribute path : entries.ts
[DEBUG] 2019-10-22 11:03:02.178 [main] MetamodelGraphWalker - Visiting attribute path : entries.yugiohCard
[DEBUG] 2019-10-22 11:03:02.178 [main] MetamodelGraphWalker - Property path deemed to be circular : entries.yugiohCard
[DEBUG] 2019-10-22 11:03:02.178 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-22 11:03:02.181 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@124d26ba]
[DEBUG] 2019-10-22 11:03:02.181 [main] MetamodelGraphWalker - Visiting attribute path : user.cards
[DEBUG] 2019-10-22 11:03:02.181 [main] MetamodelGraphWalker - Property path deemed to be circular : user.cards
[DEBUG] 2019-10-22 11:03:02.181 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2019-10-22 11:03:02.183 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-22 11:03:02.183 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-22 11:03:02.183 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-22 11:03:02.184 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCard)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCard)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCard.entries)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCard.entries.<elements>)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:3>, path=edu.yang.entity.YugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCard)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(entries)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.YugiohCard.entries)
                - SQL table alias mapping - entries1_
                - alias suffix - 1_
                - suffixed key columns - {yugiohCa4_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_2_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCardHistory)
                      - SQL table alias mapping - entries1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.yang.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 3_
                - suffixed key columns - {id1_0_3_}

[DEBUG] 2019-10-22 11:03:02.184 [main] EntityLoader - Static select for entity edu.yang.entity.YugiohCard [NONE]: select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_name as card_nam2_1_0_, yugiohcard0_.card_type as card_typ3_1_0_, yugiohcard0_.user_id as user_id4_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_name as user_nam3_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-10-22 11:03:02.184 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4971f459]
[DEBUG] 2019-10-22 11:03:02.184 [main] MetamodelGraphWalker - Visiting attribute path : cardName
[DEBUG] 2019-10-22 11:03:02.184 [main] MetamodelGraphWalker - Visiting attribute path : cardType
[DEBUG] 2019-10-22 11:03:02.186 [main] MetamodelGraphWalker - Visiting attribute path : entries
[DEBUG] 2019-10-22 11:03:02.186 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2eada095]
[DEBUG] 2019-10-22 11:03:02.186 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52831a73]
[DEBUG] 2019-10-22 11:03:02.186 [main] MetamodelGraphWalker - Visiting attribute path : entries.price
[DEBUG] 2019-10-22 11:03:02.186 [main] MetamodelGraphWalker - Visiting attribute path : entries.ts
[DEBUG] 2019-10-22 11:03:02.186 [main] MetamodelGraphWalker - Visiting attribute path : entries.yugiohCard
[DEBUG] 2019-10-22 11:03:02.186 [main] MetamodelGraphWalker - Property path deemed to be circular : entries.yugiohCard
[DEBUG] 2019-10-22 11:03:02.186 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-22 11:03:02.186 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2506e949]
[DEBUG] 2019-10-22 11:03:02.186 [main] MetamodelGraphWalker - Visiting attribute path : user.cards
[DEBUG] 2019-10-22 11:03:02.186 [main] MetamodelGraphWalker - Property path deemed to be circular : user.cards
[DEBUG] 2019-10-22 11:03:02.186 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2019-10-22 11:03:02.186 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-22 11:03:02.186 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-22 11:03:02.187 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-22 11:03:02.189 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCard)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCard)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCard.entries)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCard.entries.<elements>)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:3>, path=edu.yang.entity.YugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCard)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(entries)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.YugiohCard.entries)
                - SQL table alias mapping - entries1_
                - alias suffix - 1_
                - suffixed key columns - {yugiohCa4_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_2_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCardHistory)
                      - SQL table alias mapping - entries1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.yang.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 3_
                - suffixed key columns - {id1_0_3_}

[DEBUG] 2019-10-22 11:03:02.189 [main] EntityLoader - Static select for entity edu.yang.entity.YugiohCard [READ]: select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_name as card_nam2_1_0_, yugiohcard0_.card_type as card_typ3_1_0_, yugiohcard0_.user_id as user_id4_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_name as user_nam3_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-10-22 11:03:02.190 [main] Loader - Static select for action ACTION_MERGE on entity edu.yang.entity.YugiohCard: select yugiohcard0_.id as id1_1_1_, yugiohcard0_.card_name as card_nam2_1_1_, yugiohcard0_.card_type as card_typ3_1_1_, yugiohcard0_.user_id as user_id4_1_1_, entries1_.yugiohCard_id as yugiohCa4_2_3_, entries1_.id as id1_2_3_, entries1_.id as id1_2_0_, entries1_.price as price2_2_0_, entries1_.update_date as update_d3_2_0_, entries1_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id where yugiohcard0_.id=?
[DEBUG] 2019-10-22 11:03:02.190 [main] Loader - Static select for action ACTION_REFRESH on entity edu.yang.entity.YugiohCard: select yugiohcard0_.id as id1_1_1_, yugiohcard0_.card_name as card_nam2_1_1_, yugiohcard0_.card_type as card_typ3_1_1_, yugiohcard0_.user_id as user_id4_1_1_, entries1_.yugiohCard_id as yugiohCa4_2_3_, entries1_.id as id1_2_3_, entries1_.id as id1_2_0_, entries1_.price as price2_2_0_, entries1_.update_date as update_d3_2_0_, entries1_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id where yugiohcard0_.id=?
[DEBUG] 2019-10-22 11:03:02.190 [main] AbstractEntityPersister - Static SQL for entity: edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-10-22 11:03:02.190 [main] AbstractEntityPersister -  Version select: select id from yugioh_card_history where id =?
[DEBUG] 2019-10-22 11:03:02.190 [main] AbstractEntityPersister -  Snapshot select: select yugiohcard_.id, yugiohcard_.price as price2_2_, yugiohcard_.yugiohCard_id as yugiohCa4_2_ from yugioh_card_history yugiohcard_ where yugiohcard_.id=?
[DEBUG] 2019-10-22 11:03:02.190 [main] AbstractEntityPersister -  Insert 0: insert into yugioh_card_history (price, update_date, yugiohCard_id, id) values (?, ?, ?, ?)
[DEBUG] 2019-10-22 11:03:02.190 [main] AbstractEntityPersister -  Update 0: update yugioh_card_history set price=?, yugiohCard_id=? where id=?
[DEBUG] 2019-10-22 11:03:02.190 [main] AbstractEntityPersister -  Delete 0: delete from yugioh_card_history where id=?
[DEBUG] 2019-10-22 11:03:02.190 [main] AbstractEntityPersister -  Identity insert: insert into yugioh_card_history (price, update_date, yugiohCard_id) values (?, ?, ?)
[DEBUG] 2019-10-22 11:03:02.190 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c531172]
[DEBUG] 2019-10-22 11:03:02.190 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-10-22 11:03:02.190 [main] MetamodelGraphWalker - Visiting attribute path : ts
[DEBUG] 2019-10-22 11:03:02.190 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard
[DEBUG] 2019-10-22 11:03:02.194 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ac53c06]
[DEBUG] 2019-10-22 11:03:02.194 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardName
[DEBUG] 2019-10-22 11:03:02.194 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardType
[DEBUG] 2019-10-22 11:03:02.194 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.entries
[DEBUG] 2019-10-22 11:03:02.194 [main] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.entries
[DEBUG] 2019-10-22 11:03:02.194 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user
[DEBUG] 2019-10-22 11:03:02.194 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@236fdf]
[DEBUG] 2019-10-22 11:03:02.194 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.cards
[DEBUG] 2019-10-22 11:03:02.194 [main] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.user.cards
[DEBUG] 2019-10-22 11:03:02.194 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.password
[DEBUG] 2019-10-22 11:03:02.194 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.userName
[DEBUG] 2019-10-22 11:03:02.194 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-22 11:03:02.195 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-22 11:03:02.196 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCardHistory)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCardHistory)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCardHistory.yugiohCard)
             - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCardHistory.yugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCardHistory)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(yugiohCard)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCard)
                - SQL table alias mapping - yugiohcard1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-22 11:03:02.196 [main] EntityLoader - Static select for entity edu.yang.entity.YugiohCardHistory [NONE]: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_, yugiohcard1_.id as id1_1_1_, yugiohcard1_.card_name as card_nam2_1_1_, yugiohcard1_.card_type as card_typ3_1_1_, yugiohcard1_.user_id as user_id4_1_1_, user2_.id as id1_0_2_, user2_.user_password as user_pas2_0_2_, user2_.user_name as user_nam3_0_2_ from yugioh_card_history yugiohcard0_ left outer join yugioh_card yugiohcard1_ on yugiohcard0_.yugiohCard_id=yugiohcard1_.id left outer join user user2_ on yugiohcard1_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-10-22 11:03:02.196 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@653fb8d1]
[DEBUG] 2019-10-22 11:03:02.196 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-10-22 11:03:02.196 [main] MetamodelGraphWalker - Visiting attribute path : ts
[DEBUG] 2019-10-22 11:03:02.196 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard
[DEBUG] 2019-10-22 11:03:02.196 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@531ec978]
[DEBUG] 2019-10-22 11:03:02.196 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardName
[DEBUG] 2019-10-22 11:03:02.197 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardType
[DEBUG] 2019-10-22 11:03:02.197 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.entries
[DEBUG] 2019-10-22 11:03:02.197 [main] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.entries
[DEBUG] 2019-10-22 11:03:02.197 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user
[DEBUG] 2019-10-22 11:03:02.197 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11d4d979]
[DEBUG] 2019-10-22 11:03:02.197 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.cards
[DEBUG] 2019-10-22 11:03:02.197 [main] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.user.cards
[DEBUG] 2019-10-22 11:03:02.197 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.password
[DEBUG] 2019-10-22 11:03:02.197 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.userName
[DEBUG] 2019-10-22 11:03:02.197 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-22 11:03:02.197 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-22 11:03:02.199 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCardHistory)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCardHistory)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCardHistory.yugiohCard)
             - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCardHistory.yugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCardHistory)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(yugiohCard)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCard)
                - SQL table alias mapping - yugiohcard1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-22 11:03:02.199 [main] EntityLoader - Static select for entity edu.yang.entity.YugiohCardHistory [READ]: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_, yugiohcard1_.id as id1_1_1_, yugiohcard1_.card_name as card_nam2_1_1_, yugiohcard1_.card_type as card_typ3_1_1_, yugiohcard1_.user_id as user_id4_1_1_, user2_.id as id1_0_2_, user2_.user_password as user_pas2_0_2_, user2_.user_name as user_nam3_0_2_ from yugioh_card_history yugiohcard0_ left outer join yugioh_card yugiohcard1_ on yugiohcard0_.yugiohCard_id=yugiohcard1_.id left outer join user user2_ on yugiohcard1_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-10-22 11:03:02.199 [main] Loader - Static select for action ACTION_MERGE on entity edu.yang.entity.YugiohCardHistory: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card_history yugiohcard0_ where yugiohcard0_.id=?
[DEBUG] 2019-10-22 11:03:02.200 [main] Loader - Static select for action ACTION_REFRESH on entity edu.yang.entity.YugiohCardHistory: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card_history yugiohcard0_ where yugiohcard0_.id=?
[DEBUG] 2019-10-22 11:03:02.205 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a54acec]
[DEBUG] 2019-10-22 11:03:02.205 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19da993b]
[DEBUG] 2019-10-22 11:03:02.205 [main] MetamodelGraphWalker - Visiting attribute path : cardName
[DEBUG] 2019-10-22 11:03:02.205 [main] MetamodelGraphWalker - Visiting attribute path : cardType
[DEBUG] 2019-10-22 11:03:02.205 [main] MetamodelGraphWalker - Visiting attribute path : entries
[DEBUG] 2019-10-22 11:03:02.205 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c2df90e]
[DEBUG] 2019-10-22 11:03:02.206 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41f3aaf1]
[DEBUG] 2019-10-22 11:03:02.206 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-22 11:03:02.206 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-22 11:03:02.206 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-22 11:03:02.209 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-22 11:03:02.210 [main] LoadPlanTreePrinter - LoadPlan(collection=edu.yang.entity.User.cards)
    - Returns
       - CollectionReturnImpl(collection=edu.yang.entity.User.cards, querySpaceUid=<gen:0>, path=[edu.yang.entity.User.cards])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:1>, path=[edu.yang.entity.User.cards].<elements>)
             - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:2>, path=[edu.yang.entity.User.cards].<elements>.entries)
                - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:3>, path=[edu.yang.entity.User.cards].<elements>.entries.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.yang.entity.User.cards)
          - SQL table alias mapping - cards0_
          - alias suffix - 0_
          - suffixed key columns - {user_id4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCard)
                - SQL table alias mapping - cards0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-22 11:03:02.215 [main] CollectionLoader - Static select for collection edu.yang.entity.User.cards: select cards0_.user_id as user_id4_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_name as card_nam2_1_1_, cards0_.card_type as card_typ3_1_1_, cards0_.user_id as user_id4_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-10-22 11:03:02.215 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@61e86192]
[DEBUG] 2019-10-22 11:03:02.216 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34330f77]
[DEBUG] 2019-10-22 11:03:02.216 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-10-22 11:03:02.216 [main] MetamodelGraphWalker - Visiting attribute path : ts
[DEBUG] 2019-10-22 11:03:02.216 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard
[DEBUG] 2019-10-22 11:03:02.216 [main] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard
[DEBUG] 2019-10-22 11:03:02.216 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-22 11:03:02.216 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-22 11:03:02.217 [main] LoadPlanTreePrinter - LoadPlan(collection=edu.yang.entity.YugiohCard.entries)
    - Returns
       - CollectionReturnImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:0>, path=[edu.yang.entity.YugiohCard.entries])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:1>, path=[edu.yang.entity.YugiohCard.entries].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.yang.entity.YugiohCard.entries)
          - SQL table alias mapping - entries0_
          - alias suffix - 0_
          - suffixed key columns - {yugiohCa4_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCardHistory)
                - SQL table alias mapping - entries0_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

[DEBUG] 2019-10-22 11:03:02.217 [main] CollectionLoader - Static select for collection edu.yang.entity.YugiohCard.entries: select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-10-22 11:03:02.256 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-22 11:03:02.256 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-22 11:03:02.256 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-22 11:03:02.261 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-22 11:03:02.261 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-22 11:03:02.264 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-22 11:03:02.264 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-22 11:03:02.269 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@110b7837
[DEBUG] 2019-10-22 11:03:02.271 [main] SessionFactoryRegistry - Registering SessionFactory: 38642fb4-25da-4abc-99f5-b5e27c5e727f (<unnamed>)
[DEBUG] 2019-10-22 11:03:02.273 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-22 11:03:02.479 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-22 11:03:02.513 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where generatedAlias0.cardName like :param0
[DEBUG] 2019-10-22 11:03:02.535 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2589d787
[DEBUG] 2019-10-22 11:03:02.564 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.cardName like :param0
[DEBUG] 2019-10-22 11:03:02.571 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-22 11:03:02.584 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'yang'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'YugiohCard'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'cardName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-10-22 11:03:02.610 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-22 11:03:02.626 [main] FromElement - FromClause{level=1} : edu.yang.entity.YugiohCard (generatedAlias0) -> yugiohcard0_
[DEBUG] 2019-10-22 11:03:02.626 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-10-22 11:03:02.628 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-10-22 11:03:02.629 [main] DotNode - getDataType() : cardName -> org.hibernate.type.StringType@5bfc257
[DEBUG] 2019-10-22 11:03:02.629 [main] FromReferenceNode - Resolved : generatedAlias0.cardName -> yugiohcard0_.card_name
[DEBUG] 2019-10-22 11:03:02.630 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-22 11:03:02.631 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} yugiohcard0_.id ) ( FromClause{level=1} yugioh_card yugiohcard0_ ) ( where ( like ( yugiohcard0_.card_name yugiohcard0_.id cardName ) ? ) ) )
[DEBUG] 2019-10-22 11:03:02.640 [main] JoinProcessor - Using FROM fragment [yugioh_card yugiohcard0_]
[DEBUG] 2019-10-22 11:03:02.640 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-22 11:03:02.645 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (yugioh_card)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id as id1_1_' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
    |  \-[SQL_TOKEN] SqlFragment: 'yugiohcard0_.card_name as card_nam2_1_, yugiohcard0_.card_type as card_typ3_1_, yugiohcard0_.user_id as user_id4_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[yugiohcard0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'yugioh_card yugiohcard0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=yugioh_card,tableAlias=yugiohcard0_,origin=null,columns={,className=edu.yang.entity.YugiohCard}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'yugiohcard0_.card_name' {propertyName=cardName,dereferenceType=PRIMITIVE,getPropertyPath=cardName,path=generatedAlias0.cardName,tableAlias=yugiohcard0_,className=edu.yang.entity.YugiohCard,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
          |  \-[IDENT] IdentNode: 'cardName' {originalText=cardName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@5bfc257}

[DEBUG] 2019-10-22 11:03:02.645 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-22 11:03:02.652 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.cardName like :param0
[DEBUG] 2019-10-22 11:03:02.652 [main] QueryTranslatorImpl - SQL: select yugiohcard0_.id as id1_1_, yugiohcard0_.card_name as card_nam2_1_, yugiohcard0_.card_type as card_typ3_1_, yugiohcard0_.user_id as user_id4_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.card_name like ?
[DEBUG] 2019-10-22 11:03:02.652 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-22 11:03:02.675 [main] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_name as card_nam2_1_, yugiohcard0_.card_type as card_typ3_1_, yugiohcard0_.user_id as user_id4_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.card_name like ?
[DEBUG] 2019-10-22 11:03:02.701 [main] Loader - Result set row: 0
[DEBUG] 2019-10-22 11:03:02.704 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-10-22 11:03:02.714 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-10-22 11:03:02.716 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-10-22 11:03:02.716 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.716 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-10-22 11:03:02.716 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.716 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:02.716 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.725 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-22 11:03:02.725 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.730 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_name as user_nam3_0_0_, cards1_.user_id as user_id4_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_name as card_nam2_1_2_, cards1_.card_type as card_typ3_1_2_, cards1_.user_id as user_id4_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-10-22 11:03:02.738 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-22 11:03:02.739 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-22 11:03:02.741 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-10-22 11:03:02.743 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:02.744 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-10-22 11:03:02.744 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-22 11:03:02.744 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-10-22 11:03:02.744 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:02.744 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-10-22 11:03:02.744 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:02.744 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.744 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-10-22 11:03:02.744 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.744 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-10-22 11:03:02.744 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.745 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-10-22 11:03:02.745 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-10-22 11:03:02.745 [main] TwoPhaseLoad - Processing attribute `price` : value = 15.0
[DEBUG] 2019-10-22 11:03:02.745 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.745 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-10-22 11:03:02.0
[DEBUG] 2019-10-22 11:03:02.748 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.748 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-10-22 11:03:02.748 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.748 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-10-22 11:03:02.748 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-10-22 11:03:02.748 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-10-22 11:03:02.750 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.750 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-10-22 11:03:02.750 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.750 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:02.750 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.750 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-22 11:03:02.750 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.750 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-10-22 11:03:02.751 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:02.751 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-10-22 11:03:02.751 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-10-22 11:03:02.751 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:02.751 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:03:02.751 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:02.751 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:03:02.751 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-22 11:03:02.752 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-10-22 11:03:02.752 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-10-22 11:03:02.754 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-22 11:03:02.896 [main] SQL - select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_name as card_nam2_1_0_, yugiohcard0_.card_type as card_typ3_1_0_, yugiohcard0_.user_id as user_id4_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_name as user_nam3_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-10-22 11:03:02.900 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-22 11:03:02.901 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-22 11:03:02.902 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-10-22 11:03:02.903 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-10-22 11:03:02.903 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-10-22 11:03:02.903 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.903 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-10-22 11:03:02.903 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.903 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:02.903 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.903 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-22 11:03:02.903 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.903 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-10-22 11:03:02.903 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-10-22 11:03:02.903 [main] TwoPhaseLoad - Processing attribute `price` : value = 15.0
[DEBUG] 2019-10-22 11:03:02.904 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.904 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-10-22 11:03:02.0
[DEBUG] 2019-10-22 11:03:02.904 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.904 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-10-22 11:03:02.904 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.904 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-10-22 11:03:02.904 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-10-22 11:03:02.904 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:02.904 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.904 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-10-22 11:03:02.904 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.904 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-10-22 11:03:02.904 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.904 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-10-22 11:03:02.905 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:02.905 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-10-22 11:03:02.905 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:02.905 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-22 11:03:02.907 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:02.907 [main] SQL - select cards0_.user_id as user_id4_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_name as card_nam2_1_1_, cards0_.card_type as card_typ3_1_1_, cards0_.user_id as user_id4_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-10-22 11:03:02.909 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:02.910 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-22 11:03:02.910 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:02.911 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-10-22 11:03:02.911 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:02.912 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-10-22 11:03:02.912 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-10-22 11:03:02.912 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.912 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-10-22 11:03:02.912 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.912 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:02.912 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.912 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-22 11:03:02.912 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:02.914 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-10-22 11:03:02.915 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:03:02.916 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:02.916 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:03:02.916 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-22 11:03:02.916 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-22 11:03:02.916 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-10-22 11:03:02.916 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-10-22 11:03:02.920 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-10-22 11:03:02.920 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:02.920 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-10-22 11:03:02.920 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:02.920 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-22 11:03:02.920 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-22 11:03:02.920 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCard#1
[DEBUG] 2019-10-22 11:03:02.920 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-22 11:03:03.194 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where generatedAlias0.cardName like :param0
[DEBUG] 2019-10-22 11:03:03.195 [main] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_name as card_nam2_1_, yugiohcard0_.card_type as card_typ3_1_, yugiohcard0_.user_id as user_id4_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.card_name like ?
[DEBUG] 2019-10-22 11:03:03.198 [main] Loader - Result set row: 0
[DEBUG] 2019-10-22 11:03:03.198 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-10-22 11:03:03.198 [main] Loader - Result set row: 1
[DEBUG] 2019-10-22 11:03:03.198 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-10-22 11:03:03.198 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-10-22 11:03:03.198 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-10-22 11:03:03.199 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.199 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-10-22 11:03:03.199 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.199 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:03.200 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.200 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-22 11:03:03.201 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.201 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_name as user_nam3_0_0_, cards1_.user_id as user_id4_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_name as card_nam2_1_2_, cards1_.card_type as card_typ3_1_2_, cards1_.user_id as user_id4_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-10-22 11:03:03.205 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-22 11:03:03.205 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-22 11:03:03.205 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-10-22 11:03:03.205 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:03.206 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-10-22 11:03:03.206 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-22 11:03:03.206 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-10-22 11:03:03.206 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:03.206 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-10-22 11:03:03.207 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:03.207 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.207 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-10-22 11:03:03.207 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.207 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-10-22 11:03:03.207 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.207 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-10-22 11:03:03.207 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-10-22 11:03:03.207 [main] TwoPhaseLoad - Processing attribute `price` : value = 15.0
[DEBUG] 2019-10-22 11:03:03.207 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.207 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-10-22 11:03:03.0
[DEBUG] 2019-10-22 11:03:03.207 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.207 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-10-22 11:03:03.207 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.207 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-10-22 11:03:03.207 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:03.207 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-10-22 11:03:03.207 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-10-22 11:03:03.207 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:03.207 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:03:03.208 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:03.208 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:03:03.208 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-22 11:03:03.208 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-10-22 11:03:03.208 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-10-22 11:03:03.208 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-10-22 11:03:03.208 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-10-22 11:03:03.208 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.208 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-10-22 11:03:03.208 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.208 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:03.208 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.208 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-22 11:03:03.208 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.209 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-10-22 11:03:03.209 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-22 11:03:03.392 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_name as user_nam3_0_0_, cards1_.user_id as user_id4_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_name as card_nam2_1_2_, cards1_.card_type as card_typ3_1_2_, cards1_.user_id as user_id4_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-10-22 11:03:03.394 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-22 11:03:03.394 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-22 11:03:03.394 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-10-22 11:03:03.394 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:03.394 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-10-22 11:03:03.394 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-22 11:03:03.395 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-10-22 11:03:03.395 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:03.395 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-10-22 11:03:03.395 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:03.395 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.395 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-10-22 11:03:03.395 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.395 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-10-22 11:03:03.395 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.395 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-10-22 11:03:03.395 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-10-22 11:03:03.395 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-10-22 11:03:03.395 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.395 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-10-22 11:03:03.395 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.395 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:03.395 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.395 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-22 11:03:03.395 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.395 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-10-22 11:03:03.396 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-10-22 11:03:03.396 [main] TwoPhaseLoad - Processing attribute `price` : value = 15.0
[DEBUG] 2019-10-22 11:03:03.396 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.397 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-10-22 11:03:03.0
[DEBUG] 2019-10-22 11:03:03.397 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.397 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-10-22 11:03:03.397 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.397 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-10-22 11:03:03.397 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-10-22 11:03:03.397 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-10-22 11:03:03.397 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.397 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-10-22 11:03:03.397 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.397 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:03.397 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.397 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-22 11:03:03.397 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.398 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-10-22 11:03:03.398 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:03.398 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-10-22 11:03:03.398 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-10-22 11:03:03.398 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:03.398 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:03:03.399 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:03.399 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:03:03.400 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-22 11:03:03.400 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-10-22 11:03:03.400 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-22 11:03:03.404 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-22 11:03:03.404 [main] TransactionImpl - begin
[DEBUG] 2019-10-22 11:03:03.415 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-22 11:03:03.419 [main] SQL - insert into yugioh_card (card_name, card_type, user_id) values (?, ?, ?)
[DEBUG] 2019-10-22 11:03:03.425 [main] IdentifierGeneratorHelper - Natively generated identity: 3
[DEBUG] 2019-10-22 11:03:03.425 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-22 11:03:03.427 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-22 11:03:03.429 [main] SQL - insert into yugioh_card_history (price, update_date, yugiohCard_id) values (?, ?, ?)
[DEBUG] 2019-10-22 11:03:03.440 [main] IdentifierGeneratorHelper - Natively generated identity: 2
[DEBUG] 2019-10-22 11:03:03.440 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-22 11:03:03.442 [main] TransactionImpl - committing
[DEBUG] 2019-10-22 11:03:03.442 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-22 11:03:03.444 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-22 11:03:03.449 [main] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#3], was: [<unreferenced>] (initialized)
[DEBUG] 2019-10-22 11:03:03.450 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2019-10-22 11:03:03.452 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-10-22 11:03:03.454 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-22 11:03:03.455 [main] EntityPrinter - edu.yang.entity.YugiohCardHistory{yugiohCard=edu.yang.entity.YugiohCard#3, price=35.0, id=2, ts=2019-10-22 11:03:03.429}
[DEBUG] 2019-10-22 11:03:03.455 [main] EntityPrinter - edu.yang.entity.YugiohCard{entries=[edu.yang.entity.YugiohCardHistory#2], cardName=Dark Magician of Chaos, cardType=Monster, id=3, user=edu.yang.entity.User#1}
[DEBUG] 2019-10-22 11:03:03.458 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-22 11:03:03.458 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-22 11:03:03.460 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-22 11:03:03.460 [main] TransactionImpl - begin
[DEBUG] 2019-10-22 11:03:03.461 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-22 11:03:03.461 [main] SQL - insert into yugioh_card_history (price, update_date, yugiohCard_id) values (?, ?, ?)
[DEBUG] 2019-10-22 11:03:03.463 [main] IdentifierGeneratorHelper - Natively generated identity: 3
[DEBUG] 2019-10-22 11:03:03.463 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-22 11:03:03.463 [main] TransactionImpl - committing
[DEBUG] 2019-10-22 11:03:03.463 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-22 11:03:03.463 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-22 11:03:03.463 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-10-22 11:03:03.463 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-10-22 11:03:03.463 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-22 11:03:03.464 [main] EntityPrinter - edu.yang.entity.YugiohCardHistory{yugiohCard=edu.yang.entity.YugiohCard#3, price=35.0, id=3, ts=2019-10-22 11:03:03.461}
[DEBUG] 2019-10-22 11:03:03.465 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-22 11:03:03.465 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-22 11:03:03.632 [main] SQL - select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_, yugiohcard1_.id as id1_1_1_, yugiohcard1_.card_name as card_nam2_1_1_, yugiohcard1_.card_type as card_typ3_1_1_, yugiohcard1_.user_id as user_id4_1_1_, user2_.id as id1_0_2_, user2_.user_password as user_pas2_0_2_, user2_.user_name as user_nam3_0_2_ from yugioh_card_history yugiohcard0_ left outer join yugioh_card yugiohcard1_ on yugiohcard0_.yugiohCard_id=yugiohcard1_.id left outer join user user2_ on yugiohcard1_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-10-22 11:03:03.636 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-22 11:03:03.637 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-22 11:03:03.640 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-10-22 11:03:03.640 [main] TwoPhaseLoad - Processing attribute `price` : value = 15.0
[DEBUG] 2019-10-22 11:03:03.640 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.640 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-10-22 11:03:03.0
[DEBUG] 2019-10-22 11:03:03.640 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.640 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-10-22 11:03:03.640 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.640 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-10-22 11:03:03.640 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-10-22 11:03:03.640 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-10-22 11:03:03.640 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.640 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-10-22 11:03:03.640 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.640 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:03.640 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.640 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-22 11:03:03.640 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.646 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-10-22 11:03:03.646 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-10-22 11:03:03.646 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:03.646 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.647 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-10-22 11:03:03.647 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.647 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-10-22 11:03:03.647 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.649 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-10-22 11:03:03.649 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-22 11:03:03.650 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:03.656 [main] SQL - select cards0_.user_id as user_id4_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_name as card_nam2_1_1_, cards0_.card_type as card_typ3_1_1_, cards0_.user_id as user_id4_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-10-22 11:03:03.661 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:03.662 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-22 11:03:03.662 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:03.662 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-10-22 11:03:03.662 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:03.662 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-10-22 11:03:03.662 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-10-22 11:03:03.662 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.662 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-10-22 11:03:03.662 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.662 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:03.662 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.662 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-22 11:03:03.662 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.662 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-10-22 11:03:03.662 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:03:03.662 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:03.662 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:03:03.663 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-22 11:03:03.663 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-22 11:03:03.665 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-10-22 11:03:03.665 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-10-22 11:03:03.668 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-10-22 11:03:03.668 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:03.668 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-10-22 11:03:03.668 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:03.668 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-22 11:03:03.668 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-22 11:03:03.668 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-10-22 11:03:03.668 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-10-22 11:03:03.673 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-10-22 11:03:03.673 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-22 11:03:03.674 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-10-22 11:03:03.674 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:03.674 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-10-22 11:03:03.674 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:03.675 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-22 11:03:03.675 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-22 11:03:03.675 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCardHistory#1
[DEBUG] 2019-10-22 11:03:03.675 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-22 11:03:03.873 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_name as user_nam3_0_0_, cards1_.user_id as user_id4_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_name as card_nam2_1_2_, cards1_.card_type as card_typ3_1_2_, cards1_.user_id as user_id4_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-10-22 11:03:03.876 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-22 11:03:03.876 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-22 11:03:03.876 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.User.cards#2]
[DEBUG] 2019-10-22 11:03:03.876 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#2]
[DEBUG] 2019-10-22 11:03:03.876 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:03.876 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.876 [main] TwoPhaseLoad - Processing attribute `password` : value = greenMantaRays
[DEBUG] 2019-10-22 11:03:03.876 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.876 [main] TwoPhaseLoad - Processing attribute `userName` : value = johnBones2019
[DEBUG] 2019-10-22 11:03:03.876 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.876 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#2]
[DEBUG] 2019-10-22 11:03:03.876 [main] CollectionLoadContext - No collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:03.876 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:03:03.877 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#2]
[DEBUG] 2019-10-22 11:03:03.877 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:03:03.877 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-22 11:03:03.877 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#2
[DEBUG] 2019-10-22 11:03:03.877 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-22 11:03:03.880 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-22 11:03:03.880 [main] TransactionImpl - begin
[DEBUG] 2019-10-22 11:03:03.892 [main] TransactionImpl - committing
[DEBUG] 2019-10-22 11:03:03.892 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-22 11:03:03.892 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-22 11:03:03.892 [main] Collections - Collection dereferenced: [edu.yang.entity.User.cards#2]
[DEBUG] 2019-10-22 11:03:03.893 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2019-10-22 11:03:03.893 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2019-10-22 11:03:03.893 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-22 11:03:03.893 [main] EntityPrinter - edu.yang.entity.User{password=greenMantaRays, cards=[], id=2, userName=johnBones2019}
[DEBUG] 2019-10-22 11:03:03.904 [main] SQL - delete from user where id=?
[DEBUG] 2019-10-22 11:03:03.909 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-22 11:03:03.909 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-22 11:03:03.909 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2019-10-22 11:03:03.910 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2019-10-22 11:03:03.910 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.User as generatedAlias0
[DEBUG] 2019-10-22 11:03:03.911 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-22 11:03:03.912 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'edu'
       |     |  |  |  \-[IDENT] Node: 'yang'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2019-10-22 11:03:03.912 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-22 11:03:03.913 [main] FromElement - FromClause{level=1} : edu.yang.entity.User (generatedAlias0) -> user0_
[DEBUG] 2019-10-22 11:03:03.913 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2019-10-22 11:03:03.913 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-22 11:03:03.914 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) )
[DEBUG] 2019-10-22 11:03:03.914 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2019-10-22 11:03:03.914 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-22 11:03:03.914 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_0_' {alias=generatedAlias0, className=edu.yang.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.user_password as user_pas2_0_, user0_.user_name as user_nam3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=edu.yang.entity.User}}

[DEBUG] 2019-10-22 11:03:03.914 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-22 11:03:03.914 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.User as generatedAlias0
[DEBUG] 2019-10-22 11:03:03.914 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_0_, user0_.user_password as user_pas2_0_, user0_.user_name as user_nam3_0_ from user user0_
[DEBUG] 2019-10-22 11:03:03.914 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-22 11:03:03.916 [main] SQL - select user0_.id as id1_0_, user0_.user_password as user_pas2_0_, user0_.user_name as user_nam3_0_ from user user0_
[DEBUG] 2019-10-22 11:03:03.922 [main] Loader - Result set row: 0
[DEBUG] 2019-10-22 11:03:03.922 [main] Loader - Result row: EntityKey[edu.yang.entity.User#1]
[DEBUG] 2019-10-22 11:03:03.922 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-10-22 11:03:03.922 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:03.922 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.922 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-10-22 11:03:03.922 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.922 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-10-22 11:03:03.922 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.922 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-10-22 11:03:03.923 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:03.923 [main] SQL - select cards0_.user_id as user_id4_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_name as card_nam2_1_1_, cards0_.card_type as card_typ3_1_1_, cards0_.user_id as user_id4_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-10-22 11:03:03.924 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:03.924 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-22 11:03:03.924 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:03.925 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-10-22 11:03:03.925 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:03.925 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-10-22 11:03:03.926 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-10-22 11:03:03.926 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.926 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-10-22 11:03:03.926 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.926 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:03.926 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.926 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-22 11:03:03.926 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.926 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-10-22 11:03:03.926 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-10-22 11:03:03.926 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-10-22 11:03:03.926 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.926 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-10-22 11:03:03.926 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.926 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:03.926 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.926 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-22 11:03:03.926 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.926 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-10-22 11:03:03.926 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:03:03.926 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:03.926 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:03:03.927 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-22 11:03:03.927 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-22 11:03:03.927 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-10-22 11:03:03.927 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-10-22 11:03:03.932 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-10-22 11:03:03.932 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:03.932 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-10-22 11:03:03.932 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:03.932 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-22 11:03:03.933 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-22 11:03:03.933 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-10-22 11:03:03.933 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-10-22 11:03:03.938 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-10-22 11:03:03.938 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-22 11:03:03.938 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-10-22 11:03:03.939 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-10-22 11:03:03.939 [main] TwoPhaseLoad - Processing attribute `price` : value = 15.0
[DEBUG] 2019-10-22 11:03:03.939 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.939 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-10-22 11:03:03.0
[DEBUG] 2019-10-22 11:03:03.939 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.939 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-10-22 11:03:03.939 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:03.939 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-10-22 11:03:03.939 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:03.939 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-10-22 11:03:03.939 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:03.939 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-22 11:03:03.939 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-22 11:03:03.940 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-22 11:03:04.022 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_name as user_nam3_0_0_, cards1_.user_id as user_id4_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_name as card_nam2_1_2_, cards1_.card_type as card_typ3_1_2_, cards1_.user_id as user_id4_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-10-22 11:03:04.024 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-22 11:03:04.024 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-22 11:03:04.025 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-10-22 11:03:04.025 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:04.025 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-10-22 11:03:04.025 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-22 11:03:04.026 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-10-22 11:03:04.026 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Processing attribute `price` : value = 15.0
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-10-22 11:03:04.0
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.026 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:04.027 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.027 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-22 11:03:04.027 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.027 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-10-22 11:03:04.027 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:04.027 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-10-22 11:03:04.027 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-10-22 11:03:04.027 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:04.027 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:03:04.027 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:04.027 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:03:04.027 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-22 11:03:04.027 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-10-22 11:03:04.029 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-22 11:03:04.115 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_name as user_nam3_0_0_, cards1_.user_id as user_id4_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_name as card_nam2_1_2_, cards1_.card_type as card_typ3_1_2_, cards1_.user_id as user_id4_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-10-22 11:03:04.120 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-22 11:03:04.121 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-22 11:03:04.125 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-10-22 11:03:04.125 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:04.126 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-10-22 11:03:04.126 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-22 11:03:04.126 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-10-22 11:03:04.126 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:04.127 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-10-22 11:03:04.127 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:04.127 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.127 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-10-22 11:03:04.127 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.127 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-10-22 11:03:04.127 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.127 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-10-22 11:03:04.127 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-10-22 11:03:04.127 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-10-22 11:03:04.127 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.127 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-10-22 11:03:04.130 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.130 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:04.130 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.130 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-22 11:03:04.130 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.130 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-10-22 11:03:04.130 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-10-22 11:03:04.130 [main] TwoPhaseLoad - Processing attribute `price` : value = 15.0
[DEBUG] 2019-10-22 11:03:04.130 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.130 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-10-22 11:03:04.0
[DEBUG] 2019-10-22 11:03:04.130 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.130 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-10-22 11:03:04.130 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.130 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-10-22 11:03:04.130 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-10-22 11:03:04.130 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-10-22 11:03:04.130 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.130 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-10-22 11:03:04.130 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.130 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:04.130 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.130 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-22 11:03:04.130 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.130 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-10-22 11:03:04.130 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:04.132 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-10-22 11:03:04.132 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-10-22 11:03:04.132 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:04.132 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:03:04.132 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-10-22 11:03:04.132 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:03:04.132 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-22 11:03:04.132 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-10-22 11:03:04.132 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-22 11:03:04.234 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-22 11:03:04.234 [main] TransactionImpl - begin
[DEBUG] 2019-10-22 11:03:04.236 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-22 11:03:04.236 [main] SQL - insert into user (user_password, user_name) values (?, ?)
[DEBUG] 2019-10-22 11:03:04.237 [main] IdentifierGeneratorHelper - Natively generated identity: 3
[DEBUG] 2019-10-22 11:03:04.237 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-22 11:03:04.238 [main] TransactionImpl - committing
[DEBUG] 2019-10-22 11:03:04.238 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-22 11:03:04.238 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-22 11:03:04.238 [main] Collections - Collection found: [edu.yang.entity.User.cards#3], was: [<unreferenced>] (initialized)
[DEBUG] 2019-10-22 11:03:04.238 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-10-22 11:03:04.238 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-10-22 11:03:04.238 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-22 11:03:04.238 [main] EntityPrinter - edu.yang.entity.User{password=brownTurnip, cards=[], id=3, userName=redRainbow19}
[DEBUG] 2019-10-22 11:03:04.240 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-22 11:03:04.240 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-22 11:03:04.240 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_name as user_nam3_0_0_, cards1_.user_id as user_id4_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_name as card_nam2_1_2_, cards1_.card_type as card_typ3_1_2_, cards1_.user_id as user_id4_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-10-22 11:03:04.243 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-22 11:03:04.244 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-22 11:03:04.244 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.User.cards#3]
[DEBUG] 2019-10-22 11:03:04.244 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#3]
[DEBUG] 2019-10-22 11:03:04.244 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-22 11:03:04.244 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.244 [main] TwoPhaseLoad - Processing attribute `password` : value = brownTurnip
[DEBUG] 2019-10-22 11:03:04.244 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.244 [main] TwoPhaseLoad - Processing attribute `userName` : value = redRainbow19
[DEBUG] 2019-10-22 11:03:04.244 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-22 11:03:04.244 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#3]
[DEBUG] 2019-10-22 11:03:04.244 [main] CollectionLoadContext - No collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:03:04.244 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:03:04.244 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#3]
[DEBUG] 2019-10-22 11:03:04.244 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:03:04.244 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-22 11:03:04.244 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#3
[DEBUG] 2019-10-22 11:03:04.244 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
