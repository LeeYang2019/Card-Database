[DEBUG] 2019-10-22 11:04:18.041 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-22 11:04:18.051 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-22 11:04:18.061 [http-nio-8080-exec-3] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-22 11:04:18.271 [http-nio-8080-exec-3] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-22 11:04:18.277 [http-nio-8080-exec-3] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-22 11:04:18.778 [http-nio-8080-exec-3] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-22 11:04:18.779 [http-nio-8080-exec-3] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-22 11:04:18.886 [http-nio-8080-exec-3] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-22 11:04:20.255 [http-nio-8080-exec-3] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-22 11:04:20.339 [http-nio-8080-exec-3] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-22 11:04:20.344 [http-nio-8080-exec-3] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-22 11:04:20.431 [http-nio-8080-exec-3] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-22 11:04:20.559 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@738675a5
[DEBUG] 2019-10-22 11:04:20.559 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@738675a5
[DEBUG] 2019-10-22 11:04:20.559 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@738675a5
[DEBUG] 2019-10-22 11:04:20.561 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@737f24ac
[DEBUG] 2019-10-22 11:04:20.561 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47ee08af
[DEBUG] 2019-10-22 11:04:20.562 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@343be6f5
[DEBUG] 2019-10-22 11:04:20.563 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5e98937a
[DEBUG] 2019-10-22 11:04:20.563 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5e98937a
[DEBUG] 2019-10-22 11:04:20.563 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5e98937a
[DEBUG] 2019-10-22 11:04:20.565 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7727730d
[DEBUG] 2019-10-22 11:04:20.565 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7727730d
[DEBUG] 2019-10-22 11:04:20.565 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7727730d
[DEBUG] 2019-10-22 11:04:20.566 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2ccd7d38
[DEBUG] 2019-10-22 11:04:20.567 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2ccd7d38
[DEBUG] 2019-10-22 11:04:20.567 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2ccd7d38
[DEBUG] 2019-10-22 11:04:20.568 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@49a35f2d
[DEBUG] 2019-10-22 11:04:20.569 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@49a35f2d
[DEBUG] 2019-10-22 11:04:20.569 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@49a35f2d
[DEBUG] 2019-10-22 11:04:20.570 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@40eb328f
[DEBUG] 2019-10-22 11:04:20.570 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@40eb328f
[DEBUG] 2019-10-22 11:04:20.570 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@40eb328f
[DEBUG] 2019-10-22 11:04:20.572 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7eca3a49
[DEBUG] 2019-10-22 11:04:20.572 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7eca3a49
[DEBUG] 2019-10-22 11:04:20.572 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7eca3a49
[DEBUG] 2019-10-22 11:04:20.573 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@36cfdbf6
[DEBUG] 2019-10-22 11:04:20.573 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@36cfdbf6
[DEBUG] 2019-10-22 11:04:20.574 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36cfdbf6
[DEBUG] 2019-10-22 11:04:20.575 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1256c0d
[DEBUG] 2019-10-22 11:04:20.575 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1256c0d
[DEBUG] 2019-10-22 11:04:20.576 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@660e0518
[DEBUG] 2019-10-22 11:04:20.576 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@660e0518
[DEBUG] 2019-10-22 11:04:20.579 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@615f8e53
[DEBUG] 2019-10-22 11:04:20.579 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@615f8e53
[DEBUG] 2019-10-22 11:04:20.579 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@14e92e3b
[DEBUG] 2019-10-22 11:04:20.580 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@32429324
[DEBUG] 2019-10-22 11:04:20.581 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4716dd98
[DEBUG] 2019-10-22 11:04:20.581 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4716dd98
[DEBUG] 2019-10-22 11:04:20.582 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5ba19e8e
[DEBUG] 2019-10-22 11:04:20.583 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5ba19e8e
[DEBUG] 2019-10-22 11:04:20.609 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@3f5d0377
[DEBUG] 2019-10-22 11:04:20.613 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3f5d0377
[DEBUG] 2019-10-22 11:04:20.618 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@267c966b
[DEBUG] 2019-10-22 11:04:20.618 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@267c966b
[DEBUG] 2019-10-22 11:04:20.625 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6f852d84
[DEBUG] 2019-10-22 11:04:20.625 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6f852d84
[DEBUG] 2019-10-22 11:04:20.628 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@44e162f0
[DEBUG] 2019-10-22 11:04:20.628 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@44e162f0
[DEBUG] 2019-10-22 11:04:20.631 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2ddc8725
[DEBUG] 2019-10-22 11:04:20.631 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2ddc8725
[DEBUG] 2019-10-22 11:04:20.633 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4e1493c7
[DEBUG] 2019-10-22 11:04:20.633 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4e1493c7
[DEBUG] 2019-10-22 11:04:20.636 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4f184320
[DEBUG] 2019-10-22 11:04:20.636 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4f184320
[DEBUG] 2019-10-22 11:04:20.639 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@376a159c
[DEBUG] 2019-10-22 11:04:20.639 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@376a159c
[DEBUG] 2019-10-22 11:04:20.641 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@522727fe
[DEBUG] 2019-10-22 11:04:20.641 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@522727fe
[DEBUG] 2019-10-22 11:04:20.644 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@30af3fe2
[DEBUG] 2019-10-22 11:04:20.644 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@30af3fe2
[DEBUG] 2019-10-22 11:04:20.646 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@30af3fe2
[DEBUG] 2019-10-22 11:04:20.658 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@737f8710
[DEBUG] 2019-10-22 11:04:20.660 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@51b49e54
[DEBUG] 2019-10-22 11:04:20.660 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@51b49e54
[DEBUG] 2019-10-22 11:04:20.661 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@51b49e54
[DEBUG] 2019-10-22 11:04:20.664 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3771943f
[DEBUG] 2019-10-22 11:04:20.665 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@27d51824
[DEBUG] 2019-10-22 11:04:20.665 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@27d51824
[DEBUG] 2019-10-22 11:04:20.667 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@15471438
[DEBUG] 2019-10-22 11:04:20.667 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@15471438
[DEBUG] 2019-10-22 11:04:20.672 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f3d731a
[DEBUG] 2019-10-22 11:04:20.672 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f3d731a
[DEBUG] 2019-10-22 11:04:20.676 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1c4883e2
[DEBUG] 2019-10-22 11:04:20.677 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1c4883e2
[DEBUG] 2019-10-22 11:04:20.678 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@36cb7c23
[DEBUG] 2019-10-22 11:04:20.678 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@36cb7c23
[DEBUG] 2019-10-22 11:04:20.678 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5dcfc62e
[DEBUG] 2019-10-22 11:04:20.682 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@48d992cc
[DEBUG] 2019-10-22 11:04:20.682 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@48d992cc
[DEBUG] 2019-10-22 11:04:20.683 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@48d992cc
[DEBUG] 2019-10-22 11:04:20.687 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6c7029ba
[DEBUG] 2019-10-22 11:04:20.687 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6c7029ba
[DEBUG] 2019-10-22 11:04:20.687 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6c7029ba
[DEBUG] 2019-10-22 11:04:20.688 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@74785dd3
[DEBUG] 2019-10-22 11:04:20.688 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@390d0626
[DEBUG] 2019-10-22 11:04:20.693 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5956db97
[DEBUG] 2019-10-22 11:04:20.693 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5956db97
[DEBUG] 2019-10-22 11:04:20.693 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5956db97
[DEBUG] 2019-10-22 11:04:20.694 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3fa63e5a
[DEBUG] 2019-10-22 11:04:20.694 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3fa63e5a
[DEBUG] 2019-10-22 11:04:20.694 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3fa63e5a
[DEBUG] 2019-10-22 11:04:20.697 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1952462c
[DEBUG] 2019-10-22 11:04:20.699 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6b10014b
[DEBUG] 2019-10-22 11:04:20.707 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6f40aa78
[DEBUG] 2019-10-22 11:04:20.707 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6f40aa78
[DEBUG] 2019-10-22 11:04:20.707 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16daac91
[DEBUG] 2019-10-22 11:04:20.709 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3d411d0b
[DEBUG] 2019-10-22 11:04:20.709 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3d411d0b
[DEBUG] 2019-10-22 11:04:20.714 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6173d9dd
[DEBUG] 2019-10-22 11:04:20.715 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6173d9dd
[DEBUG] 2019-10-22 11:04:20.715 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9725041
[DEBUG] 2019-10-22 11:04:20.715 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@670330c1
[DEBUG] 2019-10-22 11:04:20.721 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4d29d597
[DEBUG] 2019-10-22 11:04:20.733 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6d8ef0cc
[DEBUG] 2019-10-22 11:04:20.733 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6d8ef0cc
[DEBUG] 2019-10-22 11:04:20.736 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@26a4d595
[DEBUG] 2019-10-22 11:04:20.736 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@65b8024c
[DEBUG] 2019-10-22 11:04:20.736 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4b7869c9
[DEBUG] 2019-10-22 11:04:20.737 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@459236db
[DEBUG] 2019-10-22 11:04:20.737 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@451a5b81
[DEBUG] 2019-10-22 11:04:20.743 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60159b0c
[DEBUG] 2019-10-22 11:04:20.743 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@68ab90e6
[DEBUG] 2019-10-22 11:04:20.743 [http-nio-8080-exec-3] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3cdb57c6
[DEBUG] 2019-10-22 11:04:20.793 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-22 11:04:20.835 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-22 11:04:20.838 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-22 11:04:20.838 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-22 11:04:20.847 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-22 11:04:20.855 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-22 11:04:20.856 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-22 11:04:20.861 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-22 11:04:20.862 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-22 11:04:20.863 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-22 11:04:20.866 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-22 11:04:20.867 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-22 11:04:20.867 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-22 11:04:20.868 [http-nio-8080-exec-3] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-22 11:04:20.880 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/yugioh_card_db
[INFO ] 2019-10-22 11:04:20.885 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-22 11:04:20.885 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-22 11:04:21.259 [http-nio-8080-exec-3] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-22 11:04:22.665 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-22 11:04:22.671 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-22 11:04:22.671 [http-nio-8080-exec-3] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-22 11:04:22.757 [http-nio-8080-exec-3] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-22 11:04:22.997 [http-nio-8080-exec-3] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-22 11:04:23.123 [http-nio-8080-exec-3] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-22 11:04:23.292 [http-nio-8080-exec-3] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-22 11:04:23.299 [http-nio-8080-exec-3] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5396dfb2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@428a4a8a]
[DEBUG] 2019-10-22 11:04:23.453 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: edu.yang.entity.YugiohCard
[DEBUG] 2019-10-22 11:04:23.524 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-22 11:04:23.549 [http-nio-8080-exec-3] EntityBinder - Import with entity name YugiohCard
[DEBUG] 2019-10-22 11:04:23.560 [http-nio-8080-exec-3] EntityBinder - Bind entity edu.yang.entity.YugiohCard on table yugioh_card
[DEBUG] 2019-10-22 11:04:23.637 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:04:23.646 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-22 11:04:23.652 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:id]
[DEBUG] 2019-10-22 11:04:23.657 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-22 11:04:23.680 [http-nio-8080-exec-3] PropertyBinder - Building property id
[DEBUG] 2019-10-22 11:04:23.688 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-22 11:04:23.697 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:04:23.698 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property cardName with lazy=false
[DEBUG] 2019-10-22 11:04:23.698 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardName]
[DEBUG] 2019-10-22 11:04:23.698 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for cardName
[DEBUG] 2019-10-22 11:04:23.698 [http-nio-8080-exec-3] PropertyBinder - Building property cardName
[DEBUG] 2019-10-22 11:04:23.699 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_type, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:04:23.699 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property cardType with lazy=false
[DEBUG] 2019-10-22 11:04:23.699 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardType]
[DEBUG] 2019-10-22 11:04:23.699 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for cardType
[DEBUG] 2019-10-22 11:04:23.699 [http-nio-8080-exec-3] PropertyBinder - Building property cardType
[DEBUG] 2019-10-22 11:04:23.702 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='yugiohCard'}
[DEBUG] 2019-10-22 11:04:23.703 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=entries, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:04:23.707 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:04:23.731 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:04:23.732 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=entries_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:04:23.732 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='entries_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-22 11:04:23.737 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='yugiohCard'}
[DEBUG] 2019-10-22 11:04:23.737 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='yugiohCard'}
[DEBUG] 2019-10-22 11:04:23.737 [http-nio-8080-exec-3] CollectionBinder - Collection role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:04:23.754 [http-nio-8080-exec-3] PropertyBinder - Building property entries
[DEBUG] 2019-10-22 11:04:23.754 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-22 11:04:23.754 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:04:23.758 [http-nio-8080-exec-3] PropertyBinder - Building property user
[DEBUG] 2019-10-22 11:04:23.760 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: edu.yang.entity.User
[DEBUG] 2019-10-22 11:04:23.760 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-22 11:04:23.764 [http-nio-8080-exec-3] EntityBinder - Import with entity name User
[DEBUG] 2019-10-22 11:04:23.764 [http-nio-8080-exec-3] EntityBinder - Bind entity edu.yang.entity.User on table user
[DEBUG] 2019-10-22 11:04:23.768 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:04:23.768 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-22 11:04:23.768 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:id]
[DEBUG] 2019-10-22 11:04:23.768 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-22 11:04:23.768 [http-nio-8080-exec-3] PropertyBinder - Building property id
[DEBUG] 2019-10-22 11:04:23.768 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-22 11:04:23.771 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-22 11:04:23.771 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=cards, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:04:23.771 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:04:23.771 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:04:23.772 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=cards_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:04:23.772 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='cards_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-22 11:04:23.772 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-22 11:04:23.772 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-22 11:04:23.772 [http-nio-8080-exec-3] CollectionBinder - Collection role: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:04:23.773 [http-nio-8080-exec-3] PropertyBinder - Building property cards
[DEBUG] 2019-10-22 11:04:23.773 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_password, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:04:23.773 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2019-10-22 11:04:23.773 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:password]
[DEBUG] 2019-10-22 11:04:23.773 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2019-10-22 11:04:23.773 [http-nio-8080-exec-3] PropertyBinder - Building property password
[DEBUG] 2019-10-22 11:04:23.773 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:04:23.773 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-22 11:04:23.773 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:userName]
[DEBUG] 2019-10-22 11:04:23.773 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-22 11:04:23.775 [http-nio-8080-exec-3] PropertyBinder - Building property userName
[DEBUG] 2019-10-22 11:04:23.777 [http-nio-8080-exec-3] AnnotationBinder - Binding entity from annotated class: edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-10-22 11:04:23.777 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-22 11:04:23.777 [http-nio-8080-exec-3] EntityBinder - Import with entity name YugiohCardHistory
[DEBUG] 2019-10-22 11:04:23.777 [http-nio-8080-exec-3] EntityBinder - Bind entity edu.yang.entity.YugiohCardHistory on table yugioh_card_history
[DEBUG] 2019-10-22 11:04:23.783 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:04:23.783 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-22 11:04:23.783 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCardHistory:id]
[DEBUG] 2019-10-22 11:04:23.783 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-22 11:04:23.783 [http-nio-8080-exec-3] PropertyBinder - Building property id
[DEBUG] 2019-10-22 11:04:23.785 [http-nio-8080-exec-3] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-22 11:04:23.785 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:04:23.785 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2019-10-22 11:04:23.785 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCardHistory:price]
[DEBUG] 2019-10-22 11:04:23.785 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2019-10-22 11:04:23.785 [http-nio-8080-exec-3] PropertyBinder - Building property price
[DEBUG] 2019-10-22 11:04:23.785 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=update_date, insertable=true, updatable=false, unique=false}
[DEBUG] 2019-10-22 11:04:23.785 [http-nio-8080-exec-3] PropertyBinder - MetadataSourceProcessor property ts with lazy=false
[DEBUG] 2019-10-22 11:04:23.785 [http-nio-8080-exec-3] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCardHistory:ts]
[DEBUG] 2019-10-22 11:04:23.785 [http-nio-8080-exec-3] SimpleValueBinder - building SimpleValue for ts
[DEBUG] 2019-10-22 11:04:23.785 [http-nio-8080-exec-3] PropertyBinder - Building property ts
[DEBUG] 2019-10-22 11:04:23.804 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-22 11:04:23.804 [http-nio-8080-exec-3] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=yugiohCard, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-22 11:04:23.807 [http-nio-8080-exec-3] PropertyBinder - Building property yugiohCard
[DEBUG] 2019-10-22 11:04:23.808 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-22 11:04:23.808 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for cardName
[DEBUG] 2019-10-22 11:04:23.808 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for cardType
[DEBUG] 2019-10-22 11:04:23.808 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-22 11:04:23.809 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2019-10-22 11:04:23.809 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-22 11:04:23.809 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-22 11:04:23.809 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2019-10-22 11:04:23.809 [http-nio-8080-exec-3] SimpleValueBinder - Starting fillSimpleValue for ts
[DEBUG] 2019-10-22 11:04:23.824 [http-nio-8080-exec-3] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [yugioh_card]
[DEBUG] 2019-10-22 11:04:23.824 [http-nio-8080-exec-3] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2019-10-22 11:04:23.824 [http-nio-8080-exec-3] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [yugioh_card_history]
[DEBUG] 2019-10-22 11:04:23.824 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:04:23.825 [http-nio-8080-exec-3] CollectionBinder - Binding a OneToMany: edu.yang.entity.YugiohCard.entries through a foreign key
[DEBUG] 2019-10-22 11:04:23.825 [http-nio-8080-exec-3] CollectionBinder - Mapping collection: edu.yang.entity.YugiohCard.entries -> yugioh_card_history
[DEBUG] 2019-10-22 11:04:23.831 [http-nio-8080-exec-3] TableBinder - Retrieving property edu.yang.entity.YugiohCardHistory.yugiohCard
[DEBUG] 2019-10-22 11:04:23.832 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: yugiohCard_id, one-to-many: edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-10-22 11:04:23.835 [http-nio-8080-exec-3] CollectionSecondPass - Second pass for collection: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:04:23.836 [http-nio-8080-exec-3] CollectionBinder - Binding a OneToMany: edu.yang.entity.User.cards through a foreign key
[DEBUG] 2019-10-22 11:04:23.836 [http-nio-8080-exec-3] CollectionBinder - Mapping collection: edu.yang.entity.User.cards -> yugioh_card
[DEBUG] 2019-10-22 11:04:23.836 [http-nio-8080-exec-3] TableBinder - Retrieving property edu.yang.entity.YugiohCard.user
[DEBUG] 2019-10-22 11:04:23.836 [http-nio-8080-exec-3] CollectionSecondPass - Mapped collection key: user_id, one-to-many: edu.yang.entity.YugiohCard
[DEBUG] 2019-10-22 11:04:23.836 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.User
[DEBUG] 2019-10-22 11:04:23.842 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.YugiohCard
[DEBUG] 2019-10-22 11:04:23.849 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.User
[DEBUG] 2019-10-22 11:04:23.849 [http-nio-8080-exec-3] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.YugiohCard
[DEBUG] 2019-10-22 11:04:23.950 [http-nio-8080-exec-3] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-22 11:04:23.951 [http-nio-8080-exec-3] Settings - SessionFactory name : null
[DEBUG] 2019-10-22 11:04:23.951 [http-nio-8080-exec-3] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-22 11:04:23.951 [http-nio-8080-exec-3] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-22 11:04:23.951 [http-nio-8080-exec-3] Settings - Statistics: disabled
[DEBUG] 2019-10-22 11:04:23.952 [http-nio-8080-exec-3] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-22 11:04:23.952 [http-nio-8080-exec-3] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-22 11:04:23.952 [http-nio-8080-exec-3] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-22 11:04:23.952 [http-nio-8080-exec-3] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-22 11:04:23.952 [http-nio-8080-exec-3] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-22 11:04:23.952 [http-nio-8080-exec-3] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-22 11:04:23.952 [http-nio-8080-exec-3] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-22 11:04:23.952 [http-nio-8080-exec-3] Settings - Default null ordering: NONE
[DEBUG] 2019-10-22 11:04:23.952 [http-nio-8080-exec-3] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-22 11:04:23.952 [http-nio-8080-exec-3] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-22 11:04:23.952 [http-nio-8080-exec-3] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-22 11:04:23.955 [http-nio-8080-exec-3] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-22 11:04:23.955 [http-nio-8080-exec-3] Settings - Query language substitutions: {}
[DEBUG] 2019-10-22 11:04:23.955 [http-nio-8080-exec-3] Settings - Named query checking : enabled
[DEBUG] 2019-10-22 11:04:23.955 [http-nio-8080-exec-3] Settings - Second-level cache: disabled
[DEBUG] 2019-10-22 11:04:23.955 [http-nio-8080-exec-3] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-22 11:04:23.955 [http-nio-8080-exec-3] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-22 11:04:23.955 [http-nio-8080-exec-3] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-22 11:04:23.955 [http-nio-8080-exec-3] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-22 11:04:23.955 [http-nio-8080-exec-3] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-22 11:04:23.955 [http-nio-8080-exec-3] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-22 11:04:23.955 [http-nio-8080-exec-3] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-22 11:04:23.955 [http-nio-8080-exec-3] Settings - JDBC batch size: 15
[DEBUG] 2019-10-22 11:04:23.955 [http-nio-8080-exec-3] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-22 11:04:23.955 [http-nio-8080-exec-3] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-22 11:04:23.955 [http-nio-8080-exec-3] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-22 11:04:23.955 [http-nio-8080-exec-3] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-22 11:04:23.955 [http-nio-8080-exec-3] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-22 11:04:23.955 [http-nio-8080-exec-3] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-22 11:04:23.955 [http-nio-8080-exec-3] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-22 11:04:23.955 [http-nio-8080-exec-3] Settings - JPA compliance - query : 
[DEBUG] 2019-10-22 11:04:23.956 [http-nio-8080-exec-3] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-22 11:04:23.956 [http-nio-8080-exec-3] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-22 11:04:23.956 [http-nio-8080-exec-3] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-22 11:04:24.134 [http-nio-8080-exec-3] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-22 11:04:24.237 [http-nio-8080-exec-3] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-22 11:04:24.241 [http-nio-8080-exec-3] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.4, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.0.0-31-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/yugioh_card_db, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@9e4d9c0, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/yugioh_card_db, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2019-10-22 11:04:24.305 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.User] is safe
[DEBUG] 2019-10-22 11:04:24.305 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.User
[DEBUG] 2019-10-22 11:04:24.347 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCard] is safe
[DEBUG] 2019-10-22 11:04:24.347 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCard
[DEBUG] 2019-10-22 11:04:24.348 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCardHistory] is safe
[DEBUG] 2019-10-22 11:04:24.348 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-10-22 11:04:24.356 [http-nio-8080-exec-3] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-22 11:04:24.357 [http-nio-8080-exec-3] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-22 11:04:24.357 [http-nio-8080-exec-3] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5396dfb2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@75d1cea2]
[DEBUG] 2019-10-22 11:04:24.499 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.User] is safe
[DEBUG] 2019-10-22 11:04:24.500 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.User
[DEBUG] 2019-10-22 11:04:24.570 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.User] is safe
[DEBUG] 2019-10-22 11:04:24.570 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.User
[DEBUG] 2019-10-22 11:04:25.122 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCard] is safe
[DEBUG] 2019-10-22 11:04:25.126 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCard
[DEBUG] 2019-10-22 11:04:25.127 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCard] is safe
[DEBUG] 2019-10-22 11:04:25.127 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCard
[DEBUG] 2019-10-22 11:04:25.180 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCardHistory] is safe
[DEBUG] 2019-10-22 11:04:25.180 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-10-22 11:04:25.183 [http-nio-8080-exec-3] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCardHistory] is safe
[DEBUG] 2019-10-22 11:04:25.183 [http-nio-8080-exec-3] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-10-22 11:04:25.225 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: edu.yang.entity.User.cards
[DEBUG] 2019-10-22 11:04:25.225 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: update yugioh_card set user_id=? where id=?
[DEBUG] 2019-10-22 11:04:25.225 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update yugioh_card set  where id=?
[DEBUG] 2019-10-22 11:04:25.225 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: update yugioh_card set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-22 11:04:25.225 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: update yugioh_card set user_id=null where user_id=?
[DEBUG] 2019-10-22 11:04:25.226 [http-nio-8080-exec-3] AbstractCollectionPersister - Static SQL for collection: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-10-22 11:04:25.226 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row insert: update yugioh_card_history set yugiohCard_id=? where id=?
[DEBUG] 2019-10-22 11:04:25.226 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row update: update yugioh_card_history set  where id=?
[DEBUG] 2019-10-22 11:04:25.226 [http-nio-8080-exec-3] AbstractCollectionPersister -  Row delete: update yugioh_card_history set yugiohCard_id=null where yugiohCard_id=? and id=?
[DEBUG] 2019-10-22 11:04:25.226 [http-nio-8080-exec-3] AbstractCollectionPersister -  One-shot delete: update yugioh_card_history set yugiohCard_id=null where yugiohCard_id=?
[DEBUG] 2019-10-22 11:04:25.245 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: edu.yang.entity.User
[DEBUG] 2019-10-22 11:04:25.245 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2019-10-22 11:04:25.245 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select user_.id, user_.user_password as user_pas2_0_, user_.user_name as user_nam3_0_ from user user_ where user_.id=?
[DEBUG] 2019-10-22 11:04:25.245 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into user (user_password, user_name, id) values (?, ?, ?)
[DEBUG] 2019-10-22 11:04:25.245 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update user set user_password=?, user_name=? where id=?
[DEBUG] 2019-10-22 11:04:25.247 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2019-10-22 11:04:25.247 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into user (user_password, user_name) values (?, ?)
[DEBUG] 2019-10-22 11:04:25.303 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cf2aa7]
[DEBUG] 2019-10-22 11:04:25.305 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cards
[DEBUG] 2019-10-22 11:04:25.317 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6add9095]
[DEBUG] 2019-10-22 11:04:25.322 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32337220]
[DEBUG] 2019-10-22 11:04:25.326 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cards.cardName
[DEBUG] 2019-10-22 11:04:25.326 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cards.cardType
[DEBUG] 2019-10-22 11:04:25.326 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cards.entries
[DEBUG] 2019-10-22 11:04:25.326 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66dc2be5]
[DEBUG] 2019-10-22 11:04:25.326 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cf54365]
[DEBUG] 2019-10-22 11:04:25.329 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cards.entries.price
[DEBUG] 2019-10-22 11:04:25.329 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cards.entries.ts
[DEBUG] 2019-10-22 11:04:25.329 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cards.entries.yugiohCard
[DEBUG] 2019-10-22 11:04:25.329 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : cards.entries.yugiohCard
[DEBUG] 2019-10-22 11:04:25.330 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cards.user
[DEBUG] 2019-10-22 11:04:25.330 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : cards.user
[DEBUG] 2019-10-22 11:04:25.332 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-10-22 11:04:25.332 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-22 11:04:25.332 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-22 11:04:25.403 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-22 11:04:25.422 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:0>, path=edu.yang.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.User.cards, querySpaceUid=<gen:1>, path=edu.yang.entity.User.cards)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:2>, path=edu.yang.entity.User.cards.<elements>)
                - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:3>, path=edu.yang.entity.User.cards.<elements>.entries)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:4>, path=edu.yang.entity.User.cards.<elements>.entries.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(cards)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.User.cards)
                - SQL table alias mapping - cards1_
                - alias suffix - 1_
                - suffixed key columns - {user_id4_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCard)
                      - SQL table alias mapping - cards1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(entries)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=edu.yang.entity.YugiohCard.entries)
                            - SQL table alias mapping - entries2_
                            - alias suffix - 3_
                            - suffixed key columns - {yugiohCa4_2_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_2_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=edu.yang.entity.YugiohCardHistory)
                                  - SQL table alias mapping - entries2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_2_4_}

[DEBUG] 2019-10-22 11:04:25.432 [http-nio-8080-exec-3] EntityLoader - Static select for entity edu.yang.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_name as user_nam3_0_0_, cards1_.user_id as user_id4_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_name as card_nam2_1_2_, cards1_.card_type as card_typ3_1_2_, cards1_.user_id as user_id4_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-10-22 11:04:25.432 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ff9fd0e]
[DEBUG] 2019-10-22 11:04:25.432 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cards
[DEBUG] 2019-10-22 11:04:25.433 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@76b1be47]
[DEBUG] 2019-10-22 11:04:25.433 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59e5c8ce]
[DEBUG] 2019-10-22 11:04:25.433 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cards.cardName
[DEBUG] 2019-10-22 11:04:25.433 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cards.cardType
[DEBUG] 2019-10-22 11:04:25.433 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cards.entries
[DEBUG] 2019-10-22 11:04:25.434 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36bb9d23]
[DEBUG] 2019-10-22 11:04:25.434 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@416f8082]
[DEBUG] 2019-10-22 11:04:25.434 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cards.entries.price
[DEBUG] 2019-10-22 11:04:25.434 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cards.entries.ts
[DEBUG] 2019-10-22 11:04:25.434 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cards.entries.yugiohCard
[DEBUG] 2019-10-22 11:04:25.434 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : cards.entries.yugiohCard
[DEBUG] 2019-10-22 11:04:25.434 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cards.user
[DEBUG] 2019-10-22 11:04:25.434 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : cards.user
[DEBUG] 2019-10-22 11:04:25.434 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-10-22 11:04:25.434 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-22 11:04:25.436 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-22 11:04:25.436 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-22 11:04:25.439 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:0>, path=edu.yang.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.User.cards, querySpaceUid=<gen:1>, path=edu.yang.entity.User.cards)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:2>, path=edu.yang.entity.User.cards.<elements>)
                - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:3>, path=edu.yang.entity.User.cards.<elements>.entries)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:4>, path=edu.yang.entity.User.cards.<elements>.entries.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(cards)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.User.cards)
                - SQL table alias mapping - cards1_
                - alias suffix - 1_
                - suffixed key columns - {user_id4_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCard)
                      - SQL table alias mapping - cards1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(entries)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=edu.yang.entity.YugiohCard.entries)
                            - SQL table alias mapping - entries2_
                            - alias suffix - 3_
                            - suffixed key columns - {yugiohCa4_2_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_2_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=edu.yang.entity.YugiohCardHistory)
                                  - SQL table alias mapping - entries2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_2_4_}

[DEBUG] 2019-10-22 11:04:25.439 [http-nio-8080-exec-3] EntityLoader - Static select for entity edu.yang.entity.User [READ]: select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_name as user_nam3_0_0_, cards1_.user_id as user_id4_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_name as card_nam2_1_2_, cards1_.card_type as card_typ3_1_2_, cards1_.user_id as user_id4_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-10-22 11:04:25.504 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity edu.yang.entity.User: select user0_.id as id1_0_1_, user0_.user_password as user_pas2_0_1_, user0_.user_name as user_nam3_0_1_, cards1_.user_id as user_id4_1_3_, cards1_.id as id1_1_3_, cards1_.id as id1_1_0_, cards1_.card_name as card_nam2_1_0_, cards1_.card_type as card_typ3_1_0_, cards1_.user_id as user_id4_1_0_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id where user0_.id=?
[DEBUG] 2019-10-22 11:04:25.504 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity edu.yang.entity.User: select user0_.id as id1_0_1_, user0_.user_password as user_pas2_0_1_, user0_.user_name as user_nam3_0_1_, cards1_.user_id as user_id4_1_3_, cards1_.id as id1_1_3_, cards1_.id as id1_1_0_, cards1_.card_name as card_nam2_1_0_, cards1_.card_type as card_typ3_1_0_, cards1_.user_id as user_id4_1_0_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id where user0_.id=?
[DEBUG] 2019-10-22 11:04:25.505 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: edu.yang.entity.YugiohCard
[DEBUG] 2019-10-22 11:04:25.505 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select id from yugioh_card where id =?
[DEBUG] 2019-10-22 11:04:25.505 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select yugiohcard_.id, yugiohcard_.card_name as card_nam2_1_, yugiohcard_.card_type as card_typ3_1_, yugiohcard_.user_id as user_id4_1_ from yugioh_card yugiohcard_ where yugiohcard_.id=?
[DEBUG] 2019-10-22 11:04:25.505 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into yugioh_card (card_name, card_type, user_id, id) values (?, ?, ?, ?)
[DEBUG] 2019-10-22 11:04:25.505 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update yugioh_card set card_name=?, card_type=?, user_id=? where id=?
[DEBUG] 2019-10-22 11:04:25.505 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from yugioh_card where id=?
[DEBUG] 2019-10-22 11:04:25.505 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into yugioh_card (card_name, card_type, user_id) values (?, ?, ?)
[DEBUG] 2019-10-22 11:04:25.505 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20c0c1f2]
[DEBUG] 2019-10-22 11:04:25.505 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cardName
[DEBUG] 2019-10-22 11:04:25.505 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cardType
[DEBUG] 2019-10-22 11:04:25.505 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : entries
[DEBUG] 2019-10-22 11:04:25.505 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5231e2e3]
[DEBUG] 2019-10-22 11:04:25.505 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@695ebd38]
[DEBUG] 2019-10-22 11:04:25.510 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : entries.price
[DEBUG] 2019-10-22 11:04:25.510 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : entries.ts
[DEBUG] 2019-10-22 11:04:25.510 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : entries.yugiohCard
[DEBUG] 2019-10-22 11:04:25.510 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : entries.yugiohCard
[DEBUG] 2019-10-22 11:04:25.511 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-22 11:04:25.511 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a5b68c9]
[DEBUG] 2019-10-22 11:04:25.513 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.cards
[DEBUG] 2019-10-22 11:04:25.514 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.cards
[DEBUG] 2019-10-22 11:04:25.514 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2019-10-22 11:04:25.515 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-22 11:04:25.515 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-22 11:04:25.515 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-22 11:04:25.518 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCard)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCard)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCard.entries)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCard.entries.<elements>)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:3>, path=edu.yang.entity.YugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCard)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(entries)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.YugiohCard.entries)
                - SQL table alias mapping - entries1_
                - alias suffix - 1_
                - suffixed key columns - {yugiohCa4_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_2_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCardHistory)
                      - SQL table alias mapping - entries1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.yang.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 3_
                - suffixed key columns - {id1_0_3_}

[DEBUG] 2019-10-22 11:04:25.518 [http-nio-8080-exec-3] EntityLoader - Static select for entity edu.yang.entity.YugiohCard [NONE]: select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_name as card_nam2_1_0_, yugiohcard0_.card_type as card_typ3_1_0_, yugiohcard0_.user_id as user_id4_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_name as user_nam3_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-10-22 11:04:25.518 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@569c1bc5]
[DEBUG] 2019-10-22 11:04:25.519 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cardName
[DEBUG] 2019-10-22 11:04:25.519 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cardType
[DEBUG] 2019-10-22 11:04:25.520 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : entries
[DEBUG] 2019-10-22 11:04:25.521 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@63d5860]
[DEBUG] 2019-10-22 11:04:25.521 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40884fe6]
[DEBUG] 2019-10-22 11:04:25.521 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : entries.price
[DEBUG] 2019-10-22 11:04:25.521 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : entries.ts
[DEBUG] 2019-10-22 11:04:25.521 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : entries.yugiohCard
[DEBUG] 2019-10-22 11:04:25.521 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : entries.yugiohCard
[DEBUG] 2019-10-22 11:04:25.521 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-22 11:04:25.521 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d226e80]
[DEBUG] 2019-10-22 11:04:25.521 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.cards
[DEBUG] 2019-10-22 11:04:25.521 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user.cards
[DEBUG] 2019-10-22 11:04:25.521 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2019-10-22 11:04:25.521 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-22 11:04:25.521 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-22 11:04:25.521 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-22 11:04:25.526 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCard)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCard)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCard.entries)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCard.entries.<elements>)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:3>, path=edu.yang.entity.YugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCard)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(entries)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.YugiohCard.entries)
                - SQL table alias mapping - entries1_
                - alias suffix - 1_
                - suffixed key columns - {yugiohCa4_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_2_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCardHistory)
                      - SQL table alias mapping - entries1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.yang.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 3_
                - suffixed key columns - {id1_0_3_}

[DEBUG] 2019-10-22 11:04:25.527 [http-nio-8080-exec-3] EntityLoader - Static select for entity edu.yang.entity.YugiohCard [READ]: select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_name as card_nam2_1_0_, yugiohcard0_.card_type as card_typ3_1_0_, yugiohcard0_.user_id as user_id4_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_name as user_nam3_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-10-22 11:04:25.528 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity edu.yang.entity.YugiohCard: select yugiohcard0_.id as id1_1_1_, yugiohcard0_.card_name as card_nam2_1_1_, yugiohcard0_.card_type as card_typ3_1_1_, yugiohcard0_.user_id as user_id4_1_1_, entries1_.yugiohCard_id as yugiohCa4_2_3_, entries1_.id as id1_2_3_, entries1_.id as id1_2_0_, entries1_.price as price2_2_0_, entries1_.update_date as update_d3_2_0_, entries1_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id where yugiohcard0_.id=?
[DEBUG] 2019-10-22 11:04:25.528 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity edu.yang.entity.YugiohCard: select yugiohcard0_.id as id1_1_1_, yugiohcard0_.card_name as card_nam2_1_1_, yugiohcard0_.card_type as card_typ3_1_1_, yugiohcard0_.user_id as user_id4_1_1_, entries1_.yugiohCard_id as yugiohCa4_2_3_, entries1_.id as id1_2_3_, entries1_.id as id1_2_0_, entries1_.price as price2_2_0_, entries1_.update_date as update_d3_2_0_, entries1_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id where yugiohcard0_.id=?
[DEBUG] 2019-10-22 11:04:25.534 [http-nio-8080-exec-3] AbstractEntityPersister - Static SQL for entity: edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-10-22 11:04:25.534 [http-nio-8080-exec-3] AbstractEntityPersister -  Version select: select id from yugioh_card_history where id =?
[DEBUG] 2019-10-22 11:04:25.534 [http-nio-8080-exec-3] AbstractEntityPersister -  Snapshot select: select yugiohcard_.id, yugiohcard_.price as price2_2_, yugiohcard_.yugiohCard_id as yugiohCa4_2_ from yugioh_card_history yugiohcard_ where yugiohcard_.id=?
[DEBUG] 2019-10-22 11:04:25.534 [http-nio-8080-exec-3] AbstractEntityPersister -  Insert 0: insert into yugioh_card_history (price, update_date, yugiohCard_id, id) values (?, ?, ?, ?)
[DEBUG] 2019-10-22 11:04:25.534 [http-nio-8080-exec-3] AbstractEntityPersister -  Update 0: update yugioh_card_history set price=?, yugiohCard_id=? where id=?
[DEBUG] 2019-10-22 11:04:25.535 [http-nio-8080-exec-3] AbstractEntityPersister -  Delete 0: delete from yugioh_card_history where id=?
[DEBUG] 2019-10-22 11:04:25.535 [http-nio-8080-exec-3] AbstractEntityPersister -  Identity insert: insert into yugioh_card_history (price, update_date, yugiohCard_id) values (?, ?, ?)
[DEBUG] 2019-10-22 11:04:25.535 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@680c1478]
[DEBUG] 2019-10-22 11:04:25.535 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-10-22 11:04:25.535 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : ts
[DEBUG] 2019-10-22 11:04:25.540 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : yugiohCard
[DEBUG] 2019-10-22 11:04:25.540 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11c7e0dc]
[DEBUG] 2019-10-22 11:04:25.540 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardName
[DEBUG] 2019-10-22 11:04:25.540 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardType
[DEBUG] 2019-10-22 11:04:25.541 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : yugiohCard.entries
[DEBUG] 2019-10-22 11:04:25.541 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.entries
[DEBUG] 2019-10-22 11:04:25.541 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user
[DEBUG] 2019-10-22 11:04:25.541 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@593a18c7]
[DEBUG] 2019-10-22 11:04:25.541 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.cards
[DEBUG] 2019-10-22 11:04:25.541 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.user.cards
[DEBUG] 2019-10-22 11:04:25.541 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.password
[DEBUG] 2019-10-22 11:04:25.541 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.userName
[DEBUG] 2019-10-22 11:04:25.541 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-22 11:04:25.541 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-22 11:04:25.545 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCardHistory)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCardHistory)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCardHistory.yugiohCard)
             - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCardHistory.yugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCardHistory)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(yugiohCard)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCard)
                - SQL table alias mapping - yugiohcard1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-22 11:04:25.545 [http-nio-8080-exec-3] EntityLoader - Static select for entity edu.yang.entity.YugiohCardHistory [NONE]: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_, yugiohcard1_.id as id1_1_1_, yugiohcard1_.card_name as card_nam2_1_1_, yugiohcard1_.card_type as card_typ3_1_1_, yugiohcard1_.user_id as user_id4_1_1_, user2_.id as id1_0_2_, user2_.user_password as user_pas2_0_2_, user2_.user_name as user_nam3_0_2_ from yugioh_card_history yugiohcard0_ left outer join yugioh_card yugiohcard1_ on yugiohcard0_.yugiohCard_id=yugiohcard1_.id left outer join user user2_ on yugiohcard1_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-10-22 11:04:25.547 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76153751]
[DEBUG] 2019-10-22 11:04:25.548 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-10-22 11:04:25.548 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : ts
[DEBUG] 2019-10-22 11:04:25.548 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : yugiohCard
[DEBUG] 2019-10-22 11:04:25.548 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@458d021a]
[DEBUG] 2019-10-22 11:04:25.548 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardName
[DEBUG] 2019-10-22 11:04:25.548 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardType
[DEBUG] 2019-10-22 11:04:25.548 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : yugiohCard.entries
[DEBUG] 2019-10-22 11:04:25.548 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.entries
[DEBUG] 2019-10-22 11:04:25.548 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user
[DEBUG] 2019-10-22 11:04:25.548 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@156478f8]
[DEBUG] 2019-10-22 11:04:25.548 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.cards
[DEBUG] 2019-10-22 11:04:25.548 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.user.cards
[DEBUG] 2019-10-22 11:04:25.549 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.password
[DEBUG] 2019-10-22 11:04:25.549 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.userName
[DEBUG] 2019-10-22 11:04:25.549 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-22 11:04:25.549 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-22 11:04:25.553 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCardHistory)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCardHistory)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCardHistory.yugiohCard)
             - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCardHistory.yugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCardHistory)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(yugiohCard)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCard)
                - SQL table alias mapping - yugiohcard1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-22 11:04:25.553 [http-nio-8080-exec-3] EntityLoader - Static select for entity edu.yang.entity.YugiohCardHistory [READ]: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_, yugiohcard1_.id as id1_1_1_, yugiohcard1_.card_name as card_nam2_1_1_, yugiohcard1_.card_type as card_typ3_1_1_, yugiohcard1_.user_id as user_id4_1_1_, user2_.id as id1_0_2_, user2_.user_password as user_pas2_0_2_, user2_.user_name as user_nam3_0_2_ from yugioh_card_history yugiohcard0_ left outer join yugioh_card yugiohcard1_ on yugiohcard0_.yugiohCard_id=yugiohcard1_.id left outer join user user2_ on yugiohcard1_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-10-22 11:04:25.557 [http-nio-8080-exec-3] Loader - Static select for action ACTION_MERGE on entity edu.yang.entity.YugiohCardHistory: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card_history yugiohcard0_ where yugiohcard0_.id=?
[DEBUG] 2019-10-22 11:04:25.557 [http-nio-8080-exec-3] Loader - Static select for action ACTION_REFRESH on entity edu.yang.entity.YugiohCardHistory: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card_history yugiohcard0_ where yugiohcard0_.id=?
[DEBUG] 2019-10-22 11:04:25.572 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15427683]
[DEBUG] 2019-10-22 11:04:25.573 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@677e9218]
[DEBUG] 2019-10-22 11:04:25.573 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cardName
[DEBUG] 2019-10-22 11:04:25.573 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : cardType
[DEBUG] 2019-10-22 11:04:25.573 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : entries
[DEBUG] 2019-10-22 11:04:25.573 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e80d9d7]
[DEBUG] 2019-10-22 11:04:25.573 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d7d664d]
[DEBUG] 2019-10-22 11:04:25.573 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-22 11:04:25.573 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-22 11:04:25.575 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-22 11:04:25.580 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-22 11:04:25.580 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=edu.yang.entity.User.cards)
    - Returns
       - CollectionReturnImpl(collection=edu.yang.entity.User.cards, querySpaceUid=<gen:0>, path=[edu.yang.entity.User.cards])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:1>, path=[edu.yang.entity.User.cards].<elements>)
             - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:2>, path=[edu.yang.entity.User.cards].<elements>.entries)
                - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:3>, path=[edu.yang.entity.User.cards].<elements>.entries.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.yang.entity.User.cards)
          - SQL table alias mapping - cards0_
          - alias suffix - 0_
          - suffixed key columns - {user_id4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCard)
                - SQL table alias mapping - cards0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-22 11:04:25.581 [http-nio-8080-exec-3] CollectionLoader - Static select for collection edu.yang.entity.User.cards: select cards0_.user_id as user_id4_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_name as card_nam2_1_1_, cards0_.card_type as card_typ3_1_1_, cards0_.user_id as user_id4_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-10-22 11:04:25.581 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@33cc3380]
[DEBUG] 2019-10-22 11:04:25.581 [http-nio-8080-exec-3] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e9b8b8c]
[DEBUG] 2019-10-22 11:04:25.581 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-10-22 11:04:25.581 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : ts
[DEBUG] 2019-10-22 11:04:25.581 [http-nio-8080-exec-3] MetamodelGraphWalker - Visiting attribute path : yugiohCard
[DEBUG] 2019-10-22 11:04:25.581 [http-nio-8080-exec-3] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard
[DEBUG] 2019-10-22 11:04:25.581 [http-nio-8080-exec-3] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-22 11:04:25.581 [http-nio-8080-exec-3] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-22 11:04:25.582 [http-nio-8080-exec-3] LoadPlanTreePrinter - LoadPlan(collection=edu.yang.entity.YugiohCard.entries)
    - Returns
       - CollectionReturnImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:0>, path=[edu.yang.entity.YugiohCard.entries])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:1>, path=[edu.yang.entity.YugiohCard.entries].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.yang.entity.YugiohCard.entries)
          - SQL table alias mapping - entries0_
          - alias suffix - 0_
          - suffixed key columns - {yugiohCa4_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCardHistory)
                - SQL table alias mapping - entries0_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

[DEBUG] 2019-10-22 11:04:25.582 [http-nio-8080-exec-3] CollectionLoader - Static select for collection edu.yang.entity.YugiohCard.entries: select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-10-22 11:04:25.692 [http-nio-8080-exec-3] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-22 11:04:25.693 [http-nio-8080-exec-3] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-22 11:04:25.697 [http-nio-8080-exec-3] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-22 11:04:25.717 [http-nio-8080-exec-3] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-22 11:04:25.721 [http-nio-8080-exec-3] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-22 11:04:25.722 [http-nio-8080-exec-3] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-22 11:04:25.724 [http-nio-8080-exec-3] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-22 11:04:25.730 [http-nio-8080-exec-3] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5a5fc4b0
[DEBUG] 2019-10-22 11:04:25.735 [http-nio-8080-exec-3] SessionFactoryRegistry - Registering SessionFactory: 00d62464-7134-4416-858c-1d8795e9111c (<unnamed>)
[DEBUG] 2019-10-22 11:04:25.735 [http-nio-8080-exec-3] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-22 11:04:25.885 [http-nio-8080-exec-3] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-22 11:04:26.093 [http-nio-8080-exec-3] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0
[DEBUG] 2019-10-22 11:04:26.152 [http-nio-8080-exec-3] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7038b4a4
[DEBUG] 2019-10-22 11:04:26.193 [http-nio-8080-exec-3] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0
[DEBUG] 2019-10-22 11:04:26.205 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-22 11:04:26.219 [http-nio-8080-exec-3] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'edu'
       |     |  |  |  \-[IDENT] Node: 'yang'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'YugiohCard'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2019-10-22 11:04:26.265 [http-nio-8080-exec-3] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-22 11:04:26.281 [http-nio-8080-exec-3] FromElement - FromClause{level=1} : edu.yang.entity.YugiohCard (generatedAlias0) -> yugiohcard0_
[DEBUG] 2019-10-22 11:04:26.282 [http-nio-8080-exec-3] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-10-22 11:04:26.283 [http-nio-8080-exec-3] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-22 11:04:26.283 [http-nio-8080-exec-3] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} yugiohcard0_.id ) ( FromClause{level=1} yugioh_card yugiohcard0_ ) )
[DEBUG] 2019-10-22 11:04:26.297 [http-nio-8080-exec-3] JoinProcessor - Using FROM fragment [yugioh_card yugiohcard0_]
[DEBUG] 2019-10-22 11:04:26.298 [http-nio-8080-exec-3] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-22 11:04:26.298 [http-nio-8080-exec-3] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (yugioh_card)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id as id1_1_' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
    |  \-[SQL_TOKEN] SqlFragment: 'yugiohcard0_.card_name as card_nam2_1_, yugiohcard0_.card_type as card_typ3_1_, yugiohcard0_.user_id as user_id4_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[yugiohcard0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'yugioh_card yugiohcard0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=yugioh_card,tableAlias=yugiohcard0_,origin=null,columns={,className=edu.yang.entity.YugiohCard}}

[DEBUG] 2019-10-22 11:04:26.298 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-22 11:04:26.305 [http-nio-8080-exec-3] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0
[DEBUG] 2019-10-22 11:04:26.306 [http-nio-8080-exec-3] QueryTranslatorImpl - SQL: select yugiohcard0_.id as id1_1_, yugiohcard0_.card_name as card_nam2_1_, yugiohcard0_.card_type as card_typ3_1_, yugiohcard0_.user_id as user_id4_1_ from yugioh_card yugiohcard0_
[DEBUG] 2019-10-22 11:04:26.306 [http-nio-8080-exec-3] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-22 11:04:26.333 [http-nio-8080-exec-3] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_name as card_nam2_1_, yugiohcard0_.card_type as card_typ3_1_, yugiohcard0_.user_id as user_id4_1_ from yugioh_card yugiohcard0_
[DEBUG] 2019-10-22 11:04:26.375 [http-nio-8080-exec-3] SqlExceptionHelper - could not extract ResultSet [n/a]
java.sql.SQLSyntaxErrorException: Unknown column 'yugiohcard0_.user_id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1005) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:379) ~[c3p0-0.9.5.3.jar:0.9.5.3]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2287) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2045) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2007) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.Loader.doQuery(Loader.java:953) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:354) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.Loader.doList(Loader.java:2810) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.Loader.doList(Loader.java:2792) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2624) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.Loader.list(Loader.java:2619) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:506) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:396) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1547) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1557) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1525) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.query.Query.getResultList(Query.java:165) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getResultList(CriteriaQueryTypeQueryAdapter.java:76) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at edu.yang.persistence.YugiohCardDao.getAll(YugiohCardDao.java:163) [classes/:?]
	at edu.yang.controller.SearchUser.doGet(SearchUser.java:39) [classes/:?]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [servlet-api.jar:?]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [servlet-api.jar:?]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [catalina.jar:8.5.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.41]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-websocket.jar:8.5.41]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [catalina.jar:8.5.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [catalina.jar:8.5.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199) [catalina.jar:8.5.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [catalina.jar:8.5.41]
	at org.apache.tomee.catalina.OpenEJBValve.invoke(OpenEJBValve.java:44) [tomee-catalina-7.1.1.jar:7.1.1]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493) [catalina.jar:8.5.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137) [catalina.jar:8.5.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [catalina.jar:8.5.41]
	at org.apache.tomee.catalina.OpenEJBSecurityListener$RequestCapturer.invoke(OpenEJBSecurityListener.java:97) [tomee-catalina-7.1.1.jar:7.1.1]
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660) [catalina.jar:8.5.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [catalina.jar:8.5.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [catalina.jar:8.5.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:798) [tomcat-coyote.jar:8.5.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-coyote.jar:8.5.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:808) [tomcat-coyote.jar:8.5.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498) [tomcat-coyote.jar:8.5.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-coyote.jar:8.5.41]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-util.jar:8.5.41]
	at java.lang.Thread.run(Thread.java:834) [?:?]
[WARN ] 2019-10-22 11:04:26.397 [http-nio-8080-exec-3] SqlExceptionHelper - SQL Error: 1054, SQLState: 42S22
[ERROR] 2019-10-22 11:04:26.397 [http-nio-8080-exec-3] SqlExceptionHelper - Unknown column 'yugiohcard0_.user_id' in 'field list'
[DEBUG] 2019-10-22 11:04:26.400 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-22 11:04:26.412 [http-nio-8080-exec-3] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
