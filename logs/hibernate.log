[DEBUG] 2019-11-27 17:12:38.757 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-11-27 17:12:38.764 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-11-27 17:12:38.794 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-11-27 17:12:39.549 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-11-27 17:12:39.553 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-11-27 17:12:41.318 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-11-27 17:12:41.330 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-11-27 17:12:41.355 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-11-27 17:12:42.513 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-11-27 17:12:42.550 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-11-27 17:12:42.551 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-11-27 17:12:42.588 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-11-27 17:12:42.653 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4554de02
[DEBUG] 2019-11-27 17:12:42.653 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4554de02
[DEBUG] 2019-11-27 17:12:42.657 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4554de02
[DEBUG] 2019-11-27 17:12:42.658 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4422dd48
[DEBUG] 2019-11-27 17:12:42.663 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@ad3324b
[DEBUG] 2019-11-27 17:12:42.663 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@144ab54
[DEBUG] 2019-11-27 17:12:42.664 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5e2a3040
[DEBUG] 2019-11-27 17:12:42.664 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5e2a3040
[DEBUG] 2019-11-27 17:12:42.664 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5e2a3040
[DEBUG] 2019-11-27 17:12:42.692 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@5bb51241
[DEBUG] 2019-11-27 17:12:42.693 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@5bb51241
[DEBUG] 2019-11-27 17:12:42.693 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5bb51241
[DEBUG] 2019-11-27 17:12:42.694 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6c42f2a1
[DEBUG] 2019-11-27 17:12:42.695 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6c42f2a1
[DEBUG] 2019-11-27 17:12:42.695 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6c42f2a1
[DEBUG] 2019-11-27 17:12:42.695 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4867ab9f
[DEBUG] 2019-11-27 17:12:42.697 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4867ab9f
[DEBUG] 2019-11-27 17:12:42.698 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4867ab9f
[DEBUG] 2019-11-27 17:12:42.699 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@46c3a14d
[DEBUG] 2019-11-27 17:12:42.700 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@46c3a14d
[DEBUG] 2019-11-27 17:12:42.700 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@46c3a14d
[DEBUG] 2019-11-27 17:12:42.701 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1de0a46c
[DEBUG] 2019-11-27 17:12:42.701 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1de0a46c
[DEBUG] 2019-11-27 17:12:42.701 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1de0a46c
[DEBUG] 2019-11-27 17:12:42.701 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@25cd49a4
[DEBUG] 2019-11-27 17:12:42.701 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@25cd49a4
[DEBUG] 2019-11-27 17:12:42.704 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@25cd49a4
[DEBUG] 2019-11-27 17:12:42.705 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@43b40233
[DEBUG] 2019-11-27 17:12:42.705 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@43b40233
[DEBUG] 2019-11-27 17:12:42.706 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@35cd68d4
[DEBUG] 2019-11-27 17:12:42.706 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@35cd68d4
[DEBUG] 2019-11-27 17:12:42.706 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2eadc9f6
[DEBUG] 2019-11-27 17:12:42.707 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2eadc9f6
[DEBUG] 2019-11-27 17:12:42.707 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@778d82e9
[DEBUG] 2019-11-27 17:12:42.707 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@d8d9199
[DEBUG] 2019-11-27 17:12:42.711 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@b835727
[DEBUG] 2019-11-27 17:12:42.711 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@b835727
[DEBUG] 2019-11-27 17:12:42.712 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@319c3a25
[DEBUG] 2019-11-27 17:12:42.712 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@319c3a25
[DEBUG] 2019-11-27 17:12:42.720 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4e1ce44
[DEBUG] 2019-11-27 17:12:42.720 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4e1ce44
[DEBUG] 2019-11-27 17:12:42.728 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7173ae5b
[DEBUG] 2019-11-27 17:12:42.728 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7173ae5b
[DEBUG] 2019-11-27 17:12:42.729 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@bfc14b9
[DEBUG] 2019-11-27 17:12:42.729 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@bfc14b9
[DEBUG] 2019-11-27 17:12:42.729 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@43d38654
[DEBUG] 2019-11-27 17:12:42.729 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@43d38654
[DEBUG] 2019-11-27 17:12:42.736 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4fc142ec
[DEBUG] 2019-11-27 17:12:42.737 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4fc142ec
[DEBUG] 2019-11-27 17:12:42.738 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1dd7796b
[DEBUG] 2019-11-27 17:12:42.740 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1dd7796b
[DEBUG] 2019-11-27 17:12:42.742 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@396639b
[DEBUG] 2019-11-27 17:12:42.742 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@396639b
[DEBUG] 2019-11-27 17:12:42.745 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@12d1f1d4
[DEBUG] 2019-11-27 17:12:42.745 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@12d1f1d4
[DEBUG] 2019-11-27 17:12:42.746 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@f679798
[DEBUG] 2019-11-27 17:12:42.746 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@f679798
[DEBUG] 2019-11-27 17:12:42.746 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@8f2098e
[DEBUG] 2019-11-27 17:12:42.746 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@8f2098e
[DEBUG] 2019-11-27 17:12:42.747 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@8f2098e
[DEBUG] 2019-11-27 17:12:42.747 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@8a2a6a
[DEBUG] 2019-11-27 17:12:42.756 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@10bea4
[DEBUG] 2019-11-27 17:12:42.757 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@10bea4
[DEBUG] 2019-11-27 17:12:42.757 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@10bea4
[DEBUG] 2019-11-27 17:12:42.758 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4cb40e3b
[DEBUG] 2019-11-27 17:12:42.758 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@ac20bb4
[DEBUG] 2019-11-27 17:12:42.759 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@ac20bb4
[DEBUG] 2019-11-27 17:12:42.762 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@19382338
[DEBUG] 2019-11-27 17:12:42.765 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@19382338
[DEBUG] 2019-11-27 17:12:42.766 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@718dbd79
[DEBUG] 2019-11-27 17:12:42.766 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@718dbd79
[DEBUG] 2019-11-27 17:12:42.766 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6b3f6585
[DEBUG] 2019-11-27 17:12:42.766 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b3f6585
[DEBUG] 2019-11-27 17:12:42.767 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6cd164a6
[DEBUG] 2019-11-27 17:12:42.767 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6cd164a6
[DEBUG] 2019-11-27 17:12:42.767 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4c18621b
[DEBUG] 2019-11-27 17:12:42.768 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@c35af2a
[DEBUG] 2019-11-27 17:12:42.768 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@c35af2a
[DEBUG] 2019-11-27 17:12:42.768 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@c35af2a
[DEBUG] 2019-11-27 17:12:42.776 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1fde0371
[DEBUG] 2019-11-27 17:12:42.776 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1fde0371
[DEBUG] 2019-11-27 17:12:42.776 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1fde0371
[DEBUG] 2019-11-27 17:12:42.777 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6438a7fe
[DEBUG] 2019-11-27 17:12:42.777 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@407873d3
[DEBUG] 2019-11-27 17:12:42.805 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@49fe3142
[DEBUG] 2019-11-27 17:12:42.806 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@49fe3142
[DEBUG] 2019-11-27 17:12:42.806 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@49fe3142
[DEBUG] 2019-11-27 17:12:42.807 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4d62f4c6
[DEBUG] 2019-11-27 17:12:42.809 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4d62f4c6
[DEBUG] 2019-11-27 17:12:42.811 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4d62f4c6
[DEBUG] 2019-11-27 17:12:42.811 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4cdb8504
[DEBUG] 2019-11-27 17:12:42.812 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3a175162
[DEBUG] 2019-11-27 17:12:42.814 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@28737371
[DEBUG] 2019-11-27 17:12:42.814 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@28737371
[DEBUG] 2019-11-27 17:12:42.814 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@295bf2a
[DEBUG] 2019-11-27 17:12:42.815 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4487c0c2
[DEBUG] 2019-11-27 17:12:42.818 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4487c0c2
[DEBUG] 2019-11-27 17:12:42.819 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@1174a305
[DEBUG] 2019-11-27 17:12:42.820 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1174a305
[DEBUG] 2019-11-27 17:12:42.820 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@78226c36
[DEBUG] 2019-11-27 17:12:42.820 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@622fdb81
[DEBUG] 2019-11-27 17:12:42.821 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@a7ad6e5
[DEBUG] 2019-11-27 17:12:42.826 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@158f4cfe
[DEBUG] 2019-11-27 17:12:42.826 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@158f4cfe
[DEBUG] 2019-11-27 17:12:42.826 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3e47a03
[DEBUG] 2019-11-27 17:12:42.826 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7d9ba6c
[DEBUG] 2019-11-27 17:12:42.826 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@8deb645
[DEBUG] 2019-11-27 17:12:42.826 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7dd611c8
[DEBUG] 2019-11-27 17:12:42.827 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5d425813
[DEBUG] 2019-11-27 17:12:42.827 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1702830d
[DEBUG] 2019-11-27 17:12:42.827 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6a937336
[DEBUG] 2019-11-27 17:12:42.827 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@278667fd
[DEBUG] 2019-11-27 17:12:43.003 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-11-27 17:12:43.004 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-11-27 17:12:43.006 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-11-27 17:12:43.008 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-11-27 17:12:43.012 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-11-27 17:12:43.014 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-11-27 17:12:43.014 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-11-27 17:12:43.037 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-11-27 17:12:43.038 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-11-27 17:12:43.041 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-11-27 17:12:43.041 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-11-27 17:12:43.041 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-11-27 17:12:43.071 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-11-27 17:12:43.075 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-11-27 17:12:43.098 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_yugioh_card_db
[INFO ] 2019-11-27 17:12:43.098 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-11-27 17:12:43.098 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-11-27 17:12:43.604 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-11-27 17:12:44.012 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-11-27 17:12:44.013 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-11-27 17:12:44.013 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-11-27 17:12:44.143 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-11-27 17:12:44.186 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-11-27 17:12:44.241 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-11-27 17:12:44.362 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-11-27 17:12:44.370 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6aa3bfc] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6e4599c0]
[DEBUG] 2019-11-27 17:12:44.664 [main] AnnotationBinder - Binding entity from annotated class: edu.yang.entity.YugiohCard
[DEBUG] 2019-11-27 17:12:44.732 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-11-27 17:12:44.736 [main] EntityBinder - Import with entity name YugiohCard
[DEBUG] 2019-11-27 17:12:44.742 [main] EntityBinder - Bind entity edu.yang.entity.YugiohCard on table yugioh_card
[DEBUG] 2019-11-27 17:12:44.800 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.810 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-11-27 17:12:44.812 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:id]
[DEBUG] 2019-11-27 17:12:44.821 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-11-27 17:12:44.824 [main] PropertyBinder - Building property id
[DEBUG] 2019-11-27 17:12:44.834 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-11-27 17:12:44.835 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_index, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.835 [main] PropertyBinder - MetadataSourceProcessor property cardIndex with lazy=false
[DEBUG] 2019-11-27 17:12:44.835 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardIndex]
[DEBUG] 2019-11-27 17:12:44.835 [main] SimpleValueBinder - building SimpleValue for cardIndex
[DEBUG] 2019-11-27 17:12:44.835 [main] PropertyBinder - Building property cardIndex
[DEBUG] 2019-11-27 17:12:44.836 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.836 [main] PropertyBinder - MetadataSourceProcessor property cardName with lazy=false
[DEBUG] 2019-11-27 17:12:44.836 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardName]
[DEBUG] 2019-11-27 17:12:44.836 [main] SimpleValueBinder - building SimpleValue for cardName
[DEBUG] 2019-11-27 17:12:44.836 [main] PropertyBinder - Building property cardName
[DEBUG] 2019-11-27 17:12:44.836 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_rarity, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.838 [main] PropertyBinder - MetadataSourceProcessor property cardRarity with lazy=false
[DEBUG] 2019-11-27 17:12:44.838 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardRarity]
[DEBUG] 2019-11-27 17:12:44.838 [main] SimpleValueBinder - building SimpleValue for cardRarity
[DEBUG] 2019-11-27 17:12:44.839 [main] PropertyBinder - Building property cardRarity
[DEBUG] 2019-11-27 17:12:44.839 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_set, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.839 [main] PropertyBinder - MetadataSourceProcessor property cardSet with lazy=false
[DEBUG] 2019-11-27 17:12:44.839 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardSet]
[DEBUG] 2019-11-27 17:12:44.840 [main] SimpleValueBinder - building SimpleValue for cardSet
[DEBUG] 2019-11-27 17:12:44.840 [main] PropertyBinder - Building property cardSet
[DEBUG] 2019-11-27 17:12:44.840 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_type, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.840 [main] PropertyBinder - MetadataSourceProcessor property cardType with lazy=false
[DEBUG] 2019-11-27 17:12:44.840 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardType]
[DEBUG] 2019-11-27 17:12:44.840 [main] SimpleValueBinder - building SimpleValue for cardType
[DEBUG] 2019-11-27 17:12:44.840 [main] PropertyBinder - Building property cardType
[DEBUG] 2019-11-27 17:12:44.845 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='yugiohCard'}
[DEBUG] 2019-11-27 17:12:44.845 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=entries, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.847 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.860 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.860 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=entries_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.861 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='entries_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-11-27 17:12:44.875 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='yugiohCard'}
[DEBUG] 2019-11-27 17:12:44.876 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='yugiohCard'}
[DEBUG] 2019-11-27 17:12:44.877 [main] CollectionBinder - Collection role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:44.883 [main] PropertyBinder - Building property entries
[DEBUG] 2019-11-27 17:12:44.883 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=image, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.884 [main] PropertyBinder - MetadataSourceProcessor property image with lazy=false
[DEBUG] 2019-11-27 17:12:44.885 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:image]
[DEBUG] 2019-11-27 17:12:44.886 [main] SimpleValueBinder - building SimpleValue for image
[DEBUG] 2019-11-27 17:12:44.887 [main] PropertyBinder - Building property image
[DEBUG] 2019-11-27 17:12:44.887 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.887 [main] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2019-11-27 17:12:44.887 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:price]
[DEBUG] 2019-11-27 17:12:44.887 [main] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2019-11-27 17:12:44.887 [main] PropertyBinder - Building property price
[DEBUG] 2019-11-27 17:12:44.888 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=qty, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.888 [main] PropertyBinder - MetadataSourceProcessor property quantity with lazy=false
[DEBUG] 2019-11-27 17:12:44.888 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:quantity]
[DEBUG] 2019-11-27 17:12:44.888 [main] SimpleValueBinder - building SimpleValue for quantity
[DEBUG] 2019-11-27 17:12:44.888 [main] PropertyBinder - Building property quantity
[DEBUG] 2019-11-27 17:12:44.889 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=status, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.889 [main] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[DEBUG] 2019-11-27 17:12:44.889 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:status]
[DEBUG] 2019-11-27 17:12:44.889 [main] SimpleValueBinder - building SimpleValue for status
[DEBUG] 2019-11-27 17:12:44.889 [main] PropertyBinder - Building property status
[DEBUG] 2019-11-27 17:12:44.892 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-11-27 17:12:44.895 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.901 [main] PropertyBinder - Building property user
[DEBUG] 2019-11-27 17:12:44.903 [main] AnnotationBinder - Binding entity from annotated class: edu.yang.entity.User
[DEBUG] 2019-11-27 17:12:44.903 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-11-27 17:12:44.904 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-11-27 17:12:44.905 [main] EntityBinder - Bind entity edu.yang.entity.User on table user
[DEBUG] 2019-11-27 17:12:44.910 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.910 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-11-27 17:12:44.910 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:id]
[DEBUG] 2019-11-27 17:12:44.910 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-11-27 17:12:44.910 [main] PropertyBinder - Building property id
[DEBUG] 2019-11-27 17:12:44.910 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-11-27 17:12:44.958 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-11-27 17:12:44.959 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=cards, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.959 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.960 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.960 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=cards_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.961 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='cards_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-11-27 17:12:44.962 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-11-27 17:12:44.962 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-11-27 17:12:44.963 [main] CollectionBinder - Collection role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:44.963 [main] PropertyBinder - Building property cards
[DEBUG] 2019-11-27 17:12:44.963 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_password, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.963 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2019-11-27 17:12:44.963 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:password]
[DEBUG] 2019-11-27 17:12:44.963 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2019-11-27 17:12:44.963 [main] PropertyBinder - Building property password
[DEBUG] 2019-11-27 17:12:44.965 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.965 [main] PropertyBinder - MetadataSourceProcessor property role with lazy=false
[DEBUG] 2019-11-27 17:12:44.965 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:role]
[DEBUG] 2019-11-27 17:12:44.965 [main] SimpleValueBinder - building SimpleValue for role
[DEBUG] 2019-11-27 17:12:44.965 [main] PropertyBinder - Building property role
[DEBUG] 2019-11-27 17:12:44.965 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.965 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-11-27 17:12:44.965 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:userName]
[DEBUG] 2019-11-27 17:12:44.966 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-11-27 17:12:44.967 [main] PropertyBinder - Building property userName
[DEBUG] 2019-11-27 17:12:44.968 [main] AnnotationBinder - Binding entity from annotated class: edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-11-27 17:12:44.969 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-11-27 17:12:44.969 [main] EntityBinder - Import with entity name YugiohCardHistory
[DEBUG] 2019-11-27 17:12:44.970 [main] EntityBinder - Bind entity edu.yang.entity.YugiohCardHistory on table yugioh_card_history
[DEBUG] 2019-11-27 17:12:44.975 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.976 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-11-27 17:12:44.976 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCardHistory:id]
[DEBUG] 2019-11-27 17:12:44.978 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-11-27 17:12:44.978 [main] PropertyBinder - Building property id
[DEBUG] 2019-11-27 17:12:44.979 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-11-27 17:12:44.979 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:44.979 [main] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2019-11-27 17:12:44.979 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCardHistory:price]
[DEBUG] 2019-11-27 17:12:44.979 [main] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2019-11-27 17:12:44.979 [main] PropertyBinder - Building property price
[DEBUG] 2019-11-27 17:12:44.980 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=update_date, insertable=true, updatable=false, unique=false}
[DEBUG] 2019-11-27 17:12:44.980 [main] PropertyBinder - MetadataSourceProcessor property ts with lazy=false
[DEBUG] 2019-11-27 17:12:44.980 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCardHistory:ts]
[DEBUG] 2019-11-27 17:12:44.980 [main] SimpleValueBinder - building SimpleValue for ts
[DEBUG] 2019-11-27 17:12:44.980 [main] PropertyBinder - Building property ts
[DEBUG] 2019-11-27 17:12:45.018 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-11-27 17:12:45.018 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=yugiohCard, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:12:45.019 [main] PropertyBinder - Building property yugiohCard
[DEBUG] 2019-11-27 17:12:45.024 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-11-27 17:12:45.024 [main] SimpleValueBinder - Starting fillSimpleValue for cardIndex
[DEBUG] 2019-11-27 17:12:45.026 [main] SimpleValueBinder - Starting fillSimpleValue for cardName
[DEBUG] 2019-11-27 17:12:45.026 [main] SimpleValueBinder - Starting fillSimpleValue for cardRarity
[DEBUG] 2019-11-27 17:12:45.027 [main] SimpleValueBinder - Starting fillSimpleValue for cardSet
[DEBUG] 2019-11-27 17:12:45.027 [main] SimpleValueBinder - Starting fillSimpleValue for cardType
[DEBUG] 2019-11-27 17:12:45.027 [main] SimpleValueBinder - Starting fillSimpleValue for image
[DEBUG] 2019-11-27 17:12:45.027 [main] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2019-11-27 17:12:45.027 [main] SimpleValueBinder - Starting fillSimpleValue for quantity
[DEBUG] 2019-11-27 17:12:45.027 [main] SimpleValueBinder - Starting fillSimpleValue for status
[DEBUG] 2019-11-27 17:12:45.027 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-11-27 17:12:45.027 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2019-11-27 17:12:45.027 [main] SimpleValueBinder - Starting fillSimpleValue for role
[DEBUG] 2019-11-27 17:12:45.028 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-11-27 17:12:45.028 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-11-27 17:12:45.028 [main] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2019-11-27 17:12:45.028 [main] SimpleValueBinder - Starting fillSimpleValue for ts
[DEBUG] 2019-11-27 17:12:45.067 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [yugioh_card]
[DEBUG] 2019-11-27 17:12:45.067 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2019-11-27 17:12:45.068 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [yugioh_card_history]
[DEBUG] 2019-11-27 17:12:45.068 [main] CollectionSecondPass - Second pass for collection: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:45.068 [main] CollectionBinder - Binding a OneToMany: edu.yang.entity.YugiohCard.entries through a foreign key
[DEBUG] 2019-11-27 17:12:45.069 [main] CollectionBinder - Mapping collection: edu.yang.entity.YugiohCard.entries -> yugioh_card_history
[DEBUG] 2019-11-27 17:12:45.078 [main] TableBinder - Retrieving property edu.yang.entity.YugiohCardHistory.yugiohCard
[DEBUG] 2019-11-27 17:12:45.078 [main] CollectionSecondPass - Mapped collection key: yugiohCard_id, one-to-many: edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-11-27 17:12:45.079 [main] CollectionSecondPass - Second pass for collection: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:45.079 [main] CollectionBinder - Binding a OneToMany: edu.yang.entity.User.cards through a foreign key
[DEBUG] 2019-11-27 17:12:45.079 [main] CollectionBinder - Mapping collection: edu.yang.entity.User.cards -> yugioh_card
[DEBUG] 2019-11-27 17:12:45.080 [main] TableBinder - Retrieving property edu.yang.entity.YugiohCard.user
[DEBUG] 2019-11-27 17:12:45.080 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: edu.yang.entity.YugiohCard
[DEBUG] 2019-11-27 17:12:45.080 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.User
[DEBUG] 2019-11-27 17:12:45.096 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.YugiohCard
[DEBUG] 2019-11-27 17:12:45.100 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.User
[DEBUG] 2019-11-27 17:12:45.100 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.YugiohCard
[DEBUG] 2019-11-27 17:12:45.314 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-11-27 17:12:45.315 [main] Settings - SessionFactory name : null
[DEBUG] 2019-11-27 17:12:45.315 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-11-27 17:12:45.315 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-11-27 17:12:45.316 [main] Settings - Statistics: disabled
[DEBUG] 2019-11-27 17:12:45.316 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-11-27 17:12:45.316 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-11-27 17:12:45.316 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-11-27 17:12:45.316 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-11-27 17:12:45.316 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-11-27 17:12:45.316 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-11-27 17:12:45.316 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-11-27 17:12:45.316 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-11-27 17:12:45.316 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-11-27 17:12:45.316 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-11-27 17:12:45.316 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-11-27 17:12:45.316 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-11-27 17:12:45.316 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-11-27 17:12:45.316 [main] Settings - Named query checking : enabled
[DEBUG] 2019-11-27 17:12:45.316 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-11-27 17:12:45.317 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-11-27 17:12:45.317 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-11-27 17:12:45.317 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-11-27 17:12:45.317 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-11-27 17:12:45.317 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-11-27 17:12:45.317 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-11-27 17:12:45.317 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-11-27 17:12:45.317 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-11-27 17:12:45.317 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-11-27 17:12:45.317 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-11-27 17:12:45.317 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-11-27 17:12:45.317 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-11-27 17:12:45.317 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-11-27 17:12:45.317 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-11-27 17:12:45.317 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-11-27 17:12:45.317 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-11-27 17:12:45.317 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-11-27 17:12:45.317 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-11-27 17:12:45.317 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-11-27 17:12:45.456 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-11-27 17:12:45.502 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-11-27 17:12:45.502 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/IdeaProjects/indieproject/target/test-classes:/home/student/IdeaProjects/indieproject/target/classes:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/home/student/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/home/student/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/student/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/home/student/.m2/repository/com/sun/activation/jakarta.activation/1.2.1/jakarta.activation-1.2.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/home/student/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/home/student/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/home/student/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/student/.m2/repository/org/apache/poi/poi/4.1.1/poi-4.1.1.jar:/home/student/.m2/repository/commons-codec/commons-codec/1.13/commons-codec-1.13.jar:/home/student/.m2/repository/org/apache/commons/commons-collections4/4.4/commons-collections4-4.4.jar:/home/student/.m2/repository/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:/home/student/.m2/repository/org/apache/poi/poi-ooxml/4.1.1/poi-ooxml-4.1.1.jar:/home/student/.m2/repository/org/apache/poi/poi-ooxml-schemas/4.1.1/poi-ooxml-schemas-4.1.1.jar:/home/student/.m2/repository/org/apache/xmlbeans/xmlbeans/3.1.0/xmlbeans-3.1.0.jar:/home/student/.m2/repository/org/apache/commons/commons-compress/1.19/commons-compress-1.19.jar:/home/student/.m2/repository/com/github/virtuald/curvesapi/1.06/curvesapi-1.06.jar:/home/student/.m2/repository/commons-fileupload/commons-fileupload/1.3.3/commons-fileupload-1.3.3.jar:/home/student/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=/home/student/IdeaProjects/indieproject/target/surefire/surefirebooter9344102792307677989.jar /home/student/IdeaProjects/indieproject/target/surefire/surefire7282709982115118403tmp /home/student/IdeaProjects/indieproject/target/surefire/surefire_03584480799317735706tmp, jdk.debug=release, surefire.test.class.path=/home/student/IdeaProjects/indieproject/target/test-classes:/home/student/IdeaProjects/indieproject/target/classes:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/home/student/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/home/student/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/student/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/home/student/.m2/repository/com/sun/activation/jakarta.activation/1.2.1/jakarta.activation-1.2.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/home/student/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/home/student/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/home/student/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/student/.m2/repository/org/apache/poi/poi/4.1.1/poi-4.1.1.jar:/home/student/.m2/repository/commons-codec/commons-codec/1.13/commons-codec-1.13.jar:/home/student/.m2/repository/org/apache/commons/commons-collections4/4.4/commons-collections4-4.4.jar:/home/student/.m2/repository/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:/home/student/.m2/repository/org/apache/poi/poi-ooxml/4.1.1/poi-ooxml-4.1.1.jar:/home/student/.m2/repository/org/apache/poi/poi-ooxml-schemas/4.1.1/poi-ooxml-schemas-4.1.1.jar:/home/student/.m2/repository/org/apache/xmlbeans/xmlbeans/3.1.0/xmlbeans-3.1.0.jar:/home/student/.m2/repository/org/apache/commons/commons-compress/1.19/commons-compress-1.19.jar:/home/student/.m2/repository/com/github/virtuald/curvesapi/1.06/curvesapi-1.06.jar:/home/student/.m2/repository/commons-fileupload/commons-fileupload/1.3.3/commons-fileupload-1.3.3.jar:/home/student/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, basedir=/home/student/IdeaProjects/indieproject, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, surefire.real.class.path=/home/student/IdeaProjects/indieproject/target/surefire/surefirebooter9344102792307677989.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.0.0-36-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test_yugioh_card_db, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, localRepository=/home/student/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.4, user.dir=/home/student/IdeaProjects/indieproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@61ffd148, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, idea.version2019.1.4=true, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/test_yugioh_card_db, java.class.version=55.0}
[DEBUG] 2019-11-27 17:12:45.692 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-11-27 17:12:45.692 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-11-27 17:12:45.693 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-11-27 17:12:45.693 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6aa3bfc] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4e3f2908]
[DEBUG] 2019-11-27 17:12:46.666 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.User] is safe
[DEBUG] 2019-11-27 17:12:46.666 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.User
[DEBUG] 2019-11-27 17:12:46.691 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.User] is safe
[DEBUG] 2019-11-27 17:12:46.691 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.User
[DEBUG] 2019-11-27 17:12:47.109 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCard] is safe
[DEBUG] 2019-11-27 17:12:47.109 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCard
[DEBUG] 2019-11-27 17:12:47.110 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCard] is safe
[DEBUG] 2019-11-27 17:12:47.110 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCard
[DEBUG] 2019-11-27 17:12:47.230 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCardHistory] is safe
[DEBUG] 2019-11-27 17:12:47.230 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-11-27 17:12:47.231 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCardHistory] is safe
[DEBUG] 2019-11-27 17:12:47.231 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-11-27 17:12:47.327 [main] AbstractCollectionPersister - Static SQL for collection: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:47.327 [main] AbstractCollectionPersister -  Row insert: update yugioh_card set user_id=? where id=?
[DEBUG] 2019-11-27 17:12:47.327 [main] AbstractCollectionPersister -  Row update: update yugioh_card set  where id=?
[DEBUG] 2019-11-27 17:12:47.327 [main] AbstractCollectionPersister -  Row delete: update yugioh_card set user_id=null where user_id=? and id=?
[DEBUG] 2019-11-27 17:12:47.327 [main] AbstractCollectionPersister -  One-shot delete: update yugioh_card set user_id=null where user_id=?
[DEBUG] 2019-11-27 17:12:47.328 [main] AbstractCollectionPersister - Static SQL for collection: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:47.328 [main] AbstractCollectionPersister -  Row insert: update yugioh_card_history set yugiohCard_id=? where id=?
[DEBUG] 2019-11-27 17:12:47.328 [main] AbstractCollectionPersister -  Row update: update yugioh_card_history set  where id=?
[DEBUG] 2019-11-27 17:12:47.328 [main] AbstractCollectionPersister -  Row delete: update yugioh_card_history set yugiohCard_id=null where yugiohCard_id=? and id=?
[DEBUG] 2019-11-27 17:12:47.328 [main] AbstractCollectionPersister -  One-shot delete: update yugioh_card_history set yugiohCard_id=null where yugiohCard_id=?
[DEBUG] 2019-11-27 17:12:47.354 [main] AbstractEntityPersister - Static SQL for entity: edu.yang.entity.User
[DEBUG] 2019-11-27 17:12:47.354 [main] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2019-11-27 17:12:47.356 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.user_password as user_pas2_0_, user_.user_role as user_rol3_0_, user_.user_name as user_nam4_0_ from user user_ where user_.id=?
[DEBUG] 2019-11-27 17:12:47.356 [main] AbstractEntityPersister -  Insert 0: insert into user (user_password, user_role, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2019-11-27 17:12:47.358 [main] AbstractEntityPersister -  Update 0: update user set user_password=?, user_role=?, user_name=? where id=?
[DEBUG] 2019-11-27 17:12:47.358 [main] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2019-11-27 17:12:47.358 [main] AbstractEntityPersister -  Identity insert: insert into user (user_password, user_role, user_name) values (?, ?, ?)
[DEBUG] 2019-11-27 17:12:47.379 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@374ccb9]
[DEBUG] 2019-11-27 17:12:47.380 [main] MetamodelGraphWalker - Visiting attribute path : cards
[DEBUG] 2019-11-27 17:12:47.383 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f811029]
[DEBUG] 2019-11-27 17:12:47.385 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19cdc217]
[DEBUG] 2019-11-27 17:12:47.386 [main] MetamodelGraphWalker - Visiting attribute path : cards.cardIndex
[DEBUG] 2019-11-27 17:12:47.386 [main] MetamodelGraphWalker - Visiting attribute path : cards.cardName
[DEBUG] 2019-11-27 17:12:47.386 [main] MetamodelGraphWalker - Visiting attribute path : cards.cardRarity
[DEBUG] 2019-11-27 17:12:47.386 [main] MetamodelGraphWalker - Visiting attribute path : cards.cardSet
[DEBUG] 2019-11-27 17:12:47.411 [main] MetamodelGraphWalker - Visiting attribute path : cards.cardType
[DEBUG] 2019-11-27 17:12:47.411 [main] MetamodelGraphWalker - Visiting attribute path : cards.entries
[DEBUG] 2019-11-27 17:12:47.412 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@71166348]
[DEBUG] 2019-11-27 17:12:47.415 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d874695]
[DEBUG] 2019-11-27 17:12:47.415 [main] MetamodelGraphWalker - Visiting attribute path : cards.entries.price
[DEBUG] 2019-11-27 17:12:47.415 [main] MetamodelGraphWalker - Visiting attribute path : cards.entries.ts
[DEBUG] 2019-11-27 17:12:47.415 [main] MetamodelGraphWalker - Visiting attribute path : cards.entries.yugiohCard
[DEBUG] 2019-11-27 17:12:47.415 [main] MetamodelGraphWalker - Property path deemed to be circular : cards.entries.yugiohCard
[DEBUG] 2019-11-27 17:12:47.416 [main] MetamodelGraphWalker - Visiting attribute path : cards.image
[DEBUG] 2019-11-27 17:12:47.416 [main] MetamodelGraphWalker - Visiting attribute path : cards.price
[DEBUG] 2019-11-27 17:12:47.416 [main] MetamodelGraphWalker - Visiting attribute path : cards.quantity
[DEBUG] 2019-11-27 17:12:47.416 [main] MetamodelGraphWalker - Visiting attribute path : cards.status
[DEBUG] 2019-11-27 17:12:47.417 [main] MetamodelGraphWalker - Visiting attribute path : cards.user
[DEBUG] 2019-11-27 17:12:47.417 [main] MetamodelGraphWalker - Property path deemed to be circular : cards.user
[DEBUG] 2019-11-27 17:12:47.417 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-11-27 17:12:47.417 [main] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2019-11-27 17:12:47.417 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-11-27 17:12:47.422 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-27 17:12:47.447 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-27 17:12:47.459 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:0>, path=edu.yang.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.User.cards, querySpaceUid=<gen:1>, path=edu.yang.entity.User.cards)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:2>, path=edu.yang.entity.User.cards.<elements>)
                - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:3>, path=edu.yang.entity.User.cards.<elements>.entries)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:4>, path=edu.yang.entity.User.cards.<elements>.entries.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(cards)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.User.cards)
                - SQL table alias mapping - cards1_
                - alias suffix - 1_
                - suffixed key columns - {user_id11_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCard)
                      - SQL table alias mapping - cards1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(entries)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=edu.yang.entity.YugiohCard.entries)
                            - SQL table alias mapping - entries2_
                            - alias suffix - 3_
                            - suffixed key columns - {yugiohCa4_2_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_2_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=edu.yang.entity.YugiohCardHistory)
                                  - SQL table alias mapping - entries2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_2_4_}

[DEBUG] 2019-11-27 17:12:47.463 [main] EntityLoader - Static select for entity edu.yang.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-27 17:12:47.466 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c97721b]
[DEBUG] 2019-11-27 17:12:47.466 [main] MetamodelGraphWalker - Visiting attribute path : cards
[DEBUG] 2019-11-27 17:12:47.466 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35fa450f]
[DEBUG] 2019-11-27 17:12:47.468 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e03046d]
[DEBUG] 2019-11-27 17:12:47.468 [main] MetamodelGraphWalker - Visiting attribute path : cards.cardIndex
[DEBUG] 2019-11-27 17:12:47.468 [main] MetamodelGraphWalker - Visiting attribute path : cards.cardName
[DEBUG] 2019-11-27 17:12:47.468 [main] MetamodelGraphWalker - Visiting attribute path : cards.cardRarity
[DEBUG] 2019-11-27 17:12:47.468 [main] MetamodelGraphWalker - Visiting attribute path : cards.cardSet
[DEBUG] 2019-11-27 17:12:47.468 [main] MetamodelGraphWalker - Visiting attribute path : cards.cardType
[DEBUG] 2019-11-27 17:12:47.468 [main] MetamodelGraphWalker - Visiting attribute path : cards.entries
[DEBUG] 2019-11-27 17:12:47.468 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13516600]
[DEBUG] 2019-11-27 17:12:47.468 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35d7386b]
[DEBUG] 2019-11-27 17:12:47.468 [main] MetamodelGraphWalker - Visiting attribute path : cards.entries.price
[DEBUG] 2019-11-27 17:12:47.468 [main] MetamodelGraphWalker - Visiting attribute path : cards.entries.ts
[DEBUG] 2019-11-27 17:12:47.468 [main] MetamodelGraphWalker - Visiting attribute path : cards.entries.yugiohCard
[DEBUG] 2019-11-27 17:12:47.468 [main] MetamodelGraphWalker - Property path deemed to be circular : cards.entries.yugiohCard
[DEBUG] 2019-11-27 17:12:47.468 [main] MetamodelGraphWalker - Visiting attribute path : cards.image
[DEBUG] 2019-11-27 17:12:47.468 [main] MetamodelGraphWalker - Visiting attribute path : cards.price
[DEBUG] 2019-11-27 17:12:47.468 [main] MetamodelGraphWalker - Visiting attribute path : cards.quantity
[DEBUG] 2019-11-27 17:12:47.469 [main] MetamodelGraphWalker - Visiting attribute path : cards.status
[DEBUG] 2019-11-27 17:12:47.469 [main] MetamodelGraphWalker - Visiting attribute path : cards.user
[DEBUG] 2019-11-27 17:12:47.469 [main] MetamodelGraphWalker - Property path deemed to be circular : cards.user
[DEBUG] 2019-11-27 17:12:47.469 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-11-27 17:12:47.469 [main] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2019-11-27 17:12:47.469 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-11-27 17:12:47.469 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-27 17:12:47.469 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-27 17:12:47.472 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:0>, path=edu.yang.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.User.cards, querySpaceUid=<gen:1>, path=edu.yang.entity.User.cards)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:2>, path=edu.yang.entity.User.cards.<elements>)
                - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:3>, path=edu.yang.entity.User.cards.<elements>.entries)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:4>, path=edu.yang.entity.User.cards.<elements>.entries.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(cards)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.User.cards)
                - SQL table alias mapping - cards1_
                - alias suffix - 1_
                - suffixed key columns - {user_id11_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCard)
                      - SQL table alias mapping - cards1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(entries)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=edu.yang.entity.YugiohCard.entries)
                            - SQL table alias mapping - entries2_
                            - alias suffix - 3_
                            - suffixed key columns - {yugiohCa4_2_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_2_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=edu.yang.entity.YugiohCardHistory)
                                  - SQL table alias mapping - entries2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_2_4_}

[DEBUG] 2019-11-27 17:12:47.473 [main] EntityLoader - Static select for entity edu.yang.entity.User [READ]: select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-27 17:12:47.517 [main] Loader - Static select for action ACTION_MERGE on entity edu.yang.entity.User: select user0_.id as id1_0_1_, user0_.user_password as user_pas2_0_1_, user0_.user_role as user_rol3_0_1_, user0_.user_name as user_nam4_0_1_, cards1_.user_id as user_id11_1_3_, cards1_.id as id1_1_3_, cards1_.id as id1_1_0_, cards1_.card_index as card_ind2_1_0_, cards1_.card_name as card_nam3_1_0_, cards1_.card_rarity as card_rar4_1_0_, cards1_.card_set as card_set5_1_0_, cards1_.card_type as card_typ6_1_0_, cards1_.image as image7_1_0_, cards1_.price as price8_1_0_, cards1_.qty as qty9_1_0_, cards1_.status as status10_1_0_, cards1_.user_id as user_id11_1_0_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id where user0_.id=?
[DEBUG] 2019-11-27 17:12:47.517 [main] Loader - Static select for action ACTION_REFRESH on entity edu.yang.entity.User: select user0_.id as id1_0_1_, user0_.user_password as user_pas2_0_1_, user0_.user_role as user_rol3_0_1_, user0_.user_name as user_nam4_0_1_, cards1_.user_id as user_id11_1_3_, cards1_.id as id1_1_3_, cards1_.id as id1_1_0_, cards1_.card_index as card_ind2_1_0_, cards1_.card_name as card_nam3_1_0_, cards1_.card_rarity as card_rar4_1_0_, cards1_.card_set as card_set5_1_0_, cards1_.card_type as card_typ6_1_0_, cards1_.image as image7_1_0_, cards1_.price as price8_1_0_, cards1_.qty as qty9_1_0_, cards1_.status as status10_1_0_, cards1_.user_id as user_id11_1_0_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id where user0_.id=?
[DEBUG] 2019-11-27 17:12:47.517 [main] AbstractEntityPersister - Static SQL for entity: edu.yang.entity.YugiohCard
[DEBUG] 2019-11-27 17:12:47.518 [main] AbstractEntityPersister -  Version select: select id from yugioh_card where id =?
[DEBUG] 2019-11-27 17:12:47.518 [main] AbstractEntityPersister -  Snapshot select: select yugiohcard_.id, yugiohcard_.card_index as card_ind2_1_, yugiohcard_.card_name as card_nam3_1_, yugiohcard_.card_rarity as card_rar4_1_, yugiohcard_.card_set as card_set5_1_, yugiohcard_.card_type as card_typ6_1_, yugiohcard_.image as image7_1_, yugiohcard_.price as price8_1_, yugiohcard_.qty as qty9_1_, yugiohcard_.status as status10_1_, yugiohcard_.user_id as user_id11_1_ from yugioh_card yugiohcard_ where yugiohcard_.id=?
[DEBUG] 2019-11-27 17:12:47.518 [main] AbstractEntityPersister -  Insert 0: insert into yugioh_card (card_index, card_name, card_rarity, card_set, card_type, image, price, qty, status, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-11-27 17:12:47.518 [main] AbstractEntityPersister -  Update 0: update yugioh_card set card_index=?, card_name=?, card_rarity=?, card_set=?, card_type=?, image=?, price=?, qty=?, status=?, user_id=? where id=?
[DEBUG] 2019-11-27 17:12:47.518 [main] AbstractEntityPersister -  Delete 0: delete from yugioh_card where id=?
[DEBUG] 2019-11-27 17:12:47.518 [main] AbstractEntityPersister -  Identity insert: insert into yugioh_card (card_index, card_name, card_rarity, card_set, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-11-27 17:12:47.518 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@282c4da0]
[DEBUG] 2019-11-27 17:12:47.545 [main] MetamodelGraphWalker - Visiting attribute path : cardIndex
[DEBUG] 2019-11-27 17:12:47.545 [main] MetamodelGraphWalker - Visiting attribute path : cardName
[DEBUG] 2019-11-27 17:12:47.546 [main] MetamodelGraphWalker - Visiting attribute path : cardRarity
[DEBUG] 2019-11-27 17:12:47.546 [main] MetamodelGraphWalker - Visiting attribute path : cardSet
[DEBUG] 2019-11-27 17:12:47.546 [main] MetamodelGraphWalker - Visiting attribute path : cardType
[DEBUG] 2019-11-27 17:12:47.546 [main] MetamodelGraphWalker - Visiting attribute path : entries
[DEBUG] 2019-11-27 17:12:47.546 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@18cf5c52]
[DEBUG] 2019-11-27 17:12:47.546 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10618775]
[DEBUG] 2019-11-27 17:12:47.546 [main] MetamodelGraphWalker - Visiting attribute path : entries.price
[DEBUG] 2019-11-27 17:12:47.546 [main] MetamodelGraphWalker - Visiting attribute path : entries.ts
[DEBUG] 2019-11-27 17:12:47.546 [main] MetamodelGraphWalker - Visiting attribute path : entries.yugiohCard
[DEBUG] 2019-11-27 17:12:47.546 [main] MetamodelGraphWalker - Property path deemed to be circular : entries.yugiohCard
[DEBUG] 2019-11-27 17:12:47.546 [main] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2019-11-27 17:12:47.546 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-11-27 17:12:47.546 [main] MetamodelGraphWalker - Visiting attribute path : quantity
[DEBUG] 2019-11-27 17:12:47.546 [main] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2019-11-27 17:12:47.546 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-11-27 17:12:47.546 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@426c0486]
[DEBUG] 2019-11-27 17:12:47.547 [main] MetamodelGraphWalker - Visiting attribute path : user.cards
[DEBUG] 2019-11-27 17:12:47.547 [main] MetamodelGraphWalker - Property path deemed to be circular : user.cards
[DEBUG] 2019-11-27 17:12:47.547 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2019-11-27 17:12:47.547 [main] MetamodelGraphWalker - Visiting attribute path : user.role
[DEBUG] 2019-11-27 17:12:47.547 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-11-27 17:12:47.547 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-27 17:12:47.547 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-27 17:12:47.548 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCard)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCard)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCard.entries)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCard.entries.<elements>)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:3>, path=edu.yang.entity.YugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCard)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(entries)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.YugiohCard.entries)
                - SQL table alias mapping - entries1_
                - alias suffix - 1_
                - suffixed key columns - {yugiohCa4_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_2_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCardHistory)
                      - SQL table alias mapping - entries1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.yang.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 3_
                - suffixed key columns - {id1_0_3_}

[DEBUG] 2019-11-27 17:12:47.548 [main] EntityLoader - Static select for entity edu.yang.entity.YugiohCard [NONE]: select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:12:47.548 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73d62b5]
[DEBUG] 2019-11-27 17:12:47.548 [main] MetamodelGraphWalker - Visiting attribute path : cardIndex
[DEBUG] 2019-11-27 17:12:47.548 [main] MetamodelGraphWalker - Visiting attribute path : cardName
[DEBUG] 2019-11-27 17:12:47.548 [main] MetamodelGraphWalker - Visiting attribute path : cardRarity
[DEBUG] 2019-11-27 17:12:47.548 [main] MetamodelGraphWalker - Visiting attribute path : cardSet
[DEBUG] 2019-11-27 17:12:47.548 [main] MetamodelGraphWalker - Visiting attribute path : cardType
[DEBUG] 2019-11-27 17:12:47.548 [main] MetamodelGraphWalker - Visiting attribute path : entries
[DEBUG] 2019-11-27 17:12:47.548 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@76ac68b0]
[DEBUG] 2019-11-27 17:12:47.548 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f559c74]
[DEBUG] 2019-11-27 17:12:47.548 [main] MetamodelGraphWalker - Visiting attribute path : entries.price
[DEBUG] 2019-11-27 17:12:47.548 [main] MetamodelGraphWalker - Visiting attribute path : entries.ts
[DEBUG] 2019-11-27 17:12:47.548 [main] MetamodelGraphWalker - Visiting attribute path : entries.yugiohCard
[DEBUG] 2019-11-27 17:12:47.548 [main] MetamodelGraphWalker - Property path deemed to be circular : entries.yugiohCard
[DEBUG] 2019-11-27 17:12:47.549 [main] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2019-11-27 17:12:47.549 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-11-27 17:12:47.549 [main] MetamodelGraphWalker - Visiting attribute path : quantity
[DEBUG] 2019-11-27 17:12:47.549 [main] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2019-11-27 17:12:47.549 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-11-27 17:12:47.549 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@677349fb]
[DEBUG] 2019-11-27 17:12:47.549 [main] MetamodelGraphWalker - Visiting attribute path : user.cards
[DEBUG] 2019-11-27 17:12:47.549 [main] MetamodelGraphWalker - Property path deemed to be circular : user.cards
[DEBUG] 2019-11-27 17:12:47.549 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2019-11-27 17:12:47.549 [main] MetamodelGraphWalker - Visiting attribute path : user.role
[DEBUG] 2019-11-27 17:12:47.549 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-11-27 17:12:47.549 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-27 17:12:47.550 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-27 17:12:47.553 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCard)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCard)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCard.entries)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCard.entries.<elements>)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:3>, path=edu.yang.entity.YugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCard)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(entries)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.YugiohCard.entries)
                - SQL table alias mapping - entries1_
                - alias suffix - 1_
                - suffixed key columns - {yugiohCa4_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_2_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCardHistory)
                      - SQL table alias mapping - entries1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.yang.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 3_
                - suffixed key columns - {id1_0_3_}

[DEBUG] 2019-11-27 17:12:47.553 [main] EntityLoader - Static select for entity edu.yang.entity.YugiohCard [READ]: select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:12:47.555 [main] Loader - Static select for action ACTION_MERGE on entity edu.yang.entity.YugiohCard: select yugiohcard0_.id as id1_1_1_, yugiohcard0_.card_index as card_ind2_1_1_, yugiohcard0_.card_name as card_nam3_1_1_, yugiohcard0_.card_rarity as card_rar4_1_1_, yugiohcard0_.card_set as card_set5_1_1_, yugiohcard0_.card_type as card_typ6_1_1_, yugiohcard0_.image as image7_1_1_, yugiohcard0_.price as price8_1_1_, yugiohcard0_.qty as qty9_1_1_, yugiohcard0_.status as status10_1_1_, yugiohcard0_.user_id as user_id11_1_1_, entries1_.yugiohCard_id as yugiohCa4_2_3_, entries1_.id as id1_2_3_, entries1_.id as id1_2_0_, entries1_.price as price2_2_0_, entries1_.update_date as update_d3_2_0_, entries1_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:12:47.556 [main] Loader - Static select for action ACTION_REFRESH on entity edu.yang.entity.YugiohCard: select yugiohcard0_.id as id1_1_1_, yugiohcard0_.card_index as card_ind2_1_1_, yugiohcard0_.card_name as card_nam3_1_1_, yugiohcard0_.card_rarity as card_rar4_1_1_, yugiohcard0_.card_set as card_set5_1_1_, yugiohcard0_.card_type as card_typ6_1_1_, yugiohcard0_.image as image7_1_1_, yugiohcard0_.price as price8_1_1_, yugiohcard0_.qty as qty9_1_1_, yugiohcard0_.status as status10_1_1_, yugiohcard0_.user_id as user_id11_1_1_, entries1_.yugiohCard_id as yugiohCa4_2_3_, entries1_.id as id1_2_3_, entries1_.id as id1_2_0_, entries1_.price as price2_2_0_, entries1_.update_date as update_d3_2_0_, entries1_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:12:47.556 [main] AbstractEntityPersister - Static SQL for entity: edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-11-27 17:12:47.556 [main] AbstractEntityPersister -  Version select: select id from yugioh_card_history where id =?
[DEBUG] 2019-11-27 17:12:47.559 [main] AbstractEntityPersister -  Snapshot select: select yugiohcard_.id, yugiohcard_.price as price2_2_, yugiohcard_.yugiohCard_id as yugiohCa4_2_ from yugioh_card_history yugiohcard_ where yugiohcard_.id=?
[DEBUG] 2019-11-27 17:12:47.559 [main] AbstractEntityPersister -  Insert 0: insert into yugioh_card_history (price, update_date, yugiohCard_id, id) values (?, ?, ?, ?)
[DEBUG] 2019-11-27 17:12:47.559 [main] AbstractEntityPersister -  Update 0: update yugioh_card_history set price=?, yugiohCard_id=? where id=?
[DEBUG] 2019-11-27 17:12:47.559 [main] AbstractEntityPersister -  Delete 0: delete from yugioh_card_history where id=?
[DEBUG] 2019-11-27 17:12:47.559 [main] AbstractEntityPersister -  Identity insert: insert into yugioh_card_history (price, update_date, yugiohCard_id) values (?, ?, ?)
[DEBUG] 2019-11-27 17:12:47.560 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c60ce47]
[DEBUG] 2019-11-27 17:12:47.560 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-11-27 17:12:47.560 [main] MetamodelGraphWalker - Visiting attribute path : ts
[DEBUG] 2019-11-27 17:12:47.560 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard
[DEBUG] 2019-11-27 17:12:47.564 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59918c8f]
[DEBUG] 2019-11-27 17:12:47.564 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardIndex
[DEBUG] 2019-11-27 17:12:47.564 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardName
[DEBUG] 2019-11-27 17:12:47.564 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardRarity
[DEBUG] 2019-11-27 17:12:47.564 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardSet
[DEBUG] 2019-11-27 17:12:47.564 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardType
[DEBUG] 2019-11-27 17:12:47.565 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.entries
[DEBUG] 2019-11-27 17:12:47.565 [main] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.entries
[DEBUG] 2019-11-27 17:12:47.565 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.image
[DEBUG] 2019-11-27 17:12:47.565 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.price
[DEBUG] 2019-11-27 17:12:47.565 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.quantity
[DEBUG] 2019-11-27 17:12:47.565 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.status
[DEBUG] 2019-11-27 17:12:47.565 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user
[DEBUG] 2019-11-27 17:12:47.565 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c74d19]
[DEBUG] 2019-11-27 17:12:47.565 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.cards
[DEBUG] 2019-11-27 17:12:47.565 [main] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.user.cards
[DEBUG] 2019-11-27 17:12:47.565 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.password
[DEBUG] 2019-11-27 17:12:47.565 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.role
[DEBUG] 2019-11-27 17:12:47.565 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.userName
[DEBUG] 2019-11-27 17:12:47.565 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-27 17:12:47.565 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-27 17:12:47.567 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCardHistory)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCardHistory)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCardHistory.yugiohCard)
             - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCardHistory.yugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCardHistory)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(yugiohCard)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCard)
                - SQL table alias mapping - yugiohcard1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-11-27 17:12:47.567 [main] EntityLoader - Static select for entity edu.yang.entity.YugiohCardHistory [NONE]: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_, yugiohcard1_.id as id1_1_1_, yugiohcard1_.card_index as card_ind2_1_1_, yugiohcard1_.card_name as card_nam3_1_1_, yugiohcard1_.card_rarity as card_rar4_1_1_, yugiohcard1_.card_set as card_set5_1_1_, yugiohcard1_.card_type as card_typ6_1_1_, yugiohcard1_.image as image7_1_1_, yugiohcard1_.price as price8_1_1_, yugiohcard1_.qty as qty9_1_1_, yugiohcard1_.status as status10_1_1_, yugiohcard1_.user_id as user_id11_1_1_, user2_.id as id1_0_2_, user2_.user_password as user_pas2_0_2_, user2_.user_role as user_rol3_0_2_, user2_.user_name as user_nam4_0_2_ from yugioh_card_history yugiohcard0_ left outer join yugioh_card yugiohcard1_ on yugiohcard0_.yugiohCard_id=yugiohcard1_.id left outer join user user2_ on yugiohcard1_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:12:47.567 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71b97eeb]
[DEBUG] 2019-11-27 17:12:47.567 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-11-27 17:12:47.567 [main] MetamodelGraphWalker - Visiting attribute path : ts
[DEBUG] 2019-11-27 17:12:47.567 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard
[DEBUG] 2019-11-27 17:12:47.567 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c62c3fd]
[DEBUG] 2019-11-27 17:12:47.567 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardIndex
[DEBUG] 2019-11-27 17:12:47.567 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardName
[DEBUG] 2019-11-27 17:12:47.567 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardRarity
[DEBUG] 2019-11-27 17:12:47.567 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardSet
[DEBUG] 2019-11-27 17:12:47.567 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardType
[DEBUG] 2019-11-27 17:12:47.567 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.entries
[DEBUG] 2019-11-27 17:12:47.567 [main] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.entries
[DEBUG] 2019-11-27 17:12:47.567 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.image
[DEBUG] 2019-11-27 17:12:47.567 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.price
[DEBUG] 2019-11-27 17:12:47.567 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.quantity
[DEBUG] 2019-11-27 17:12:47.567 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.status
[DEBUG] 2019-11-27 17:12:47.567 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user
[DEBUG] 2019-11-27 17:12:47.567 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49b89425]
[DEBUG] 2019-11-27 17:12:47.568 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.cards
[DEBUG] 2019-11-27 17:12:47.568 [main] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.user.cards
[DEBUG] 2019-11-27 17:12:47.568 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.password
[DEBUG] 2019-11-27 17:12:47.568 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.role
[DEBUG] 2019-11-27 17:12:47.568 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.userName
[DEBUG] 2019-11-27 17:12:47.568 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-27 17:12:47.568 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-27 17:12:47.568 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCardHistory)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCardHistory)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCardHistory.yugiohCard)
             - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCardHistory.yugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCardHistory)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(yugiohCard)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCard)
                - SQL table alias mapping - yugiohcard1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-11-27 17:12:47.568 [main] EntityLoader - Static select for entity edu.yang.entity.YugiohCardHistory [READ]: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_, yugiohcard1_.id as id1_1_1_, yugiohcard1_.card_index as card_ind2_1_1_, yugiohcard1_.card_name as card_nam3_1_1_, yugiohcard1_.card_rarity as card_rar4_1_1_, yugiohcard1_.card_set as card_set5_1_1_, yugiohcard1_.card_type as card_typ6_1_1_, yugiohcard1_.image as image7_1_1_, yugiohcard1_.price as price8_1_1_, yugiohcard1_.qty as qty9_1_1_, yugiohcard1_.status as status10_1_1_, yugiohcard1_.user_id as user_id11_1_1_, user2_.id as id1_0_2_, user2_.user_password as user_pas2_0_2_, user2_.user_role as user_rol3_0_2_, user2_.user_name as user_nam4_0_2_ from yugioh_card_history yugiohcard0_ left outer join yugioh_card yugiohcard1_ on yugiohcard0_.yugiohCard_id=yugiohcard1_.id left outer join user user2_ on yugiohcard1_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:12:47.571 [main] Loader - Static select for action ACTION_MERGE on entity edu.yang.entity.YugiohCardHistory: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card_history yugiohcard0_ where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:12:47.571 [main] Loader - Static select for action ACTION_REFRESH on entity edu.yang.entity.YugiohCardHistory: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card_history yugiohcard0_ where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:12:47.576 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17fbfb02]
[DEBUG] 2019-11-27 17:12:47.576 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8f2e3e6]
[DEBUG] 2019-11-27 17:12:47.577 [main] MetamodelGraphWalker - Visiting attribute path : cardIndex
[DEBUG] 2019-11-27 17:12:47.577 [main] MetamodelGraphWalker - Visiting attribute path : cardName
[DEBUG] 2019-11-27 17:12:47.577 [main] MetamodelGraphWalker - Visiting attribute path : cardRarity
[DEBUG] 2019-11-27 17:12:47.577 [main] MetamodelGraphWalker - Visiting attribute path : cardSet
[DEBUG] 2019-11-27 17:12:47.577 [main] MetamodelGraphWalker - Visiting attribute path : cardType
[DEBUG] 2019-11-27 17:12:47.577 [main] MetamodelGraphWalker - Visiting attribute path : entries
[DEBUG] 2019-11-27 17:12:47.577 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@24e5389c]
[DEBUG] 2019-11-27 17:12:47.577 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b170235]
[DEBUG] 2019-11-27 17:12:47.577 [main] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2019-11-27 17:12:47.577 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-11-27 17:12:47.577 [main] MetamodelGraphWalker - Visiting attribute path : quantity
[DEBUG] 2019-11-27 17:12:47.577 [main] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2019-11-27 17:12:47.578 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-11-27 17:12:47.578 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-11-27 17:12:47.578 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-27 17:12:47.580 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-27 17:12:47.587 [main] LoadPlanTreePrinter - LoadPlan(collection=edu.yang.entity.User.cards)
    - Returns
       - CollectionReturnImpl(collection=edu.yang.entity.User.cards, querySpaceUid=<gen:0>, path=[edu.yang.entity.User.cards])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:1>, path=[edu.yang.entity.User.cards].<elements>)
             - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:2>, path=[edu.yang.entity.User.cards].<elements>.entries)
                - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:3>, path=[edu.yang.entity.User.cards].<elements>.entries.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.yang.entity.User.cards)
          - SQL table alias mapping - cards0_
          - alias suffix - 0_
          - suffixed key columns - {user_id11_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCard)
                - SQL table alias mapping - cards0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-11-27 17:12:47.589 [main] CollectionLoader - Static select for collection edu.yang.entity.User.cards: select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-27 17:12:47.590 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@25699aa7]
[DEBUG] 2019-11-27 17:12:47.590 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a47730c]
[DEBUG] 2019-11-27 17:12:47.590 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-11-27 17:12:47.590 [main] MetamodelGraphWalker - Visiting attribute path : ts
[DEBUG] 2019-11-27 17:12:47.590 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard
[DEBUG] 2019-11-27 17:12:47.590 [main] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard
[DEBUG] 2019-11-27 17:12:47.590 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-27 17:12:47.594 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-27 17:12:47.596 [main] LoadPlanTreePrinter - LoadPlan(collection=edu.yang.entity.YugiohCard.entries)
    - Returns
       - CollectionReturnImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:0>, path=[edu.yang.entity.YugiohCard.entries])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:1>, path=[edu.yang.entity.YugiohCard.entries].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.yang.entity.YugiohCard.entries)
          - SQL table alias mapping - entries0_
          - alias suffix - 0_
          - suffixed key columns - {yugiohCa4_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCardHistory)
                - SQL table alias mapping - entries0_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

[DEBUG] 2019-11-27 17:12:47.596 [main] CollectionLoader - Static select for collection edu.yang.entity.YugiohCard.entries: select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:12:47.637 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-11-27 17:12:47.637 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-11-27 17:12:47.637 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-11-27 17:12:47.644 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-11-27 17:12:47.644 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-11-27 17:12:47.646 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-11-27 17:12:47.646 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-11-27 17:12:47.647 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@10fb4575
[DEBUG] 2019-11-27 17:12:47.652 [main] SessionFactoryRegistry - Registering SessionFactory: 0cb77152-d346-4c70-8804-5b185dd04e65 (<unnamed>)
[DEBUG] 2019-11-27 17:12:47.652 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-11-27 17:12:47.818 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-11-27 17:12:47.876 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0
[DEBUG] 2019-11-27 17:12:47.941 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6fd1ea75
[DEBUG] 2019-11-27 17:12:47.963 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0
[DEBUG] 2019-11-27 17:12:47.967 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:47.977 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'edu'
       |     |  |  |  \-[IDENT] Node: 'yang'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'YugiohCard'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2019-11-27 17:12:48.019 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:48.041 [main] FromElement - FromClause{level=1} : edu.yang.entity.YugiohCard (generatedAlias0) -> yugiohcard0_
[DEBUG] 2019-11-27 17:12:48.042 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-27 17:12:48.045 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:48.047 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} yugiohcard0_.id ) ( FromClause{level=1} yugioh_card yugiohcard0_ ) )
[DEBUG] 2019-11-27 17:12:48.060 [main] JoinProcessor - Using FROM fragment [yugioh_card yugiohcard0_]
[DEBUG] 2019-11-27 17:12:48.065 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:48.066 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (yugioh_card)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id as id1_1_' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
    |  \-[SQL_TOKEN] SqlFragment: 'yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[yugiohcard0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'yugioh_card yugiohcard0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=yugioh_card,tableAlias=yugiohcard0_,origin=null,columns={,className=edu.yang.entity.YugiohCard}}

[DEBUG] 2019-11-27 17:12:48.066 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:48.074 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0
[DEBUG] 2019-11-27 17:12:48.074 [main] QueryTranslatorImpl - SQL: select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_
[DEBUG] 2019-11-27 17:12:48.074 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:48.119 [main] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_
[DEBUG] 2019-11-27 17:12:48.153 [main] Loader - Result set row: 0
[DEBUG] 2019-11-27 17:12:48.155 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:48.165 [main] Loader - Result set row: 1
[DEBUG] 2019-11-27 17:12:48.165 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:48.166 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:48.166 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-27 17:12:48.167 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.167 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-27 17:12:48.170 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.170 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-27 17:12:48.170 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.170 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:12:48.170 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.170 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:48.170 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.170 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:48.170 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.180 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:48.180 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.180 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-27 17:12:48.181 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.181 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:12:48.181 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.181 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:48.181 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.181 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:48.181 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.187 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-27 17:12:48.200 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:48.201 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:48.204 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:48.207 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:48.208 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:48.208 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:48.208 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:48.208 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:48.210 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-27 17:12:48.210 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:48.210 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:48.210 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:48.211 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:48.211 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:48.211 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.211 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-27 17:12:48.211 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.211 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:12:48.211 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.211 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-27 17:12:48.211 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.212 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:48.212 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:48.213 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-27 17:12:48.213 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.213 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:37.0
[DEBUG] 2019-11-27 17:12:48.213 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.213 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:48.213 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.213 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:48.214 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:48.214 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-27 17:12:48.218 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.218 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:37.0
[DEBUG] 2019-11-27 17:12:48.218 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.218 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:48.219 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.219 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:48.219 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:48.219 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-27 17:12:48.219 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.219 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:37.0
[DEBUG] 2019-11-27 17:12:48.219 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.219 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-27 17:12:48.219 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.219 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:48.219 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:48.220 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:48.220 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:48.220 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:48.220 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:48.221 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:48.222 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:48.222 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:48.222 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-11-27 17:12:48.222 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:48.222 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:48.222 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-27 17:12:48.223 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.223 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:12:48.223 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.223 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:12:48.223 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.223 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-27 17:12:48.223 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.223 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:48.223 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.223 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:48.223 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.223 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:48.223 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.223 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-27 17:12:48.223 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.223 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:12:48.223 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.223 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:48.223 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.223 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:48.223 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.223 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:48.225 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:48.742 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-27 17:12:48.773 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:48.774 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:48.774 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:48.774 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:48.775 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:48.775 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:48.775 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:48.775 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:48.775 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-27 17:12:48.775 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:48.776 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:48.776 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:48.776 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-27 17:12:48.777 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.778 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:12:48.778 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.778 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:48.778 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.778 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:48.778 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.778 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:48.778 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:48.778 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-27 17:12:48.778 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.778 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:48.0
[DEBUG] 2019-11-27 17:12:48.778 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.778 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:48.778 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.778 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:48.778 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:48.778 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-27 17:12:48.778 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.779 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:48.0
[DEBUG] 2019-11-27 17:12:48.779 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.779 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:48.779 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.779 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:48.779 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:48.779 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-27 17:12:48.779 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.779 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:48.0
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-27 17:12:48.780 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:48.781 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:48.781 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:48.781 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:48.781 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:48.781 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:48.781 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:48.781 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:48.781 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:48.781 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:48.781 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-11-27 17:12:48.781 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:48.797 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where ( generatedAlias0.cardName=:param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-11-27 17:12:48.797 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where ( generatedAlias0.cardName=:param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-11-27 17:12:48.799 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:48.801 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'yang'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'YugiohCard'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'cardName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'user'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

[DEBUG] 2019-11-27 17:12:48.801 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:48.801 [main] FromElement - FromClause{level=1} : edu.yang.entity.YugiohCard (generatedAlias0) -> yugiohcard0_
[DEBUG] 2019-11-27 17:12:48.801 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-27 17:12:48.804 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-27 17:12:48.805 [main] DotNode - getDataType() : cardName -> org.hibernate.type.StringType@2eadc9f6
[DEBUG] 2019-11-27 17:12:48.807 [main] FromReferenceNode - Resolved : generatedAlias0.cardName -> yugiohcard0_.card_name
[DEBUG] 2019-11-27 17:12:48.808 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-27 17:12:48.808 [main] DotNode - getDataType() : user -> org.hibernate.type.ManyToOneType(edu.yang.entity.User)
[DEBUG] 2019-11-27 17:12:48.808 [main] DotNode - dereferenceShortcut() : property user in edu.yang.entity.YugiohCard does not require a join.
[DEBUG] 2019-11-27 17:12:48.808 [main] DotNode - Terminal getPropertyPath = [user]
[DEBUG] 2019-11-27 17:12:48.808 [main] FromReferenceNode - Resolved : generatedAlias0.user -> yugiohcard0_.user_id
[DEBUG] 2019-11-27 17:12:48.808 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:48.808 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} yugiohcard0_.id ) ( FromClause{level=1} yugioh_card yugiohcard0_ ) ( where ( and ( = ( yugiohcard0_.card_name yugiohcard0_.id cardName ) ? ) ( = ( yugiohcard0_.user_id yugiohcard0_.id user ) ? ) ) ) )
[DEBUG] 2019-11-27 17:12:48.809 [main] JoinProcessor - Using FROM fragment [yugioh_card yugiohcard0_]
[DEBUG] 2019-11-27 17:12:48.809 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:48.811 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (yugioh_card)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id as id1_1_' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
    |  \-[SQL_TOKEN] SqlFragment: 'yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[yugiohcard0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'yugioh_card yugiohcard0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=yugioh_card,tableAlias=yugiohcard0_,origin=null,columns={,className=edu.yang.entity.YugiohCard}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'yugiohcard0_.card_name' {propertyName=cardName,dereferenceType=PRIMITIVE,getPropertyPath=cardName,path=generatedAlias0.cardName,tableAlias=yugiohcard0_,className=edu.yang.entity.YugiohCard,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
          |  |  \-[IDENT] IdentNode: 'cardName' {originalText=cardName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2eadc9f6}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'yugiohcard0_.user_id' {propertyName=user,dereferenceType=UNKNOWN,getPropertyPath=user,path=generatedAlias0.user,tableAlias=yugiohcard0_,className=edu.yang.entity.YugiohCard,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
             |  \-[IDENT] IdentNode: 'user' {originalText=user}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.ManyToOneType(edu.yang.entity.User)}

[DEBUG] 2019-11-27 17:12:48.811 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:48.811 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where ( generatedAlias0.cardName=:param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-11-27 17:12:48.812 [main] QueryTranslatorImpl - SQL: select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.card_name=? and yugiohcard0_.user_id=?
[DEBUG] 2019-11-27 17:12:48.812 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:48.823 [main] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.card_name=? and yugiohcard0_.user_id=?
[DEBUG] 2019-11-27 17:12:48.828 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:48.928 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where generatedAlias0.status=:param0
[DEBUG] 2019-11-27 17:12:48.928 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.status=:param0
[DEBUG] 2019-11-27 17:12:48.929 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:48.931 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'yang'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'YugiohCard'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'status'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-11-27 17:12:48.933 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:48.933 [main] FromElement - FromClause{level=1} : edu.yang.entity.YugiohCard (generatedAlias0) -> yugiohcard0_
[DEBUG] 2019-11-27 17:12:48.934 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-27 17:12:48.934 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-27 17:12:48.934 [main] DotNode - getDataType() : status -> org.hibernate.type.StringType@2eadc9f6
[DEBUG] 2019-11-27 17:12:48.935 [main] FromReferenceNode - Resolved : generatedAlias0.status -> yugiohcard0_.status
[DEBUG] 2019-11-27 17:12:48.935 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:48.935 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} yugiohcard0_.id ) ( FromClause{level=1} yugioh_card yugiohcard0_ ) ( where ( = ( yugiohcard0_.status yugiohcard0_.id status ) ? ) ) )
[DEBUG] 2019-11-27 17:12:48.935 [main] JoinProcessor - Using FROM fragment [yugioh_card yugiohcard0_]
[DEBUG] 2019-11-27 17:12:48.935 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:48.935 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (yugioh_card)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id as id1_1_' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
    |  \-[SQL_TOKEN] SqlFragment: 'yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[yugiohcard0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'yugioh_card yugiohcard0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=yugioh_card,tableAlias=yugiohcard0_,origin=null,columns={,className=edu.yang.entity.YugiohCard}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'yugiohcard0_.status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=generatedAlias0.status,tableAlias=yugiohcard0_,className=edu.yang.entity.YugiohCard,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
          |  \-[IDENT] IdentNode: 'status' {originalText=status}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2eadc9f6}

[DEBUG] 2019-11-27 17:12:48.935 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:48.935 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.status=:param0
[DEBUG] 2019-11-27 17:12:48.935 [main] QueryTranslatorImpl - SQL: select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.status=?
[DEBUG] 2019-11-27 17:12:48.935 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:48.936 [main] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.status=?
[DEBUG] 2019-11-27 17:12:48.944 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:49.089 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where generatedAlias0.cardSet=:param0
[DEBUG] 2019-11-27 17:12:49.091 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.cardSet=:param0
[DEBUG] 2019-11-27 17:12:49.091 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:49.093 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'yang'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'YugiohCard'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'cardSet'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-11-27 17:12:49.093 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:49.094 [main] FromElement - FromClause{level=1} : edu.yang.entity.YugiohCard (generatedAlias0) -> yugiohcard0_
[DEBUG] 2019-11-27 17:12:49.094 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-27 17:12:49.094 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-27 17:12:49.094 [main] DotNode - getDataType() : cardSet -> org.hibernate.type.StringType@2eadc9f6
[DEBUG] 2019-11-27 17:12:49.094 [main] FromReferenceNode - Resolved : generatedAlias0.cardSet -> yugiohcard0_.card_set
[DEBUG] 2019-11-27 17:12:49.094 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:49.094 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} yugiohcard0_.id ) ( FromClause{level=1} yugioh_card yugiohcard0_ ) ( where ( = ( yugiohcard0_.card_set yugiohcard0_.id cardSet ) ? ) ) )
[DEBUG] 2019-11-27 17:12:49.097 [main] JoinProcessor - Using FROM fragment [yugioh_card yugiohcard0_]
[DEBUG] 2019-11-27 17:12:49.097 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:49.097 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (yugioh_card)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id as id1_1_' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
    |  \-[SQL_TOKEN] SqlFragment: 'yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[yugiohcard0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'yugioh_card yugiohcard0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=yugioh_card,tableAlias=yugiohcard0_,origin=null,columns={,className=edu.yang.entity.YugiohCard}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'yugiohcard0_.card_set' {propertyName=cardSet,dereferenceType=PRIMITIVE,getPropertyPath=cardSet,path=generatedAlias0.cardSet,tableAlias=yugiohcard0_,className=edu.yang.entity.YugiohCard,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
          |  \-[IDENT] IdentNode: 'cardSet' {originalText=cardSet}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2eadc9f6}

[DEBUG] 2019-11-27 17:12:49.097 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:49.098 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.cardSet=:param0
[DEBUG] 2019-11-27 17:12:49.098 [main] QueryTranslatorImpl - SQL: select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.card_set=?
[DEBUG] 2019-11-27 17:12:49.098 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:49.098 [main] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.card_set=?
[DEBUG] 2019-11-27 17:12:49.103 [main] Loader - Result set row: 0
[DEBUG] 2019-11-27 17:12:49.103 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:49.103 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:49.103 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-27 17:12:49.103 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.103 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-27 17:12:49.103 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.103 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-27 17:12:49.103 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.103 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:12:49.103 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.103 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:49.103 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.103 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:49.103 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.103 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:49.103 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.103 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-27 17:12:49.104 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.104 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:12:49.104 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.104 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:49.104 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.104 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:49.104 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.104 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-27 17:12:49.109 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:49.109 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:49.111 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.111 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.112 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:49.112 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:49.112 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.112 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.112 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-27 17:12:49.113 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:49.114 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:49.114 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.115 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:49.115 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:49.115 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.115 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-27 17:12:49.115 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.115 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:12:49.115 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.115 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-27 17:12:49.115 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.115 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:49.115 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:49.115 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-27 17:12:49.115 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.115 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:49.0
[DEBUG] 2019-11-27 17:12:49.115 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.115 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:49.115 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.115 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:49.115 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:49.115 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-27 17:12:49.115 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:49.0
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:49.117 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.118 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:49.118 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:49.119 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-27 17:12:49.119 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.119 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:49.0
[DEBUG] 2019-11-27 17:12:49.119 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.119 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-27 17:12:49.119 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.119 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:49.119 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:49.120 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.120 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:49.120 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:49.120 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:49.120 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.120 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:49.120 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:49.121 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-11-27 17:12:49.122 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:49.122 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:49.203 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where generatedAlias0.cardName like :param0
[DEBUG] 2019-11-27 17:12:49.203 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.cardName like :param0
[DEBUG] 2019-11-27 17:12:49.206 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:49.206 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'yang'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'YugiohCard'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'cardName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-11-27 17:12:49.206 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:49.206 [main] FromElement - FromClause{level=1} : edu.yang.entity.YugiohCard (generatedAlias0) -> yugiohcard0_
[DEBUG] 2019-11-27 17:12:49.209 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-27 17:12:49.209 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-27 17:12:49.209 [main] DotNode - getDataType() : cardName -> org.hibernate.type.StringType@2eadc9f6
[DEBUG] 2019-11-27 17:12:49.209 [main] FromReferenceNode - Resolved : generatedAlias0.cardName -> yugiohcard0_.card_name
[DEBUG] 2019-11-27 17:12:49.209 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:49.209 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} yugiohcard0_.id ) ( FromClause{level=1} yugioh_card yugiohcard0_ ) ( where ( like ( yugiohcard0_.card_name yugiohcard0_.id cardName ) ? ) ) )
[DEBUG] 2019-11-27 17:12:49.209 [main] JoinProcessor - Using FROM fragment [yugioh_card yugiohcard0_]
[DEBUG] 2019-11-27 17:12:49.209 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:49.210 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (yugioh_card)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id as id1_1_' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
    |  \-[SQL_TOKEN] SqlFragment: 'yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[yugiohcard0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'yugioh_card yugiohcard0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=yugioh_card,tableAlias=yugiohcard0_,origin=null,columns={,className=edu.yang.entity.YugiohCard}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'yugiohcard0_.card_name' {propertyName=cardName,dereferenceType=PRIMITIVE,getPropertyPath=cardName,path=generatedAlias0.cardName,tableAlias=yugiohcard0_,className=edu.yang.entity.YugiohCard,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
          |  \-[IDENT] IdentNode: 'cardName' {originalText=cardName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2eadc9f6}

[DEBUG] 2019-11-27 17:12:49.210 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:49.210 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.cardName like :param0
[DEBUG] 2019-11-27 17:12:49.210 [main] QueryTranslatorImpl - SQL: select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.card_name like ?
[DEBUG] 2019-11-27 17:12:49.210 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:49.210 [main] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.card_name like ?
[DEBUG] 2019-11-27 17:12:49.215 [main] Loader - Result set row: 0
[DEBUG] 2019-11-27 17:12:49.215 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:49.215 [main] Loader - Result set row: 1
[DEBUG] 2019-11-27 17:12:49.218 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:49.218 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:49.218 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-27 17:12:49.218 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.218 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-27 17:12:49.218 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.218 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-27 17:12:49.218 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.218 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:12:49.218 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.218 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:49.218 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.218 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:49.218 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.218 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:49.219 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.219 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-27 17:12:49.219 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.219 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:12:49.219 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.219 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:49.219 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.219 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:49.219 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.219 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-27 17:12:49.221 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:49.223 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:49.223 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.223 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.223 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:49.224 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:49.226 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.226 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.226 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-27 17:12:49.226 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:49.227 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:49.227 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.227 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:49.227 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:49.227 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.227 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-27 17:12:49.227 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.227 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:12:49.227 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.227 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-27 17:12:49.227 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.227 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:49.227 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:49.227 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-27 17:12:49.227 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.227 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:49.0
[DEBUG] 2019-11-27 17:12:49.227 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.227 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:49.227 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.230 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:49.230 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:49.230 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-27 17:12:49.230 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.230 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:49.0
[DEBUG] 2019-11-27 17:12:49.230 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.230 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:49.230 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.230 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:49.230 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:49.230 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-27 17:12:49.230 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.230 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:49.0
[DEBUG] 2019-11-27 17:12:49.230 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.230 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-27 17:12:49.230 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.231 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:49.231 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:49.231 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.231 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:49.231 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:49.231 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:49.231 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.231 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:49.233 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:49.233 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.233 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:49.233 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:49.322 [main] SQL - select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:12:49.327 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:49.327 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:49.327 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.327 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:49.327 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:49.327 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:49.0
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-27 17:12:49.331 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.333 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:12:49.333 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.333 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-27 17:12:49.333 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.333 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:49.333 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:49.333 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-27 17:12:49.333 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.333 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:49.0
[DEBUG] 2019-11-27 17:12:49.333 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.333 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:49.333 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.333 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:49.333 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:49.333 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.333 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:49.333 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:49.336 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.336 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-27 17:12:49.340 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.340 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:49.341 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.341 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:49.341 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.342 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:49.342 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-27 17:12:49.342 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.342 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:12:49.342 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.342 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:12:49.342 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.342 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-27 17:12:49.342 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.342 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:49.342 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.342 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:49.342 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.342 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:49.342 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.342 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-27 17:12:49.342 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.342 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:12:49.342 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.342 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:49.342 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.342 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:49.342 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.342 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:49.342 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:49.342 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.342 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:49.342 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:49.342 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:49.342 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:49.342 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:12:49.346 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:49.346 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:49.346 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:49.349 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:49.349 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-27 17:12:49.349 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.349 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:49.0
[DEBUG] 2019-11-27 17:12:49.349 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.349 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-27 17:12:49.349 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.349 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:49.349 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:49.350 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:49.350 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:49.350 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:49.350 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:49.350 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCard#1
[DEBUG] 2019-11-27 17:12:49.350 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:49.353 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-27 17:12:49.354 [main] TransactionImpl - begin
[DEBUG] 2019-11-27 17:12:49.366 [main] TransactionImpl - committing
[DEBUG] 2019-11-27 17:12:49.366 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-27 17:12:49.368 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-27 17:12:49.387 [main] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#1], was: [edu.yang.entity.YugiohCard.entries#1] (initialized)
[DEBUG] 2019-11-27 17:12:49.388 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 3 updates, 0 deletions to 3 objects
[DEBUG] 2019-11-27 17:12:49.388 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-11-27 17:12:49.390 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-11-27 17:12:49.390 [main] EntityPrinter - edu.yang.entity.YugiohCardHistory{yugiohCard=edu.yang.entity.YugiohCard#1, price=70.0, id=2, ts=2019-11-27 17:12:49.0}
[DEBUG] 2019-11-27 17:12:49.392 [main] EntityPrinter - edu.yang.entity.YugiohCardHistory{yugiohCard=edu.yang.entity.YugiohCard#1, price=50.0, id=1, ts=2019-11-27 17:12:49.0}
[DEBUG] 2019-11-27 17:12:49.392 [main] EntityPrinter - edu.yang.entity.YugiohCard{image=null, entries=[edu.yang.entity.YugiohCardHistory#2, edu.yang.entity.YugiohCardHistory#1], quantity=2, cardName=Dark Magician of Chaos, cardSet=LOB, price=35.0, cardRarity=Ultra, cardType=Monster, id=1, user=edu.yang.entity.User#1, cardIndex=EN035, status=unsold}
[DEBUG] 2019-11-27 17:12:49.396 [main] SQL - update yugioh_card set card_index=?, card_name=?, card_rarity=?, card_set=?, card_type=?, image=?, price=?, qty=?, status=?, user_id=? where id=?
[DEBUG] 2019-11-27 17:12:49.399 [main] SQL - update yugioh_card_history set price=?, yugiohCard_id=? where id=?
[DEBUG] 2019-11-27 17:12:49.404 [main] SQL - update yugioh_card_history set price=?, yugiohCard_id=? where id=?
[DEBUG] 2019-11-27 17:12:49.408 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:49.412 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:49.413 [main] SQL - select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:12:49.415 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:49.415 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:49.422 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.422 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:49.422 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:49.425 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.425 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:49.425 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-27 17:12:49.425 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.425 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician of Chaos
[DEBUG] 2019-11-27 17:12:49.425 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.425 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-27 17:12:49.425 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.425 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:12:49.425 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.425 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:49.425 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.425 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:49.425 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.425 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:49.425 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.425 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-27 17:12:49.425 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.425 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:12:49.425 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.425 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:49.425 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.425 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:49.425 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.428 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:49.428 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:49.428 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-27 17:12:49.428 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.428 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:49.0
[DEBUG] 2019-11-27 17:12:49.428 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.428 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:49.428 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.428 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:49.428 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:49.428 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:49.428 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.428 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-27 17:12:49.428 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.428 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:12:49.428 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.428 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-27 17:12:49.428 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.429 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:49.429 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:49.430 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-27 17:12:49.430 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.430 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:49.0
[DEBUG] 2019-11-27 17:12:49.430 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.430 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:49.430 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.430 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:49.430 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:49.430 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.430 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:49.430 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:49.430 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.430 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-27 17:12:49.435 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.435 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:49.435 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.435 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:49.435 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.435 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:49.438 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-27 17:12:49.438 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.438 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:12:49.438 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.438 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:12:49.438 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.438 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-27 17:12:49.438 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.438 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:49.438 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.438 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:49.438 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.438 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:49.438 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.438 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-27 17:12:49.438 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.438 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:12:49.439 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.439 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:49.439 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.439 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:49.439 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.439 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:49.439 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:49.439 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.439 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:49.439 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:49.439 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:49.439 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:49.439 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:12:49.442 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:49.442 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:49.443 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:49.443 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:49.443 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-27 17:12:49.443 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.443 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:49.0
[DEBUG] 2019-11-27 17:12:49.443 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.443 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-27 17:12:49.443 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.443 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:49.443 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:49.443 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:49.443 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:49.443 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:49.443 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:49.443 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCard#1
[DEBUG] 2019-11-27 17:12:49.443 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:49.541 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where generatedAlias0.cardType=:param0
[DEBUG] 2019-11-27 17:12:49.541 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.cardType=:param0
[DEBUG] 2019-11-27 17:12:49.544 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:49.544 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'yang'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'YugiohCard'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'cardType'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-11-27 17:12:49.544 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:49.545 [main] FromElement - FromClause{level=1} : edu.yang.entity.YugiohCard (generatedAlias0) -> yugiohcard0_
[DEBUG] 2019-11-27 17:12:49.547 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-27 17:12:49.548 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-27 17:12:49.548 [main] DotNode - getDataType() : cardType -> org.hibernate.type.StringType@2eadc9f6
[DEBUG] 2019-11-27 17:12:49.548 [main] FromReferenceNode - Resolved : generatedAlias0.cardType -> yugiohcard0_.card_type
[DEBUG] 2019-11-27 17:12:49.548 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:49.548 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} yugiohcard0_.id ) ( FromClause{level=1} yugioh_card yugiohcard0_ ) ( where ( = ( yugiohcard0_.card_type yugiohcard0_.id cardType ) ? ) ) )
[DEBUG] 2019-11-27 17:12:49.548 [main] JoinProcessor - Using FROM fragment [yugioh_card yugiohcard0_]
[DEBUG] 2019-11-27 17:12:49.548 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:49.549 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (yugioh_card)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id as id1_1_' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
    |  \-[SQL_TOKEN] SqlFragment: 'yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[yugiohcard0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'yugioh_card yugiohcard0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=yugioh_card,tableAlias=yugiohcard0_,origin=null,columns={,className=edu.yang.entity.YugiohCard}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'yugiohcard0_.card_type' {propertyName=cardType,dereferenceType=PRIMITIVE,getPropertyPath=cardType,path=generatedAlias0.cardType,tableAlias=yugiohcard0_,className=edu.yang.entity.YugiohCard,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
          |  \-[IDENT] IdentNode: 'cardType' {originalText=cardType}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2eadc9f6}

[DEBUG] 2019-11-27 17:12:49.549 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:49.549 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.cardType=:param0
[DEBUG] 2019-11-27 17:12:49.549 [main] QueryTranslatorImpl - SQL: select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.card_type=?
[DEBUG] 2019-11-27 17:12:49.549 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:49.550 [main] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.card_type=?
[DEBUG] 2019-11-27 17:12:49.553 [main] Loader - Result set row: 0
[DEBUG] 2019-11-27 17:12:49.553 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:49.553 [main] Loader - Result set row: 1
[DEBUG] 2019-11-27 17:12:49.553 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:49.553 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:49.553 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-27 17:12:49.553 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.553 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-27 17:12:49.553 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.554 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-27 17:12:49.554 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.554 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:12:49.554 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.554 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:49.554 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.554 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:49.554 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.554 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:49.554 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.555 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-27 17:12:49.555 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.555 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:12:49.555 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.555 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:49.555 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.555 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:49.555 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.555 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-27 17:12:49.558 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:49.559 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:49.561 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.561 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.561 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:49.562 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:49.562 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.562 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.563 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-27 17:12:49.563 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:49.563 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:49.564 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.564 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:49.564 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:49.564 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.564 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-27 17:12:49.564 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.564 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:12:49.564 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.564 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-27 17:12:49.564 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.566 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:49.566 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:49.566 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-27 17:12:49.566 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.566 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:49.0
[DEBUG] 2019-11-27 17:12:49.566 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.566 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:49.566 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.566 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:49.566 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:49.566 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-27 17:12:49.566 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.566 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:49.0
[DEBUG] 2019-11-27 17:12:49.566 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.566 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:49.566 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.566 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:49.566 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:49.566 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-27 17:12:49.566 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.566 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:49.0
[DEBUG] 2019-11-27 17:12:49.566 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:49.567 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:49.567 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.567 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:49.567 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:49.567 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:49.567 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.567 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:49.567 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:49.567 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:49.567 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.570 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:49.570 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:49.653 [main] SQL - select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:12:49.657 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:49.657 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:49.658 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.658 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:49.658 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:49.658 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.658 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:49.658 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-27 17:12:49.658 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.658 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-27 17:12:49.658 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.658 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-27 17:12:49.658 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.658 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:12:49.658 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.658 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:49.658 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.658 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:49.660 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.660 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:49.660 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.660 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-27 17:12:49.660 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.661 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:12:49.661 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.661 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:49.661 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.661 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:49.661 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.662 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:49.662 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:49.662 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-27 17:12:49.662 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.662 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:49.0
[DEBUG] 2019-11-27 17:12:49.662 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.662 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:49.662 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.662 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:49.664 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:49.664 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:49.664 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.664 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-27 17:12:49.664 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.664 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:12:49.664 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.664 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-27 17:12:49.664 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.665 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:49.665 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:49.665 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-27 17:12:49.666 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.666 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:49.0
[DEBUG] 2019-11-27 17:12:49.666 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.666 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:49.666 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.666 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:49.666 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:49.666 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.666 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:49.666 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:49.666 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.666 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-27 17:12:49.668 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.668 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:49.668 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.668 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:49.670 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.670 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:49.670 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-27 17:12:49.670 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.670 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:12:49.670 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.670 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:12:49.670 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.670 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-27 17:12:49.670 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.670 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:49.670 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.670 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:49.670 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.670 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:49.671 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.671 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-27 17:12:49.671 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.671 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:12:49.671 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.671 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:49.671 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.671 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:49.671 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.671 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:49.671 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:49.671 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.671 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:49.672 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:49.672 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:49.673 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:49.673 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:12:49.674 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:49.674 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:49.677 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:49.677 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:49.677 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-27 17:12:49.677 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.677 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:49.0
[DEBUG] 2019-11-27 17:12:49.677 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.677 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-27 17:12:49.677 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.677 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:49.677 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:49.677 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:49.677 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:49.677 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:49.677 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:49.677 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCard#1
[DEBUG] 2019-11-27 17:12:49.677 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:49.802 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-27 17:12:49.805 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:49.805 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:49.806 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.806 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.806 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:49.806 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:49.806 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.806 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.806 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-27 17:12:49.806 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:49.808 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:49.808 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:49.809 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-27 17:12:49.810 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.810 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:49.0
[DEBUG] 2019-11-27 17:12:49.810 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.810 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:49.810 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.810 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:49.810 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:49.810 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-27 17:12:49.810 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:49.0
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:49.0
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.811 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:49.811 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:49.812 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.812 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:49.812 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:49.812 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:49.812 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.812 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:49.813 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:49.813 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-11-27 17:12:49.813 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:49.815 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-27 17:12:49.815 [main] TransactionImpl - begin
[DEBUG] 2019-11-27 17:12:49.819 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-27 17:12:49.820 [main] SQL - insert into yugioh_card (card_index, card_name, card_rarity, card_set, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-11-27 17:12:49.829 [main] IdentifierGeneratorHelper - Natively generated identity: 3
[DEBUG] 2019-11-27 17:12:49.830 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:49.831 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-27 17:12:49.831 [main] SQL - insert into yugioh_card_history (price, update_date, yugiohCard_id) values (?, ?, ?)
[DEBUG] 2019-11-27 17:12:49.842 [main] IdentifierGeneratorHelper - Natively generated identity: 4
[DEBUG] 2019-11-27 17:12:49.842 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:49.844 [main] TransactionImpl - committing
[DEBUG] 2019-11-27 17:12:49.844 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-27 17:12:49.846 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-27 17:12:49.847 [main] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#3], was: [<unreferenced>] (initialized)
[DEBUG] 2019-11-27 17:12:49.848 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2019-11-27 17:12:49.848 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-11-27 17:12:49.848 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-11-27 17:12:49.848 [main] EntityPrinter - edu.yang.entity.YugiohCard{image=hello, entries=[edu.yang.entity.YugiohCardHistory#4], quantity=1, cardName=Buster Blader, cardSet=PSV, price=52.0, cardRarity=Ultra, cardType=Monster, id=3, user=edu.yang.entity.User#1, cardIndex=EN035, status=not sold}
[DEBUG] 2019-11-27 17:12:49.848 [main] EntityPrinter - edu.yang.entity.YugiohCardHistory{yugiohCard=edu.yang.entity.YugiohCard#3, price=80.0, id=4, ts=2019-11-27 17:12:49.831}
[DEBUG] 2019-11-27 17:12:49.850 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:49.851 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:49.851 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-27 17:12:49.851 [main] TransactionImpl - begin
[DEBUG] 2019-11-27 17:12:49.852 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-27 17:12:49.852 [main] SQL - insert into yugioh_card_history (price, update_date, yugiohCard_id) values (?, ?, ?)
[DEBUG] 2019-11-27 17:12:49.855 [main] IdentifierGeneratorHelper - Natively generated identity: 5
[DEBUG] 2019-11-27 17:12:49.855 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:49.856 [main] TransactionImpl - committing
[DEBUG] 2019-11-27 17:12:49.856 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-27 17:12:49.856 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-27 17:12:49.856 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-11-27 17:12:49.856 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-11-27 17:12:49.856 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-11-27 17:12:49.856 [main] EntityPrinter - edu.yang.entity.YugiohCardHistory{yugiohCard=edu.yang.entity.YugiohCard#3, price=80.0, id=5, ts=2019-11-27 17:12:49.852}
[DEBUG] 2019-11-27 17:12:49.858 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:49.858 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:49.964 [main] SQL - select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:12:49.967 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:49.968 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:49.968 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:49.968 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:49.968 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-27 17:12:49.968 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.968 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:12:49.968 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.968 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:12:49.968 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.968 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-27 17:12:49.968 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:49.0
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.969 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:12:49.972 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.972 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-27 17:12:49.972 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.972 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:49.972 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:49.972 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:49.973 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:49.973 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:49.973 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.973 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-27 17:12:49.975 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.975 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:49.975 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.976 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:49.976 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.976 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:49.976 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-27 17:12:49.976 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.976 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-27 17:12:49.976 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.976 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-27 17:12:49.976 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.976 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:12:49.976 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.976 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:49.976 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.976 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:49.976 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.976 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:49.976 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.976 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-27 17:12:49.976 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.976 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:12:49.976 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.976 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:49.976 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.976 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:49.976 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.978 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:49.978 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:49.979 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:49.979 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:49.979 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:49.979 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:49.979 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.979 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:12:49.980 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.980 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:49.980 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.981 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:49.981 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.981 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:49.981 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-27 17:12:49.982 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.982 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:49.0
[DEBUG] 2019-11-27 17:12:49.982 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.982 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:49.982 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.982 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:49.982 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:49.982 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-27 17:12:49.982 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.982 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:49.0
[DEBUG] 2019-11-27 17:12:49.983 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.983 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:49.983 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:49.983 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:49.983 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:49.983 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:49.983 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:49.984 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:49.984 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:49.984 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCard#2
[DEBUG] 2019-11-27 17:12:49.984 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:49.987 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-27 17:12:49.987 [main] TransactionImpl - begin
[DEBUG] 2019-11-27 17:12:49.992 [main] TransactionImpl - committing
[DEBUG] 2019-11-27 17:12:49.993 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-27 17:12:49.993 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-27 17:12:49.993 [main] Collections - Collection dereferenced: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:49.994 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 2 deletions to 2 objects
[DEBUG] 2019-11-27 17:12:49.994 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2019-11-27 17:12:49.994 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-11-27 17:12:49.996 [main] EntityPrinter - edu.yang.entity.YugiohCard{image=null, entries=[edu.yang.entity.YugiohCardHistory#3], quantity=1, cardName=Dark Magician Girl, cardSet=MFC, price=100.0, cardRarity=Secret, cardType=Monster, id=2, user=edu.yang.entity.User#1, cardIndex=EN000, status=unsold}
[DEBUG] 2019-11-27 17:12:49.996 [main] EntityPrinter - edu.yang.entity.YugiohCardHistory{yugiohCard=edu.yang.entity.YugiohCard#2, price=150.0, id=3, ts=2019-11-27 17:12:49.0}
[DEBUG] 2019-11-27 17:12:50.004 [main] SQL - delete from yugioh_card_history where id=?
[DEBUG] 2019-11-27 17:12:50.008 [main] SQL - delete from yugioh_card where id=?
[DEBUG] 2019-11-27 17:12:50.011 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:50.014 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:50.014 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2019-11-27 17:12:50.128 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where generatedAlias0.cardRarity=:param0
[DEBUG] 2019-11-27 17:12:50.129 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.cardRarity=:param0
[DEBUG] 2019-11-27 17:12:50.129 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:50.130 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'yang'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'YugiohCard'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'cardRarity'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-11-27 17:12:50.130 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:50.130 [main] FromElement - FromClause{level=1} : edu.yang.entity.YugiohCard (generatedAlias0) -> yugiohcard0_
[DEBUG] 2019-11-27 17:12:50.130 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-27 17:12:50.130 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-27 17:12:50.130 [main] DotNode - getDataType() : cardRarity -> org.hibernate.type.StringType@2eadc9f6
[DEBUG] 2019-11-27 17:12:50.131 [main] FromReferenceNode - Resolved : generatedAlias0.cardRarity -> yugiohcard0_.card_rarity
[DEBUG] 2019-11-27 17:12:50.131 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:50.131 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} yugiohcard0_.id ) ( FromClause{level=1} yugioh_card yugiohcard0_ ) ( where ( = ( yugiohcard0_.card_rarity yugiohcard0_.id cardRarity ) ? ) ) )
[DEBUG] 2019-11-27 17:12:50.132 [main] JoinProcessor - Using FROM fragment [yugioh_card yugiohcard0_]
[DEBUG] 2019-11-27 17:12:50.132 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:50.132 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (yugioh_card)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id as id1_1_' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
    |  \-[SQL_TOKEN] SqlFragment: 'yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[yugiohcard0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'yugioh_card yugiohcard0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=yugioh_card,tableAlias=yugiohcard0_,origin=null,columns={,className=edu.yang.entity.YugiohCard}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'yugiohcard0_.card_rarity' {propertyName=cardRarity,dereferenceType=PRIMITIVE,getPropertyPath=cardRarity,path=generatedAlias0.cardRarity,tableAlias=yugiohcard0_,className=edu.yang.entity.YugiohCard,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
          |  \-[IDENT] IdentNode: 'cardRarity' {originalText=cardRarity}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2eadc9f6}

[DEBUG] 2019-11-27 17:12:50.133 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:50.133 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.cardRarity=:param0
[DEBUG] 2019-11-27 17:12:50.133 [main] QueryTranslatorImpl - SQL: select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.card_rarity=?
[DEBUG] 2019-11-27 17:12:50.133 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:50.134 [main] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.card_rarity=?
[DEBUG] 2019-11-27 17:12:50.136 [main] Loader - Result set row: 0
[DEBUG] 2019-11-27 17:12:50.136 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:50.137 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:50.137 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-27 17:12:50.137 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.137 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:12:50.137 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.137 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:12:50.137 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.137 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-27 17:12:50.137 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.137 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:50.138 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.138 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:50.138 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.138 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:50.138 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.138 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-27 17:12:50.138 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.138 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:12:50.138 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.138 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:50.138 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.138 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:50.138 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.138 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-27 17:12:50.142 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:50.144 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:50.145 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:50.145 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.145 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:50.145 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:50.146 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:50.146 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.146 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-27 17:12:50.146 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:50.146 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:50.146 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:50.0
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:50.147 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.149 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:50.149 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:50.149 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-27 17:12:50.149 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.149 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:50.0
[DEBUG] 2019-11-27 17:12:50.150 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.150 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:50.150 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.150 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:50.150 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:50.150 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-27 17:12:50.150 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.150 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:50.0
[DEBUG] 2019-11-27 17:12:50.150 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.150 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-27 17:12:50.150 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.150 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:50.150 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:50.150 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:50.150 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:50.150 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:50.153 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:50.153 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.153 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:50.154 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:50.154 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-11-27 17:12:50.154 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:50.154 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:50.405 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-27 17:12:50.410 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:50.410 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:50.428 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:50.431 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.431 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:50.431 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:50.432 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:50.432 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.432 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-27 17:12:50.432 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:50.436 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:50.436 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.436 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:50.436 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:50.436 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.436 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-27 17:12:50.436 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.436 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:12:50.436 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.436 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-27 17:12:50.436 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.436 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:50.438 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:50.438 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-27 17:12:50.438 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.438 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-27 17:12:50.438 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.438 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-27 17:12:50.438 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.438 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:12:50.438 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.438 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:50.438 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.438 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:50.438 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.438 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:50.439 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.439 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-27 17:12:50.439 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.439 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:12:50.439 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.439 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:50.439 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.439 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:50.439 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.440 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:50.440 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:50.440 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-27 17:12:50.440 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.440 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:50.0
[DEBUG] 2019-11-27 17:12:50.440 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.440 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:50.440 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.440 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:50.440 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:50.440 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-27 17:12:50.440 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.440 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:50.0
[DEBUG] 2019-11-27 17:12:50.440 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.440 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:50.440 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.442 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.443 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:50.0
[DEBUG] 2019-11-27 17:12:50.444 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.444 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-27 17:12:50.444 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.444 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:50.444 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:50.444 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:50.444 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:50.444 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:50.444 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:50.444 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.444 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:50.444 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:50.444 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-11-27 17:12:50.444 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:50.449 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-27 17:12:50.449 [main] TransactionImpl - begin
[DEBUG] 2019-11-27 17:12:50.449 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-27 17:12:50.450 [main] SQL - insert into yugioh_card (card_index, card_name, card_rarity, card_set, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-11-27 17:12:50.451 [main] IdentifierGeneratorHelper - Natively generated identity: 3
[DEBUG] 2019-11-27 17:12:50.451 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:50.453 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-27 17:12:50.453 [main] SQL - insert into yugioh_card_history (price, update_date, yugiohCard_id) values (?, ?, ?)
[DEBUG] 2019-11-27 17:12:50.456 [main] IdentifierGeneratorHelper - Natively generated identity: 4
[DEBUG] 2019-11-27 17:12:50.456 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:50.456 [main] TransactionImpl - committing
[DEBUG] 2019-11-27 17:12:50.456 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-27 17:12:50.457 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-27 17:12:50.459 [main] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#3], was: [<unreferenced>] (initialized)
[DEBUG] 2019-11-27 17:12:50.459 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2019-11-27 17:12:50.459 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-11-27 17:12:50.459 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-11-27 17:12:50.459 [main] EntityPrinter - edu.yang.entity.YugiohCard{image=null, entries=[edu.yang.entity.YugiohCardHistory#4], quantity=0, cardName=Dark Magician of Chaos, cardSet=null, price=0.0, cardRarity=null, cardType=Monster, id=3, user=edu.yang.entity.User#1, cardIndex=null, status=null}
[DEBUG] 2019-11-27 17:12:50.460 [main] EntityPrinter - edu.yang.entity.YugiohCardHistory{yugiohCard=edu.yang.entity.YugiohCard#3, price=35.0, id=4, ts=2019-11-27 17:12:50.453}
[DEBUG] 2019-11-27 17:12:50.461 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:50.462 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:50.463 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-27 17:12:50.463 [main] TransactionImpl - begin
[DEBUG] 2019-11-27 17:12:50.463 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-27 17:12:50.464 [main] SQL - insert into yugioh_card_history (price, update_date, yugiohCard_id) values (?, ?, ?)
[DEBUG] 2019-11-27 17:12:50.465 [main] IdentifierGeneratorHelper - Natively generated identity: 5
[DEBUG] 2019-11-27 17:12:50.465 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:50.467 [main] TransactionImpl - committing
[DEBUG] 2019-11-27 17:12:50.467 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-27 17:12:50.467 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-27 17:12:50.467 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-11-27 17:12:50.468 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-11-27 17:12:50.468 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-11-27 17:12:50.470 [main] EntityPrinter - edu.yang.entity.YugiohCardHistory{yugiohCard=edu.yang.entity.YugiohCard#3, price=35.0, id=5, ts=2019-11-27 17:12:50.463}
[DEBUG] 2019-11-27 17:12:50.474 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:50.474 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:50.583 [main] SQL - select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_, yugiohcard1_.id as id1_1_1_, yugiohcard1_.card_index as card_ind2_1_1_, yugiohcard1_.card_name as card_nam3_1_1_, yugiohcard1_.card_rarity as card_rar4_1_1_, yugiohcard1_.card_set as card_set5_1_1_, yugiohcard1_.card_type as card_typ6_1_1_, yugiohcard1_.image as image7_1_1_, yugiohcard1_.price as price8_1_1_, yugiohcard1_.qty as qty9_1_1_, yugiohcard1_.status as status10_1_1_, yugiohcard1_.user_id as user_id11_1_1_, user2_.id as id1_0_2_, user2_.user_password as user_pas2_0_2_, user2_.user_role as user_rol3_0_2_, user2_.user_name as user_nam4_0_2_ from yugioh_card_history yugiohcard0_ left outer join yugioh_card yugiohcard1_ on yugiohcard0_.yugiohCard_id=yugiohcard1_.id left outer join user user2_ on yugiohcard1_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:12:50.585 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:50.585 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:50.586 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:50.586 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-27 17:12:50.586 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.586 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:50.0
[DEBUG] 2019-11-27 17:12:50.586 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.586 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:50.586 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.587 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:50.587 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:50.587 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.587 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-27 17:12:50.590 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.590 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:50.590 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.590 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:50.590 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.592 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:50.592 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-27 17:12:50.592 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.592 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:12:50.592 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.592 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:12:50.592 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.592 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-27 17:12:50.592 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.592 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:50.592 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.592 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:50.592 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.592 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:50.592 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.592 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-27 17:12:50.592 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.592 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:12:50.592 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.592 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:50.592 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.592 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:50.592 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.592 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:50.592 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:50.593 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.593 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:50.593 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:50.593 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:50.593 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:50.593 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:12:50.595 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:50.595 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:50.596 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:50.596 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:50.596 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-27 17:12:50.596 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.596 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:50.0
[DEBUG] 2019-11-27 17:12:50.596 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.596 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-27 17:12:50.597 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.597 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:50.597 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:50.597 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:50.597 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:50.598 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:50.598 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:50.599 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:50.599 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:12:50.601 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:50.601 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:50.601 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:50.601 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:50.603 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:50.603 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:50.603 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-27 17:12:50.603 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.603 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:50.0
[DEBUG] 2019-11-27 17:12:50.603 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.603 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:50.603 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.603 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:50.603 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:50.603 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:50.603 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:50.604 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:50.605 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:50.605 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCardHistory#1
[DEBUG] 2019-11-27 17:12:50.605 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:50.606 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-27 17:12:50.606 [main] TransactionImpl - begin
[DEBUG] 2019-11-27 17:12:50.608 [main] TransactionImpl - committing
[DEBUG] 2019-11-27 17:12:50.608 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-27 17:12:50.608 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-27 17:12:50.608 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2019-11-27 17:12:50.608 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-11-27 17:12:50.608 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-11-27 17:12:50.608 [main] EntityPrinter - edu.yang.entity.YugiohCardHistory{yugiohCard=null, price=50.0, id=1, ts=2019-11-27 17:12:50.0}
[DEBUG] 2019-11-27 17:12:50.608 [main] SQL - delete from yugioh_card_history where id=?
[DEBUG] 2019-11-27 17:12:50.613 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:50.613 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:50.613 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2019-11-27 17:12:50.613 [main] SQL - select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:12:50.615 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:50.615 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:50.617 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:50.0
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-27 17:12:50.617 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.618 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:50.618 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:50.618 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:50.618 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:50.618 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:50.618 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.618 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-27 17:12:50.620 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.620 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:50.620 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.620 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:50.620 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.620 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:50.620 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-27 17:12:50.620 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.620 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:12:50.620 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.620 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:12:50.621 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.621 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-27 17:12:50.621 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.621 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:50.621 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.621 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:50.621 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.621 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:50.621 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.621 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-27 17:12:50.621 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.621 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:12:50.621 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.621 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:50.621 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.622 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:50.623 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.623 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:50.623 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:50.623 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.623 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:50.623 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:50.624 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:50.624 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:50.624 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:12:50.658 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:50.658 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:50.658 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:50.658 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:50.658 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-27 17:12:50.658 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.658 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:50.0
[DEBUG] 2019-11-27 17:12:50.658 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.658 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-27 17:12:50.658 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.659 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:50.659 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:50.659 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:50.659 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:50.659 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:50.659 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:50.659 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCard#1
[DEBUG] 2019-11-27 17:12:50.659 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:50.662 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCardHistory as generatedAlias0
[DEBUG] 2019-11-27 17:12:50.663 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.YugiohCardHistory as generatedAlias0
[DEBUG] 2019-11-27 17:12:50.663 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:50.663 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'edu'
       |     |  |  |  \-[IDENT] Node: 'yang'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'YugiohCardHistory'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2019-11-27 17:12:50.664 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:50.664 [main] FromElement - FromClause{level=1} : edu.yang.entity.YugiohCardHistory (generatedAlias0) -> yugiohcard0_
[DEBUG] 2019-11-27 17:12:50.664 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-27 17:12:50.664 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:50.664 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} yugiohcard0_.id ) ( FromClause{level=1} yugioh_card_history yugiohcard0_ ) )
[DEBUG] 2019-11-27 17:12:50.664 [main] JoinProcessor - Using FROM fragment [yugioh_card_history yugiohcard0_]
[DEBUG] 2019-11-27 17:12:50.666 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:50.666 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (yugioh_card_history)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id as id1_2_' {alias=generatedAlias0, className=edu.yang.entity.YugiohCardHistory, tableAlias=yugiohcard0_}
    |  \-[SQL_TOKEN] SqlFragment: 'yugiohcard0_.price as price2_2_, yugiohcard0_.update_date as update_d3_2_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[yugiohcard0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'yugioh_card_history yugiohcard0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=yugioh_card_history,tableAlias=yugiohcard0_,origin=null,columns={,className=edu.yang.entity.YugiohCardHistory}}

[DEBUG] 2019-11-27 17:12:50.666 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:50.666 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.YugiohCardHistory as generatedAlias0
[DEBUG] 2019-11-27 17:12:50.666 [main] QueryTranslatorImpl - SQL: select yugiohcard0_.id as id1_2_, yugiohcard0_.price as price2_2_, yugiohcard0_.update_date as update_d3_2_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_ from yugioh_card_history yugiohcard0_
[DEBUG] 2019-11-27 17:12:50.667 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:50.667 [main] SQL - select yugiohcard0_.id as id1_2_, yugiohcard0_.price as price2_2_, yugiohcard0_.update_date as update_d3_2_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_ from yugioh_card_history yugiohcard0_
[DEBUG] 2019-11-27 17:12:50.670 [main] Loader - Result set row: 0
[DEBUG] 2019-11-27 17:12:50.670 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:50.670 [main] Loader - Result set row: 1
[DEBUG] 2019-11-27 17:12:50.670 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:50.672 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:50.672 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-27 17:12:50.672 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.672 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:50.0
[DEBUG] 2019-11-27 17:12:50.672 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.672 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:50.672 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.672 [main] SQL - select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:12:50.675 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:50.675 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:50.677 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:50.677 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.679 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:50.679 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:50.679 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:50.679 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:50.679 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:50.680 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCard#1
[DEBUG] 2019-11-27 17:12:50.680 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:50.680 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:50.680 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-27 17:12:50.680 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.680 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:50.0
[DEBUG] 2019-11-27 17:12:50.680 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.680 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-27 17:12:50.680 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.680 [main] SQL - select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:12:50.683 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:50.683 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:50.684 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:50.684 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:50.684 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-27 17:12:50.684 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.684 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:12:50.684 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.684 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:12:50.684 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.684 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-27 17:12:50.684 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.684 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:50.684 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.684 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:50.684 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.684 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:50.684 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.686 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-27 17:12:50.686 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.686 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:12:50.686 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.686 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:50.686 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.686 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:50.686 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.686 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:50.686 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:50.686 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:50.686 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:50.686 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:50.686 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCard#2
[DEBUG] 2019-11-27 17:12:50.686 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:50.686 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.686 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-27 17:12:50.691 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.691 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:50.691 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.691 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:50.691 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.691 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:50.691 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.691 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:50.691 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:50.691 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:50.691 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:50.788 [main] SQL - select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_, yugiohcard1_.id as id1_1_1_, yugiohcard1_.card_index as card_ind2_1_1_, yugiohcard1_.card_name as card_nam3_1_1_, yugiohcard1_.card_rarity as card_rar4_1_1_, yugiohcard1_.card_set as card_set5_1_1_, yugiohcard1_.card_type as card_typ6_1_1_, yugiohcard1_.image as image7_1_1_, yugiohcard1_.price as price8_1_1_, yugiohcard1_.qty as qty9_1_1_, yugiohcard1_.status as status10_1_1_, yugiohcard1_.user_id as user_id11_1_1_, user2_.id as id1_0_2_, user2_.user_password as user_pas2_0_2_, user2_.user_role as user_rol3_0_2_, user2_.user_name as user_nam4_0_2_ from yugioh_card_history yugiohcard0_ left outer join yugioh_card yugiohcard1_ on yugiohcard0_.yugiohCard_id=yugiohcard1_.id left outer join user user2_ on yugiohcard1_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:12:50.791 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:50.791 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:50.792 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:50.792 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-27 17:12:50.792 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.792 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:50.0
[DEBUG] 2019-11-27 17:12:50.792 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.792 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:50.792 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.792 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:50.792 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:50.792 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-27 17:12:50.792 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.792 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-27 17:12:50.792 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.792 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-27 17:12:50.792 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.792 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:12:50.792 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.793 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:50.794 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:50.795 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.795 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-27 17:12:50.796 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.796 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:50.796 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.797 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:50.797 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.797 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:50.797 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-27 17:12:50.797 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.797 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:12:50.797 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.797 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:12:50.797 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.797 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-27 17:12:50.797 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.797 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:50.797 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.797 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:50.798 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.798 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:50.798 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.798 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-27 17:12:50.798 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.798 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:12:50.798 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.798 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:50.798 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.798 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:50.798 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.798 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:50.798 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:50.799 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.799 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:50.799 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:50.799 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:50.799 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:50.799 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:12:50.800 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:50.800 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:50.802 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:50.803 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:50.803 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-27 17:12:50.803 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.803 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:50.0
[DEBUG] 2019-11-27 17:12:50.803 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.803 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-27 17:12:50.803 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.803 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:50.803 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:50.803 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:50.803 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:50.803 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:50.803 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:50.803 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:50.803 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:12:50.805 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:50.805 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:50.805 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:50.806 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:50.807 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:50.807 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:50.807 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-27 17:12:50.807 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.807 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:50.0
[DEBUG] 2019-11-27 17:12:50.807 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.807 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:50.807 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.807 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:50.807 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:50.807 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:50.807 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:50.807 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:50.807 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:50.807 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCardHistory#1
[DEBUG] 2019-11-27 17:12:50.807 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:50.963 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-27 17:12:50.966 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:50.966 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:50.967 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.User.cards#2]
[DEBUG] 2019-11-27 17:12:50.967 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#2]
[DEBUG] 2019-11-27 17:12:50.967 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:50.967 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.967 [main] TwoPhaseLoad - Processing attribute `password` : value = greenMantaRays
[DEBUG] 2019-11-27 17:12:50.967 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.967 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:12:50.967 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.967 [main] TwoPhaseLoad - Processing attribute `userName` : value = johnBones2019
[DEBUG] 2019-11-27 17:12:50.967 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.967 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#2]
[DEBUG] 2019-11-27 17:12:50.967 [main] CollectionLoadContext - No collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:50.967 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:50.967 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#2]
[DEBUG] 2019-11-27 17:12:50.967 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:50.967 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:50.967 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#2
[DEBUG] 2019-11-27 17:12:50.967 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:50.968 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-27 17:12:50.968 [main] TransactionImpl - begin
[DEBUG] 2019-11-27 17:12:50.969 [main] TransactionImpl - committing
[DEBUG] 2019-11-27 17:12:50.969 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-27 17:12:50.969 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-27 17:12:50.970 [main] Collections - Collection dereferenced: [edu.yang.entity.User.cards#2]
[DEBUG] 2019-11-27 17:12:50.970 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2019-11-27 17:12:50.970 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2019-11-27 17:12:50.970 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-11-27 17:12:50.970 [main] EntityPrinter - edu.yang.entity.User{password=greenMantaRays, cards=[], role=general, id=2, userName=johnBones2019}
[DEBUG] 2019-11-27 17:12:50.971 [main] SQL - delete from user where id=?
[DEBUG] 2019-11-27 17:12:50.973 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:50.974 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:50.975 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2019-11-27 17:12:50.975 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2019-11-27 17:12:50.976 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.User as generatedAlias0
[DEBUG] 2019-11-27 17:12:50.977 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:50.981 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'edu'
       |     |  |  |  \-[IDENT] Node: 'yang'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2019-11-27 17:12:50.981 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:50.981 [main] FromElement - FromClause{level=1} : edu.yang.entity.User (generatedAlias0) -> user0_
[DEBUG] 2019-11-27 17:12:50.981 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2019-11-27 17:12:50.981 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:50.981 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) )
[DEBUG] 2019-11-27 17:12:50.981 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2019-11-27 17:12:50.981 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:50.982 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_0_' {alias=generatedAlias0, className=edu.yang.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=edu.yang.entity.User}}

[DEBUG] 2019-11-27 17:12:50.982 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:50.982 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.User as generatedAlias0
[DEBUG] 2019-11-27 17:12:50.982 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_0_, user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_ from user user0_
[DEBUG] 2019-11-27 17:12:50.982 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:50.984 [main] SQL - select user0_.id as id1_0_, user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_ from user user0_
[DEBUG] 2019-11-27 17:12:50.990 [main] Loader - Result set row: 0
[DEBUG] 2019-11-27 17:12:50.991 [main] Loader - Result row: EntityKey[edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:50.991 [main] Loader - Result set row: 1
[DEBUG] 2019-11-27 17:12:50.991 [main] Loader - Result row: EntityKey[edu.yang.entity.User#3]
[DEBUG] 2019-11-27 17:12:50.991 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:50.991 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:50.991 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.991 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-27 17:12:50.991 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.991 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:12:50.991 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.991 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-27 17:12:50.991 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.992 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:50.992 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#3]
[DEBUG] 2019-11-27 17:12:50.992 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:50.992 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.992 [main] TwoPhaseLoad - Processing attribute `password` : value = greenMantaRays
[DEBUG] 2019-11-27 17:12:50.992 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.992 [main] TwoPhaseLoad - Processing attribute `role` : value = admin
[DEBUG] 2019-11-27 17:12:50.992 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.992 [main] TwoPhaseLoad - Processing attribute `userName` : value = terryBones2019
[DEBUG] 2019-11-27 17:12:50.992 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.992 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#3]
[DEBUG] 2019-11-27 17:12:50.992 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#3]
[DEBUG] 2019-11-27 17:12:50.992 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-27 17:12:50.995 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#3]
[DEBUG] 2019-11-27 17:12:50.995 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:50.995 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#3]
[DEBUG] 2019-11-27 17:12:50.995 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:50.995 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:50.995 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:50.995 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.996 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-27 17:12:50.996 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.996 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:50.996 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.997 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:50.997 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.997 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:50.997 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-27 17:12:50.997 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.997 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-27 17:12:50.997 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.997 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-27 17:12:50.997 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.997 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:12:50.997 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.997 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:50.997 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.997 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:50.997 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.997 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:50.998 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:50.998 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:50.998 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:50.998 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:50.998 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:50.998 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:50.998 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:50.998 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:12:51.001 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:51.001 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:51.006 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:51.006 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:51.006 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-27 17:12:51.006 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.006 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:50.0
[DEBUG] 2019-11-27 17:12:51.006 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.006 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-27 17:12:51.006 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.006 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:51.006 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:51.006 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:51.006 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:51.007 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:51.007 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:51.007 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:51.007 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:12:51.010 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:51.010 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:51.011 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:51.011 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:51.011 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:51.011 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:51.011 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-27 17:12:51.011 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.011 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:50.0
[DEBUG] 2019-11-27 17:12:51.011 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.011 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:51.011 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.012 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:51.012 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:51.012 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-27 17:12:51.012 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.012 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:50.0
[DEBUG] 2019-11-27 17:12:51.012 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.012 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:51.012 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.012 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:51.012 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:51.012 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:51.012 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:51.012 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:51.013 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:51.013 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:51.116 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-27 17:12:51.120 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:51.120 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:51.120 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:51.120 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:51.121 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:51.121 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:51.122 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:51.122 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:51.122 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-27 17:12:51.122 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:51.123 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:51.123 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:51.123 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:51.123 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:51.123 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.123 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-27 17:12:51.123 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.123 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:12:51.124 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.124 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-27 17:12:51.124 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.124 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:51.124 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:51.124 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:51.0
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:51.125 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:51.0
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.127 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:51.128 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:51.128 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-27 17:12:51.128 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.128 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:51.0
[DEBUG] 2019-11-27 17:12:51.128 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.128 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-27 17:12:51.128 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.128 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:51.128 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:51.128 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:51.128 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:51.128 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:51.128 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:51.128 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:51.129 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:51.131 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:51.131 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-11-27 17:12:51.131 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:51.303 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-27 17:12:51.305 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:51.305 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:51.306 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:51.306 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:51.306 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:51.306 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:51.306 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:51.306 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:51.306 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-27 17:12:51.306 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:51.307 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:51.307 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:51.307 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:51.307 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:51.307 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.307 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-27 17:12:51.307 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.307 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:12:51.308 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.308 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-27 17:12:51.308 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:51.0
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:51.0
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.309 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:51.310 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:51.310 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-27 17:12:51.310 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.310 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:12:51.310 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.310 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:12:51.310 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.310 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-27 17:12:51.310 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.310 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:51.310 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.310 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:51.310 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.310 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:51.310 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.311 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-27 17:12:51.311 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.311 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:12:51.311 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.311 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:51.311 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.311 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:51.311 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.311 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:51.311 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:51.311 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-27 17:12:51.311 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.311 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:51.0
[DEBUG] 2019-11-27 17:12:51.311 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.311 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-27 17:12:51.311 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.311 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:51.311 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:51.311 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:51.311 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:51.311 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:51.311 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:51.311 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:51.311 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:51.311 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:51.311 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-11-27 17:12:51.311 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:51.523 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-27 17:12:51.523 [main] TransactionImpl - begin
[DEBUG] 2019-11-27 17:12:51.523 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-27 17:12:51.523 [main] SQL - insert into user (user_password, user_role, user_name) values (?, ?, ?)
[DEBUG] 2019-11-27 17:12:51.525 [main] IdentifierGeneratorHelper - Natively generated identity: 4
[DEBUG] 2019-11-27 17:12:51.525 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:51.525 [main] TransactionImpl - committing
[DEBUG] 2019-11-27 17:12:51.525 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-27 17:12:51.525 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-27 17:12:51.525 [main] Collections - Collection found: [edu.yang.entity.User.cards#4], was: [<unreferenced>] (initialized)
[DEBUG] 2019-11-27 17:12:51.525 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-11-27 17:12:51.525 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-11-27 17:12:51.525 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-11-27 17:12:51.525 [main] EntityPrinter - edu.yang.entity.User{password=brownTurnip, cards=[], role=general, id=4, userName=redRainbow19}
[DEBUG] 2019-11-27 17:12:51.526 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:51.527 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:51.527 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-27 17:12:51.530 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:51.530 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:51.532 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.User.cards#4]
[DEBUG] 2019-11-27 17:12:51.532 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#4]
[DEBUG] 2019-11-27 17:12:51.532 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:51.532 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.532 [main] TwoPhaseLoad - Processing attribute `password` : value = brownTurnip
[DEBUG] 2019-11-27 17:12:51.532 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.532 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:12:51.532 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.532 [main] TwoPhaseLoad - Processing attribute `userName` : value = redRainbow19
[DEBUG] 2019-11-27 17:12:51.532 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.532 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#4]
[DEBUG] 2019-11-27 17:12:51.532 [main] CollectionLoadContext - No collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:51.532 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:51.532 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#4]
[DEBUG] 2019-11-27 17:12:51.532 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:51.532 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:51.532 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#4
[DEBUG] 2019-11-27 17:12:51.534 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:51.710 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.role=:param0
[DEBUG] 2019-11-27 17:12:51.711 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.User as generatedAlias0 where generatedAlias0.role=:param0
[DEBUG] 2019-11-27 17:12:51.712 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:51.712 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'yang'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'role'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-11-27 17:12:51.712 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:51.713 [main] FromElement - FromClause{level=1} : edu.yang.entity.User (generatedAlias0) -> user0_
[DEBUG] 2019-11-27 17:12:51.713 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2019-11-27 17:12:51.713 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2019-11-27 17:12:51.714 [main] DotNode - getDataType() : role -> org.hibernate.type.StringType@2eadc9f6
[DEBUG] 2019-11-27 17:12:51.714 [main] FromReferenceNode - Resolved : generatedAlias0.role -> user0_.user_role
[DEBUG] 2019-11-27 17:12:51.714 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:51.714 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.user_role user0_.id role ) ? ) ) )
[DEBUG] 2019-11-27 17:12:51.715 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2019-11-27 17:12:51.716 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-11-27 17:12:51.716 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_0_' {alias=generatedAlias0, className=edu.yang.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=edu.yang.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_role' {propertyName=role,dereferenceType=PRIMITIVE,getPropertyPath=role,path=generatedAlias0.role,tableAlias=user0_,className=edu.yang.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=edu.yang.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'role' {originalText=role}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2eadc9f6}

[DEBUG] 2019-11-27 17:12:51.716 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:51.717 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.User as generatedAlias0 where generatedAlias0.role=:param0
[DEBUG] 2019-11-27 17:12:51.717 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_0_, user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_ from user user0_ where user0_.user_role=?
[DEBUG] 2019-11-27 17:12:51.718 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:12:51.718 [main] SQL - select user0_.id as id1_0_, user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_ from user user0_ where user0_.user_role=?
[DEBUG] 2019-11-27 17:12:51.723 [main] Loader - Result set row: 0
[DEBUG] 2019-11-27 17:12:51.723 [main] Loader - Result row: EntityKey[edu.yang.entity.User#3]
[DEBUG] 2019-11-27 17:12:51.724 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#3]
[DEBUG] 2019-11-27 17:12:51.724 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:51.724 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.724 [main] TwoPhaseLoad - Processing attribute `password` : value = greenMantaRays
[DEBUG] 2019-11-27 17:12:51.724 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.726 [main] TwoPhaseLoad - Processing attribute `role` : value = admin
[DEBUG] 2019-11-27 17:12:51.726 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.726 [main] TwoPhaseLoad - Processing attribute `userName` : value = terryBones2019
[DEBUG] 2019-11-27 17:12:51.726 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:51.726 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#3]
[DEBUG] 2019-11-27 17:12:51.726 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#3]
[DEBUG] 2019-11-27 17:12:51.726 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-27 17:12:51.728 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#3]
[DEBUG] 2019-11-27 17:12:51.728 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:51.729 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#3]
[DEBUG] 2019-11-27 17:12:51.729 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:51.729 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:51.729 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:51.729 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:52.006 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-27 17:12:52.009 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:52.009 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:52.010 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:52.010 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:52.010 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:52.011 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:52.011 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:52.011 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:52.011 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-27 17:12:52.011 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:12:52.012 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:52.012 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:52.012 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:52.012 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:52.012 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.012 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-27 17:12:52.012 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.012 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:12:52.012 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.012 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-27 17:12:52.012 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.012 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:52.012 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:52.012 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-27 17:12:52.012 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.012 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-27 17:12:52.012 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.012 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-27 17:12:52.013 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.013 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:12:52.013 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.013 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:52.013 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.013 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:52.013 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.013 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:52.013 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.013 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-27 17:12:52.013 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.013 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:12:52.013 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.013 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:52.013 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.013 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:52.013 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.013 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:52.013 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:52.014 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-27 17:12:52.014 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.014 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:52.0
[DEBUG] 2019-11-27 17:12:52.014 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.014 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:52.014 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.014 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:52.014 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:52.014 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-27 17:12:52.014 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.014 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:52.0
[DEBUG] 2019-11-27 17:12:52.014 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.015 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:52.016 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.016 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:52.017 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:52.017 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-27 17:12:52.017 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.017 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:52.0
[DEBUG] 2019-11-27 17:12:52.017 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.017 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-27 17:12:52.017 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.017 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:52.018 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:52.018 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:52.018 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:52.018 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:52.018 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:52.018 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:52.018 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:52.018 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:52.018 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-11-27 17:12:52.018 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:52.172 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.role=:param0
[DEBUG] 2019-11-27 17:12:52.172 [main] SQL - select user0_.id as id1_0_, user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_ from user user0_ where user0_.user_role=?
[DEBUG] 2019-11-27 17:12:52.174 [main] Loader - Result set row: 0
[DEBUG] 2019-11-27 17:12:52.174 [main] Loader - Result row: EntityKey[edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:52.174 [main] Loader - Result set row: 1
[DEBUG] 2019-11-27 17:12:52.174 [main] Loader - Result row: EntityKey[edu.yang.entity.User#2]
[DEBUG] 2019-11-27 17:12:52.174 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:52.174 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:52.174 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.174 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-27 17:12:52.174 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.174 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:12:52.174 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.174 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-27 17:12:52.174 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.174 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-27 17:12:52.174 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#2]
[DEBUG] 2019-11-27 17:12:52.174 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:52.174 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.174 [main] TwoPhaseLoad - Processing attribute `password` : value = greenMantaRays
[DEBUG] 2019-11-27 17:12:52.174 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.174 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:12:52.174 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.174 [main] TwoPhaseLoad - Processing attribute `userName` : value = johnBones2019
[DEBUG] 2019-11-27 17:12:52.174 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.174 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#2]
[DEBUG] 2019-11-27 17:12:52.174 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#2]
[DEBUG] 2019-11-27 17:12:52.175 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-27 17:12:52.176 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#2]
[DEBUG] 2019-11-27 17:12:52.177 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:52.177 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#2]
[DEBUG] 2019-11-27 17:12:52.177 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:52.177 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:52.177 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:52.178 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:52.178 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-27 17:12:52.179 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:52.179 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:52.179 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:52.179 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:52.179 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:52.179 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:52.179 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-27 17:12:52.179 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.179 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.180 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-27 17:12:52.182 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.182 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:12:52.182 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.182 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-27 17:12:52.182 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.182 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-27 17:12:52.182 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.182 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-27 17:12:52.182 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:52.182 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-27 17:12:52.182 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:12:52.182 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:52.182 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:52.182 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:52.182 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:12:52.184 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:52.184 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:52.187 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:52.187 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:52.187 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-27 17:12:52.187 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.187 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:52.0
[DEBUG] 2019-11-27 17:12:52.187 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.187 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-27 17:12:52.187 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.187 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-27 17:12:52.187 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:52.187 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-27 17:12:52.187 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:52.187 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:52.187 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:52.187 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:52.187 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:12:52.188 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:52.188 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:12:52.189 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:52.189 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:12:52.191 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:52.191 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:52.191 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-27 17:12:52.191 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.191 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:52.0
[DEBUG] 2019-11-27 17:12:52.191 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.191 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:52.191 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.192 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-27 17:12:52.192 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:52.192 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-27 17:12:52.192 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.192 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-27 17:12:52.0
[DEBUG] 2019-11-27 17:12:52.192 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.192 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-27 17:12:52.192 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:12:52.192 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-27 17:12:52.192 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:52.192 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-27 17:12:52.192 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:12:52.193 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:52.193 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:12:52.193 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:53.739 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-27 17:12:53.739 [main] TransactionImpl - begin
[DEBUG] 2019-11-27 17:12:53.741 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-27 17:12:53.741 [main] SQL - insert into yugioh_card (card_index, card_name, card_rarity, card_set, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-11-27 17:12:53.742 [main] IdentifierGeneratorHelper - Natively generated identity: 3
[DEBUG] 2019-11-27 17:12:53.744 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:53.744 [main] TransactionImpl - committing
[DEBUG] 2019-11-27 17:12:53.745 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-27 17:12:53.745 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-27 17:12:53.745 [main] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#3], was: [<unreferenced>] (initialized)
[DEBUG] 2019-11-27 17:12:53.745 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-11-27 17:12:53.745 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-11-27 17:12:53.745 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-11-27 17:12:53.745 [main] EntityPrinter - edu.yang.entity.YugiohCard{image=null, entries=[], quantity=2, cardName=Lust Soldier Envoy of the Beginning, cardSet=IOC, price=10.0, cardRarity=Secret, cardType=Monster, id=3, user=null, cardIndex=EN026, status=Not Sold}
[DEBUG] 2019-11-27 17:12:53.746 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:53.747 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:53.754 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-27 17:12:53.754 [main] TransactionImpl - begin
[DEBUG] 2019-11-27 17:12:53.756 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-27 17:12:53.756 [main] SQL - insert into yugioh_card (card_index, card_name, card_rarity, card_set, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-11-27 17:12:53.760 [main] IdentifierGeneratorHelper - Natively generated identity: 4
[DEBUG] 2019-11-27 17:12:53.760 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:53.760 [main] TransactionImpl - committing
[DEBUG] 2019-11-27 17:12:53.760 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-27 17:12:53.761 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-27 17:12:53.761 [main] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#4], was: [<unreferenced>] (initialized)
[DEBUG] 2019-11-27 17:12:53.761 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-11-27 17:12:53.761 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-11-27 17:12:53.761 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-11-27 17:12:53.761 [main] EntityPrinter - edu.yang.entity.YugiohCard{image=null, entries=[], quantity=50, cardName=Chaos Sorcerer, cardSet=IOC, price=2.0, cardRarity=Common, cardType=Monster, id=4, user=null, cardIndex=EN087, status=Not Sold}
[DEBUG] 2019-11-27 17:12:53.763 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:53.763 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:53.768 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-27 17:12:53.768 [main] TransactionImpl - begin
[DEBUG] 2019-11-27 17:12:53.769 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-27 17:12:53.769 [main] SQL - insert into yugioh_card (card_index, card_name, card_rarity, card_set, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-11-27 17:12:53.771 [main] IdentifierGeneratorHelper - Natively generated identity: 5
[DEBUG] 2019-11-27 17:12:53.772 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:53.772 [main] TransactionImpl - committing
[DEBUG] 2019-11-27 17:12:53.772 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-27 17:12:53.774 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-27 17:12:53.774 [main] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#5], was: [<unreferenced>] (initialized)
[DEBUG] 2019-11-27 17:12:53.774 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-11-27 17:12:53.774 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-11-27 17:12:53.774 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-11-27 17:12:53.774 [main] EntityPrinter - edu.yang.entity.YugiohCard{image=null, entries=[], quantity=15, cardName=Raigeki, cardSet=LOB, price=1.0, cardRarity=Super, cardType=Spell, id=5, user=null, cardIndex=EN025, status=Not Sold}
[DEBUG] 2019-11-27 17:12:53.776 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:53.776 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:53.782 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-27 17:12:53.782 [main] TransactionImpl - begin
[DEBUG] 2019-11-27 17:12:53.785 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-27 17:12:53.785 [main] SQL - insert into yugioh_card (card_index, card_name, card_rarity, card_set, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-11-27 17:12:53.786 [main] IdentifierGeneratorHelper - Natively generated identity: 6
[DEBUG] 2019-11-27 17:12:53.786 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:53.789 [main] TransactionImpl - committing
[DEBUG] 2019-11-27 17:12:53.789 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-27 17:12:53.790 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-27 17:12:53.790 [main] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#6], was: [<unreferenced>] (initialized)
[DEBUG] 2019-11-27 17:12:53.790 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-11-27 17:12:53.790 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-11-27 17:12:53.790 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-11-27 17:12:53.790 [main] EntityPrinter - edu.yang.entity.YugiohCard{image=null, entries=[], quantity=75, cardName=Harpie's Feather Duster, cardSet=DDS, price=1.0, cardRarity=Prismatic, cardType=Spell, id=6, user=null, cardIndex=EN001, status=Not Sold}
[DEBUG] 2019-11-27 17:12:53.793 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:53.795 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:53.798 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-27 17:12:53.798 [main] TransactionImpl - begin
[DEBUG] 2019-11-27 17:12:53.798 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-27 17:12:53.798 [main] SQL - insert into yugioh_card (card_index, card_name, card_rarity, card_set, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-11-27 17:12:53.801 [main] IdentifierGeneratorHelper - Natively generated identity: 7
[DEBUG] 2019-11-27 17:12:53.801 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:12:53.801 [main] TransactionImpl - committing
[DEBUG] 2019-11-27 17:12:53.801 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-27 17:12:53.801 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-27 17:12:53.801 [main] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#7], was: [<unreferenced>] (initialized)
[DEBUG] 2019-11-27 17:12:53.802 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-11-27 17:12:53.802 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-11-27 17:12:53.802 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-11-27 17:12:53.802 [main] EntityPrinter - edu.yang.entity.YugiohCard{image=null, entries=[], quantity=1, cardName= Dark Hole, cardSet=LOB, price=25.3, cardRarity=Super, cardType=Spell, id=7, user=null, cardIndex=EN035, status=Not Sold}
[DEBUG] 2019-11-27 17:12:53.865 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:12:53.867 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:27:46.532 [http-nio-8080-exec-15] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-11-27 17:27:46.533 [http-nio-8080-exec-15] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-11-27 17:27:46.542 [http-nio-8080-exec-15] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-11-27 17:27:46.663 [http-nio-8080-exec-15] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-11-27 17:27:46.665 [http-nio-8080-exec-15] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-11-27 17:27:46.991 [http-nio-8080-exec-15] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-11-27 17:27:46.999 [http-nio-8080-exec-15] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-11-27 17:27:47.069 [http-nio-8080-exec-15] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-11-27 17:27:47.515 [http-nio-8080-exec-15] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-11-27 17:27:47.576 [http-nio-8080-exec-15] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-11-27 17:27:47.577 [http-nio-8080-exec-15] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-11-27 17:27:47.599 [http-nio-8080-exec-15] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-11-27 17:27:47.774 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@77f9434e
[DEBUG] 2019-11-27 17:27:47.774 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@77f9434e
[DEBUG] 2019-11-27 17:27:47.774 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@77f9434e
[DEBUG] 2019-11-27 17:27:47.774 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73ef1cad
[DEBUG] 2019-11-27 17:27:47.775 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5825af6
[DEBUG] 2019-11-27 17:27:47.775 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@540572d5
[DEBUG] 2019-11-27 17:27:47.776 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2dcbe4bb
[DEBUG] 2019-11-27 17:27:47.776 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2dcbe4bb
[DEBUG] 2019-11-27 17:27:47.776 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2dcbe4bb
[DEBUG] 2019-11-27 17:27:47.777 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@28ef5f6f
[DEBUG] 2019-11-27 17:27:47.778 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@28ef5f6f
[DEBUG] 2019-11-27 17:27:47.779 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@28ef5f6f
[DEBUG] 2019-11-27 17:27:47.779 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5cd593b8
[DEBUG] 2019-11-27 17:27:47.780 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5cd593b8
[DEBUG] 2019-11-27 17:27:47.780 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5cd593b8
[DEBUG] 2019-11-27 17:27:47.781 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@5115b4f4
[DEBUG] 2019-11-27 17:27:47.781 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@5115b4f4
[DEBUG] 2019-11-27 17:27:47.781 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5115b4f4
[DEBUG] 2019-11-27 17:27:47.781 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@37699917
[DEBUG] 2019-11-27 17:27:47.782 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@37699917
[DEBUG] 2019-11-27 17:27:47.782 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@37699917
[DEBUG] 2019-11-27 17:27:47.782 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3baeaefd
[DEBUG] 2019-11-27 17:27:47.782 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3baeaefd
[DEBUG] 2019-11-27 17:27:47.782 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3baeaefd
[DEBUG] 2019-11-27 17:27:47.783 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1927239e
[DEBUG] 2019-11-27 17:27:47.783 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1927239e
[DEBUG] 2019-11-27 17:27:47.783 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1927239e
[DEBUG] 2019-11-27 17:27:47.786 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@79e319bb
[DEBUG] 2019-11-27 17:27:47.786 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@79e319bb
[DEBUG] 2019-11-27 17:27:47.790 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5198c4ec
[DEBUG] 2019-11-27 17:27:47.790 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5198c4ec
[DEBUG] 2019-11-27 17:27:47.823 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2eae721b
[DEBUG] 2019-11-27 17:27:47.823 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2eae721b
[DEBUG] 2019-11-27 17:27:47.824 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3e444bcb
[DEBUG] 2019-11-27 17:27:47.824 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2042ac26
[DEBUG] 2019-11-27 17:27:47.825 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@105abc5e
[DEBUG] 2019-11-27 17:27:47.826 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@105abc5e
[DEBUG] 2019-11-27 17:27:47.827 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@276b840b
[DEBUG] 2019-11-27 17:27:47.827 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@276b840b
[DEBUG] 2019-11-27 17:27:47.837 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1da5e89a
[DEBUG] 2019-11-27 17:27:47.837 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1da5e89a
[DEBUG] 2019-11-27 17:27:47.838 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3c1587a1
[DEBUG] 2019-11-27 17:27:47.838 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3c1587a1
[DEBUG] 2019-11-27 17:27:47.839 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@47a0aaac
[DEBUG] 2019-11-27 17:27:47.839 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@47a0aaac
[DEBUG] 2019-11-27 17:27:47.841 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6f29271e
[DEBUG] 2019-11-27 17:27:47.842 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6f29271e
[DEBUG] 2019-11-27 17:27:47.842 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@739d6edd
[DEBUG] 2019-11-27 17:27:47.842 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@739d6edd
[DEBUG] 2019-11-27 17:27:47.843 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@71bb4f02
[DEBUG] 2019-11-27 17:27:47.844 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@71bb4f02
[DEBUG] 2019-11-27 17:27:47.847 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1ce42e69
[DEBUG] 2019-11-27 17:27:47.847 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1ce42e69
[DEBUG] 2019-11-27 17:27:47.848 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@74947de3
[DEBUG] 2019-11-27 17:27:47.848 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@74947de3
[DEBUG] 2019-11-27 17:27:47.849 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2aee378e
[DEBUG] 2019-11-27 17:27:47.849 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2aee378e
[DEBUG] 2019-11-27 17:27:47.850 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7144cd21
[DEBUG] 2019-11-27 17:27:47.850 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7144cd21
[DEBUG] 2019-11-27 17:27:47.850 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7144cd21
[DEBUG] 2019-11-27 17:27:47.851 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@63b1f2e5
[DEBUG] 2019-11-27 17:27:47.855 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@20fccc32
[DEBUG] 2019-11-27 17:27:47.855 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@20fccc32
[DEBUG] 2019-11-27 17:27:47.855 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@20fccc32
[DEBUG] 2019-11-27 17:27:47.856 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@390c2dec
[DEBUG] 2019-11-27 17:27:47.857 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@7724db7a
[DEBUG] 2019-11-27 17:27:47.857 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7724db7a
[DEBUG] 2019-11-27 17:27:47.858 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5dfa6f54
[DEBUG] 2019-11-27 17:27:47.858 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5dfa6f54
[DEBUG] 2019-11-27 17:27:47.859 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@59989583
[DEBUG] 2019-11-27 17:27:47.859 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@59989583
[DEBUG] 2019-11-27 17:27:47.859 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@269fff63
[DEBUG] 2019-11-27 17:27:47.859 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@269fff63
[DEBUG] 2019-11-27 17:27:47.860 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@754eb60b
[DEBUG] 2019-11-27 17:27:47.860 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@754eb60b
[DEBUG] 2019-11-27 17:27:47.864 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@78fea57c
[DEBUG] 2019-11-27 17:27:47.865 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@ebcadb1
[DEBUG] 2019-11-27 17:27:47.865 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@ebcadb1
[DEBUG] 2019-11-27 17:27:47.865 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@ebcadb1
[DEBUG] 2019-11-27 17:27:47.865 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6504aa0b
[DEBUG] 2019-11-27 17:27:47.866 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6504aa0b
[DEBUG] 2019-11-27 17:27:47.866 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6504aa0b
[DEBUG] 2019-11-27 17:27:47.866 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@77a04543
[DEBUG] 2019-11-27 17:27:47.867 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@330eb871
[DEBUG] 2019-11-27 17:27:47.867 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2dc64f20
[DEBUG] 2019-11-27 17:27:47.867 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2dc64f20
[DEBUG] 2019-11-27 17:27:47.867 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2dc64f20
[DEBUG] 2019-11-27 17:27:47.868 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@513e3642
[DEBUG] 2019-11-27 17:27:47.868 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@513e3642
[DEBUG] 2019-11-27 17:27:47.868 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@513e3642
[DEBUG] 2019-11-27 17:27:47.869 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@66ae2b8d
[DEBUG] 2019-11-27 17:27:47.869 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@26436527
[DEBUG] 2019-11-27 17:27:47.870 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4390a779
[DEBUG] 2019-11-27 17:27:47.870 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4390a779
[DEBUG] 2019-11-27 17:27:47.870 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c06d9a0
[DEBUG] 2019-11-27 17:27:47.871 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7a0fb980
[DEBUG] 2019-11-27 17:27:47.871 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7a0fb980
[DEBUG] 2019-11-27 17:27:47.873 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@1d1ca2e4
[DEBUG] 2019-11-27 17:27:47.873 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1d1ca2e4
[DEBUG] 2019-11-27 17:27:47.873 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5b8cccb6
[DEBUG] 2019-11-27 17:27:47.873 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@74072635
[DEBUG] 2019-11-27 17:27:47.874 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@109c6538
[DEBUG] 2019-11-27 17:27:47.877 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@61305d75
[DEBUG] 2019-11-27 17:27:47.877 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@61305d75
[DEBUG] 2019-11-27 17:27:47.880 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@58e30510
[DEBUG] 2019-11-27 17:27:47.880 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1a8a0da1
[DEBUG] 2019-11-27 17:27:47.880 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4c5454b5
[DEBUG] 2019-11-27 17:27:47.880 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2e8a9530
[DEBUG] 2019-11-27 17:27:47.880 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6e01ce74
[DEBUG] 2019-11-27 17:27:47.880 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@24ac3110
[DEBUG] 2019-11-27 17:27:47.880 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4ab328cc
[DEBUG] 2019-11-27 17:27:47.881 [http-nio-8080-exec-15] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@306a17bf
[DEBUG] 2019-11-27 17:27:47.924 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-11-27 17:27:47.924 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-11-27 17:27:47.925 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-11-27 17:27:47.931 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-11-27 17:27:47.931 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-11-27 17:27:47.932 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-11-27 17:27:47.933 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-11-27 17:27:47.934 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-11-27 17:27:47.934 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-11-27 17:27:47.935 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-11-27 17:27:47.935 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-11-27 17:27:47.935 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-11-27 17:27:47.936 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-11-27 17:27:47.936 [http-nio-8080-exec-15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-11-27 17:27:47.942 [http-nio-8080-exec-15] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/yugioh_card_db
[INFO ] 2019-11-27 17:27:47.942 [http-nio-8080-exec-15] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-11-27 17:27:47.942 [http-nio-8080-exec-15] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-11-27 17:27:48.403 [http-nio-8080-exec-15] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-11-27 17:27:48.971 [http-nio-8080-exec-15] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-11-27 17:27:48.978 [http-nio-8080-exec-15] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-11-27 17:27:49.020 [http-nio-8080-exec-15] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-11-27 17:27:49.160 [http-nio-8080-exec-15] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-11-27 17:27:49.194 [http-nio-8080-exec-15] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-11-27 17:27:49.295 [http-nio-8080-exec-15] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-11-27 17:27:49.404 [http-nio-8080-exec-15] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-11-27 17:27:49.416 [http-nio-8080-exec-15] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1cf16239] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@69d78328]
[DEBUG] 2019-11-27 17:27:49.547 [http-nio-8080-exec-15] AnnotationBinder - Binding entity from annotated class: edu.yang.entity.YugiohCard
[DEBUG] 2019-11-27 17:27:49.633 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-11-27 17:27:49.645 [http-nio-8080-exec-15] EntityBinder - Import with entity name YugiohCard
[DEBUG] 2019-11-27 17:27:49.653 [http-nio-8080-exec-15] EntityBinder - Bind entity edu.yang.entity.YugiohCard on table yugioh_card
[DEBUG] 2019-11-27 17:27:49.754 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.797 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-11-27 17:27:49.808 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:id]
[DEBUG] 2019-11-27 17:27:49.815 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-11-27 17:27:49.823 [http-nio-8080-exec-15] PropertyBinder - Building property id
[DEBUG] 2019-11-27 17:27:49.829 [http-nio-8080-exec-15] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-11-27 17:27:49.833 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_index, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.833 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property cardIndex with lazy=false
[DEBUG] 2019-11-27 17:27:49.833 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardIndex]
[DEBUG] 2019-11-27 17:27:49.833 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for cardIndex
[DEBUG] 2019-11-27 17:27:49.834 [http-nio-8080-exec-15] PropertyBinder - Building property cardIndex
[DEBUG] 2019-11-27 17:27:49.834 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.834 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property cardName with lazy=false
[DEBUG] 2019-11-27 17:27:49.834 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardName]
[DEBUG] 2019-11-27 17:27:49.834 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for cardName
[DEBUG] 2019-11-27 17:27:49.834 [http-nio-8080-exec-15] PropertyBinder - Building property cardName
[DEBUG] 2019-11-27 17:27:49.838 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_rarity, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.839 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property cardRarity with lazy=false
[DEBUG] 2019-11-27 17:27:49.839 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardRarity]
[DEBUG] 2019-11-27 17:27:49.839 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for cardRarity
[DEBUG] 2019-11-27 17:27:49.839 [http-nio-8080-exec-15] PropertyBinder - Building property cardRarity
[DEBUG] 2019-11-27 17:27:49.839 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_set, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.841 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property cardSet with lazy=false
[DEBUG] 2019-11-27 17:27:49.841 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardSet]
[DEBUG] 2019-11-27 17:27:49.841 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for cardSet
[DEBUG] 2019-11-27 17:27:49.841 [http-nio-8080-exec-15] PropertyBinder - Building property cardSet
[DEBUG] 2019-11-27 17:27:49.841 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_type, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.841 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property cardType with lazy=false
[DEBUG] 2019-11-27 17:27:49.841 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardType]
[DEBUG] 2019-11-27 17:27:49.841 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for cardType
[DEBUG] 2019-11-27 17:27:49.841 [http-nio-8080-exec-15] PropertyBinder - Building property cardType
[DEBUG] 2019-11-27 17:27:49.842 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='yugiohCard'}
[DEBUG] 2019-11-27 17:27:49.843 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=entries, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.849 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.878 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.878 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=entries_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.878 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='entries_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-11-27 17:27:49.879 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='yugiohCard'}
[DEBUG] 2019-11-27 17:27:49.880 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='yugiohCard'}
[DEBUG] 2019-11-27 17:27:49.880 [http-nio-8080-exec-15] CollectionBinder - Collection role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:27:49.889 [http-nio-8080-exec-15] PropertyBinder - Building property entries
[DEBUG] 2019-11-27 17:27:49.889 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=image, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.890 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property image with lazy=false
[DEBUG] 2019-11-27 17:27:49.890 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:image]
[DEBUG] 2019-11-27 17:27:49.890 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for image
[DEBUG] 2019-11-27 17:27:49.890 [http-nio-8080-exec-15] PropertyBinder - Building property image
[DEBUG] 2019-11-27 17:27:49.890 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.890 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2019-11-27 17:27:49.890 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:price]
[DEBUG] 2019-11-27 17:27:49.890 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2019-11-27 17:27:49.890 [http-nio-8080-exec-15] PropertyBinder - Building property price
[DEBUG] 2019-11-27 17:27:49.891 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=qty, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.891 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property quantity with lazy=false
[DEBUG] 2019-11-27 17:27:49.891 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:quantity]
[DEBUG] 2019-11-27 17:27:49.891 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for quantity
[DEBUG] 2019-11-27 17:27:49.891 [http-nio-8080-exec-15] PropertyBinder - Building property quantity
[DEBUG] 2019-11-27 17:27:49.891 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=status, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.892 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[DEBUG] 2019-11-27 17:27:49.892 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:status]
[DEBUG] 2019-11-27 17:27:49.892 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for status
[DEBUG] 2019-11-27 17:27:49.892 [http-nio-8080-exec-15] PropertyBinder - Building property status
[DEBUG] 2019-11-27 17:27:49.893 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-11-27 17:27:49.893 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.897 [http-nio-8080-exec-15] PropertyBinder - Building property user
[DEBUG] 2019-11-27 17:27:49.901 [http-nio-8080-exec-15] AnnotationBinder - Binding entity from annotated class: edu.yang.entity.User
[DEBUG] 2019-11-27 17:27:49.901 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-11-27 17:27:49.901 [http-nio-8080-exec-15] EntityBinder - Import with entity name User
[DEBUG] 2019-11-27 17:27:49.901 [http-nio-8080-exec-15] EntityBinder - Bind entity edu.yang.entity.User on table user
[DEBUG] 2019-11-27 17:27:49.925 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.926 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-11-27 17:27:49.926 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:id]
[DEBUG] 2019-11-27 17:27:49.926 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-11-27 17:27:49.926 [http-nio-8080-exec-15] PropertyBinder - Building property id
[DEBUG] 2019-11-27 17:27:49.926 [http-nio-8080-exec-15] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-11-27 17:27:49.927 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-11-27 17:27:49.927 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=cards, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.927 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.933 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.933 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=cards_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.933 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='cards_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-11-27 17:27:49.933 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-11-27 17:27:49.934 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-11-27 17:27:49.934 [http-nio-8080-exec-15] CollectionBinder - Collection role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:27:49.934 [http-nio-8080-exec-15] PropertyBinder - Building property cards
[DEBUG] 2019-11-27 17:27:49.934 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_password, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.934 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2019-11-27 17:27:49.934 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:password]
[DEBUG] 2019-11-27 17:27:49.934 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2019-11-27 17:27:49.934 [http-nio-8080-exec-15] PropertyBinder - Building property password
[DEBUG] 2019-11-27 17:27:49.952 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.956 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property role with lazy=false
[DEBUG] 2019-11-27 17:27:49.956 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:role]
[DEBUG] 2019-11-27 17:27:49.956 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for role
[DEBUG] 2019-11-27 17:27:49.956 [http-nio-8080-exec-15] PropertyBinder - Building property role
[DEBUG] 2019-11-27 17:27:49.956 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.957 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-11-27 17:27:49.959 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:userName]
[DEBUG] 2019-11-27 17:27:49.960 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-11-27 17:27:49.960 [http-nio-8080-exec-15] PropertyBinder - Building property userName
[DEBUG] 2019-11-27 17:27:49.962 [http-nio-8080-exec-15] AnnotationBinder - Binding entity from annotated class: edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-11-27 17:27:49.966 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-11-27 17:27:49.968 [http-nio-8080-exec-15] EntityBinder - Import with entity name YugiohCardHistory
[DEBUG] 2019-11-27 17:27:49.968 [http-nio-8080-exec-15] EntityBinder - Bind entity edu.yang.entity.YugiohCardHistory on table yugioh_card_history
[DEBUG] 2019-11-27 17:27:49.974 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.974 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-11-27 17:27:49.974 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCardHistory:id]
[DEBUG] 2019-11-27 17:27:49.975 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-11-27 17:27:49.975 [http-nio-8080-exec-15] PropertyBinder - Building property id
[DEBUG] 2019-11-27 17:27:49.975 [http-nio-8080-exec-15] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-11-27 17:27:49.975 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.975 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2019-11-27 17:27:49.975 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCardHistory:price]
[DEBUG] 2019-11-27 17:27:49.975 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2019-11-27 17:27:49.975 [http-nio-8080-exec-15] PropertyBinder - Building property price
[DEBUG] 2019-11-27 17:27:49.975 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=update_date, insertable=true, updatable=false, unique=false}
[DEBUG] 2019-11-27 17:27:49.975 [http-nio-8080-exec-15] PropertyBinder - MetadataSourceProcessor property ts with lazy=false
[DEBUG] 2019-11-27 17:27:49.975 [http-nio-8080-exec-15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCardHistory:ts]
[DEBUG] 2019-11-27 17:27:49.976 [http-nio-8080-exec-15] SimpleValueBinder - building SimpleValue for ts
[DEBUG] 2019-11-27 17:27:49.976 [http-nio-8080-exec-15] PropertyBinder - Building property ts
[DEBUG] 2019-11-27 17:27:49.997 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-11-27 17:27:49.999 [http-nio-8080-exec-15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=yugiohCard, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-27 17:27:49.999 [http-nio-8080-exec-15] PropertyBinder - Building property yugiohCard
[DEBUG] 2019-11-27 17:27:50.000 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-11-27 17:27:50.002 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for cardIndex
[DEBUG] 2019-11-27 17:27:50.002 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for cardName
[DEBUG] 2019-11-27 17:27:50.003 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for cardRarity
[DEBUG] 2019-11-27 17:27:50.003 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for cardSet
[DEBUG] 2019-11-27 17:27:50.003 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for cardType
[DEBUG] 2019-11-27 17:27:50.003 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for image
[DEBUG] 2019-11-27 17:27:50.003 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2019-11-27 17:27:50.003 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for quantity
[DEBUG] 2019-11-27 17:27:50.003 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for status
[DEBUG] 2019-11-27 17:27:50.003 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-11-27 17:27:50.003 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2019-11-27 17:27:50.003 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for role
[DEBUG] 2019-11-27 17:27:50.003 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-11-27 17:27:50.003 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-11-27 17:27:50.003 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2019-11-27 17:27:50.003 [http-nio-8080-exec-15] SimpleValueBinder - Starting fillSimpleValue for ts
[DEBUG] 2019-11-27 17:27:50.017 [http-nio-8080-exec-15] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [yugioh_card]
[DEBUG] 2019-11-27 17:27:50.017 [http-nio-8080-exec-15] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2019-11-27 17:27:50.020 [http-nio-8080-exec-15] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [yugioh_card_history]
[DEBUG] 2019-11-27 17:27:50.020 [http-nio-8080-exec-15] CollectionSecondPass - Second pass for collection: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:27:50.020 [http-nio-8080-exec-15] CollectionBinder - Binding a OneToMany: edu.yang.entity.YugiohCard.entries through a foreign key
[DEBUG] 2019-11-27 17:27:50.021 [http-nio-8080-exec-15] CollectionBinder - Mapping collection: edu.yang.entity.YugiohCard.entries -> yugioh_card_history
[DEBUG] 2019-11-27 17:27:50.026 [http-nio-8080-exec-15] TableBinder - Retrieving property edu.yang.entity.YugiohCardHistory.yugiohCard
[DEBUG] 2019-11-27 17:27:50.026 [http-nio-8080-exec-15] CollectionSecondPass - Mapped collection key: yugiohCard_id, one-to-many: edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-11-27 17:27:50.026 [http-nio-8080-exec-15] CollectionSecondPass - Second pass for collection: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:27:50.026 [http-nio-8080-exec-15] CollectionBinder - Binding a OneToMany: edu.yang.entity.User.cards through a foreign key
[DEBUG] 2019-11-27 17:27:50.026 [http-nio-8080-exec-15] CollectionBinder - Mapping collection: edu.yang.entity.User.cards -> yugioh_card
[DEBUG] 2019-11-27 17:27:50.026 [http-nio-8080-exec-15] TableBinder - Retrieving property edu.yang.entity.YugiohCard.user
[DEBUG] 2019-11-27 17:27:50.027 [http-nio-8080-exec-15] CollectionSecondPass - Mapped collection key: user_id, one-to-many: edu.yang.entity.YugiohCard
[DEBUG] 2019-11-27 17:27:50.027 [http-nio-8080-exec-15] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.User
[DEBUG] 2019-11-27 17:27:50.030 [http-nio-8080-exec-15] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.YugiohCard
[DEBUG] 2019-11-27 17:27:50.033 [http-nio-8080-exec-15] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.User
[DEBUG] 2019-11-27 17:27:50.033 [http-nio-8080-exec-15] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.YugiohCard
[DEBUG] 2019-11-27 17:27:50.129 [http-nio-8080-exec-15] SessionFactoryImpl - Building session factory
[DEBUG] 2019-11-27 17:27:50.135 [http-nio-8080-exec-15] Settings - SessionFactory name : null
[DEBUG] 2019-11-27 17:27:50.135 [http-nio-8080-exec-15] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-11-27 17:27:50.135 [http-nio-8080-exec-15] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-11-27 17:27:50.135 [http-nio-8080-exec-15] Settings - Statistics: disabled
[DEBUG] 2019-11-27 17:27:50.135 [http-nio-8080-exec-15] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-11-27 17:27:50.135 [http-nio-8080-exec-15] Settings - Default entity-mode: pojo
[DEBUG] 2019-11-27 17:27:50.136 [http-nio-8080-exec-15] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-11-27 17:27:50.136 [http-nio-8080-exec-15] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-11-27 17:27:50.136 [http-nio-8080-exec-15] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-11-27 17:27:50.136 [http-nio-8080-exec-15] Settings - Default batch fetch size: -1
[DEBUG] 2019-11-27 17:27:50.136 [http-nio-8080-exec-15] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-11-27 17:27:50.136 [http-nio-8080-exec-15] Settings - Default null ordering: NONE
[DEBUG] 2019-11-27 17:27:50.136 [http-nio-8080-exec-15] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-11-27 17:27:50.136 [http-nio-8080-exec-15] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-11-27 17:27:50.136 [http-nio-8080-exec-15] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-11-27 17:27:50.136 [http-nio-8080-exec-15] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-11-27 17:27:50.136 [http-nio-8080-exec-15] Settings - Query language substitutions: {}
[DEBUG] 2019-11-27 17:27:50.136 [http-nio-8080-exec-15] Settings - Named query checking : enabled
[DEBUG] 2019-11-27 17:27:50.136 [http-nio-8080-exec-15] Settings - Second-level cache: disabled
[DEBUG] 2019-11-27 17:27:50.136 [http-nio-8080-exec-15] Settings - Second-level query cache: disabled
[DEBUG] 2019-11-27 17:27:50.136 [http-nio-8080-exec-15] Settings - Second-level query cache factory: null
[DEBUG] 2019-11-27 17:27:50.136 [http-nio-8080-exec-15] Settings - Second-level cache region prefix: null
[DEBUG] 2019-11-27 17:27:50.137 [http-nio-8080-exec-15] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-11-27 17:27:50.137 [http-nio-8080-exec-15] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-11-27 17:27:50.137 [http-nio-8080-exec-15] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-11-27 17:27:50.137 [http-nio-8080-exec-15] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-11-27 17:27:50.137 [http-nio-8080-exec-15] Settings - JDBC batch size: 15
[DEBUG] 2019-11-27 17:27:50.137 [http-nio-8080-exec-15] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-11-27 17:27:50.137 [http-nio-8080-exec-15] Settings - Scrollable result sets: enabled
[DEBUG] 2019-11-27 17:27:50.137 [http-nio-8080-exec-15] Settings - Wrap result sets: disabled
[DEBUG] 2019-11-27 17:27:50.137 [http-nio-8080-exec-15] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-11-27 17:27:50.137 [http-nio-8080-exec-15] Settings - JDBC result set fetch size: null
[DEBUG] 2019-11-27 17:27:50.138 [http-nio-8080-exec-15] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-11-27 17:27:50.138 [http-nio-8080-exec-15] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-11-27 17:27:50.138 [http-nio-8080-exec-15] Settings - JPA compliance - query : 
[DEBUG] 2019-11-27 17:27:50.138 [http-nio-8080-exec-15] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-11-27 17:27:50.138 [http-nio-8080-exec-15] Settings - JPA compliance - lists : 
[DEBUG] 2019-11-27 17:27:50.138 [http-nio-8080-exec-15] Settings - JPA compliance - transactions : 
[INFO ] 2019-11-27 17:27:50.324 [http-nio-8080-exec-15] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-11-27 17:27:50.367 [http-nio-8080-exec-15] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-11-27 17:27:50.367 [http-nio-8080-exec-15] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.4, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.0.0-36-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/yugioh_card_db, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7267cb3e, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/yugioh_card_db, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2019-11-27 17:27:50.478 [http-nio-8080-exec-15] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.User] is safe
[DEBUG] 2019-11-27 17:27:50.480 [http-nio-8080-exec-15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.User
[DEBUG] 2019-11-27 17:27:50.483 [http-nio-8080-exec-15] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCard] is safe
[DEBUG] 2019-11-27 17:27:50.483 [http-nio-8080-exec-15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCard
[DEBUG] 2019-11-27 17:27:50.485 [http-nio-8080-exec-15] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCardHistory] is safe
[DEBUG] 2019-11-27 17:27:50.485 [http-nio-8080-exec-15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-11-27 17:27:50.487 [http-nio-8080-exec-15] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-11-27 17:27:50.488 [http-nio-8080-exec-15] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-11-27 17:27:50.488 [http-nio-8080-exec-15] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1cf16239] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3bb3f264]
[DEBUG] 2019-11-27 17:27:50.571 [http-nio-8080-exec-15] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.User] is safe
[DEBUG] 2019-11-27 17:27:50.571 [http-nio-8080-exec-15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.User
[DEBUG] 2019-11-27 17:27:50.592 [http-nio-8080-exec-15] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.User] is safe
[DEBUG] 2019-11-27 17:27:50.592 [http-nio-8080-exec-15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.User
[DEBUG] 2019-11-27 17:27:50.960 [http-nio-8080-exec-15] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCard] is safe
[DEBUG] 2019-11-27 17:27:50.960 [http-nio-8080-exec-15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCard
[DEBUG] 2019-11-27 17:27:50.961 [http-nio-8080-exec-15] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCard] is safe
[DEBUG] 2019-11-27 17:27:50.961 [http-nio-8080-exec-15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCard
[DEBUG] 2019-11-27 17:27:51.125 [http-nio-8080-exec-15] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCardHistory] is safe
[DEBUG] 2019-11-27 17:27:51.125 [http-nio-8080-exec-15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-11-27 17:27:51.126 [http-nio-8080-exec-15] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCardHistory] is safe
[DEBUG] 2019-11-27 17:27:51.126 [http-nio-8080-exec-15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-11-27 17:27:51.199 [http-nio-8080-exec-15] AbstractCollectionPersister - Static SQL for collection: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:27:51.200 [http-nio-8080-exec-15] AbstractCollectionPersister -  Row insert: update yugioh_card set user_id=? where id=?
[DEBUG] 2019-11-27 17:27:51.200 [http-nio-8080-exec-15] AbstractCollectionPersister -  Row update: update yugioh_card set  where id=?
[DEBUG] 2019-11-27 17:27:51.200 [http-nio-8080-exec-15] AbstractCollectionPersister -  Row delete: update yugioh_card set user_id=null where user_id=? and id=?
[DEBUG] 2019-11-27 17:27:51.200 [http-nio-8080-exec-15] AbstractCollectionPersister -  One-shot delete: update yugioh_card set user_id=null where user_id=?
[DEBUG] 2019-11-27 17:27:51.201 [http-nio-8080-exec-15] AbstractCollectionPersister - Static SQL for collection: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:27:51.201 [http-nio-8080-exec-15] AbstractCollectionPersister -  Row insert: update yugioh_card_history set yugiohCard_id=? where id=?
[DEBUG] 2019-11-27 17:27:51.201 [http-nio-8080-exec-15] AbstractCollectionPersister -  Row update: update yugioh_card_history set  where id=?
[DEBUG] 2019-11-27 17:27:51.206 [http-nio-8080-exec-15] AbstractCollectionPersister -  Row delete: update yugioh_card_history set yugiohCard_id=null where yugiohCard_id=? and id=?
[DEBUG] 2019-11-27 17:27:51.206 [http-nio-8080-exec-15] AbstractCollectionPersister -  One-shot delete: update yugioh_card_history set yugiohCard_id=null where yugiohCard_id=?
[DEBUG] 2019-11-27 17:27:51.212 [http-nio-8080-exec-15] AbstractEntityPersister - Static SQL for entity: edu.yang.entity.User
[DEBUG] 2019-11-27 17:27:51.213 [http-nio-8080-exec-15] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2019-11-27 17:27:51.213 [http-nio-8080-exec-15] AbstractEntityPersister -  Snapshot select: select user_.id, user_.user_password as user_pas2_0_, user_.user_role as user_rol3_0_, user_.user_name as user_nam4_0_ from user user_ where user_.id=?
[DEBUG] 2019-11-27 17:27:51.214 [http-nio-8080-exec-15] AbstractEntityPersister -  Insert 0: insert into user (user_password, user_role, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2019-11-27 17:27:51.214 [http-nio-8080-exec-15] AbstractEntityPersister -  Update 0: update user set user_password=?, user_role=?, user_name=? where id=?
[DEBUG] 2019-11-27 17:27:51.214 [http-nio-8080-exec-15] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2019-11-27 17:27:51.214 [http-nio-8080-exec-15] AbstractEntityPersister -  Identity insert: insert into user (user_password, user_role, user_name) values (?, ?, ?)
[DEBUG] 2019-11-27 17:27:51.245 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18835d17]
[DEBUG] 2019-11-27 17:27:51.246 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards
[DEBUG] 2019-11-27 17:27:51.278 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67598116]
[DEBUG] 2019-11-27 17:27:51.284 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30a7120b]
[DEBUG] 2019-11-27 17:27:51.285 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.cardIndex
[DEBUG] 2019-11-27 17:27:51.285 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.cardName
[DEBUG] 2019-11-27 17:27:51.285 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.cardRarity
[DEBUG] 2019-11-27 17:27:51.285 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.cardSet
[DEBUG] 2019-11-27 17:27:51.286 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.cardType
[DEBUG] 2019-11-27 17:27:51.286 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.entries
[DEBUG] 2019-11-27 17:27:51.286 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@764467e3]
[DEBUG] 2019-11-27 17:27:51.286 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@efc7d0d]
[DEBUG] 2019-11-27 17:27:51.286 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.entries.price
[DEBUG] 2019-11-27 17:27:51.286 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.entries.ts
[DEBUG] 2019-11-27 17:27:51.286 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.entries.yugiohCard
[DEBUG] 2019-11-27 17:27:51.288 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : cards.entries.yugiohCard
[DEBUG] 2019-11-27 17:27:51.288 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.image
[DEBUG] 2019-11-27 17:27:51.288 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.price
[DEBUG] 2019-11-27 17:27:51.288 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.quantity
[DEBUG] 2019-11-27 17:27:51.288 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.status
[DEBUG] 2019-11-27 17:27:51.288 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.user
[DEBUG] 2019-11-27 17:27:51.288 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : cards.user
[DEBUG] 2019-11-27 17:27:51.289 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-11-27 17:27:51.289 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2019-11-27 17:27:51.289 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-11-27 17:27:51.289 [http-nio-8080-exec-15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-27 17:27:51.319 [http-nio-8080-exec-15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-27 17:27:51.342 [http-nio-8080-exec-15] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:0>, path=edu.yang.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.User.cards, querySpaceUid=<gen:1>, path=edu.yang.entity.User.cards)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:2>, path=edu.yang.entity.User.cards.<elements>)
                - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:3>, path=edu.yang.entity.User.cards.<elements>.entries)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:4>, path=edu.yang.entity.User.cards.<elements>.entries.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(cards)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.User.cards)
                - SQL table alias mapping - cards1_
                - alias suffix - 1_
                - suffixed key columns - {user_id11_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCard)
                      - SQL table alias mapping - cards1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(entries)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=edu.yang.entity.YugiohCard.entries)
                            - SQL table alias mapping - entries2_
                            - alias suffix - 3_
                            - suffixed key columns - {yugiohCa4_2_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_2_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=edu.yang.entity.YugiohCardHistory)
                                  - SQL table alias mapping - entries2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_2_4_}

[DEBUG] 2019-11-27 17:27:51.348 [http-nio-8080-exec-15] EntityLoader - Static select for entity edu.yang.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-27 17:27:51.349 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ad6c585]
[DEBUG] 2019-11-27 17:27:51.349 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards
[DEBUG] 2019-11-27 17:27:51.349 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@78973c0]
[DEBUG] 2019-11-27 17:27:51.349 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71fc6eab]
[DEBUG] 2019-11-27 17:27:51.349 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.cardIndex
[DEBUG] 2019-11-27 17:27:51.349 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.cardName
[DEBUG] 2019-11-27 17:27:51.349 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.cardRarity
[DEBUG] 2019-11-27 17:27:51.353 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.cardSet
[DEBUG] 2019-11-27 17:27:51.353 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.cardType
[DEBUG] 2019-11-27 17:27:51.353 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.entries
[DEBUG] 2019-11-27 17:27:51.353 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5fcc093b]
[DEBUG] 2019-11-27 17:27:51.353 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dd7bd5f]
[DEBUG] 2019-11-27 17:27:51.353 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.entries.price
[DEBUG] 2019-11-27 17:27:51.353 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.entries.ts
[DEBUG] 2019-11-27 17:27:51.353 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.entries.yugiohCard
[DEBUG] 2019-11-27 17:27:51.353 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : cards.entries.yugiohCard
[DEBUG] 2019-11-27 17:27:51.353 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.image
[DEBUG] 2019-11-27 17:27:51.353 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.price
[DEBUG] 2019-11-27 17:27:51.353 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.quantity
[DEBUG] 2019-11-27 17:27:51.356 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.status
[DEBUG] 2019-11-27 17:27:51.356 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cards.user
[DEBUG] 2019-11-27 17:27:51.356 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : cards.user
[DEBUG] 2019-11-27 17:27:51.356 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-11-27 17:27:51.356 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2019-11-27 17:27:51.356 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-11-27 17:27:51.356 [http-nio-8080-exec-15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-27 17:27:51.356 [http-nio-8080-exec-15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-27 17:27:51.357 [http-nio-8080-exec-15] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:0>, path=edu.yang.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.User.cards, querySpaceUid=<gen:1>, path=edu.yang.entity.User.cards)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:2>, path=edu.yang.entity.User.cards.<elements>)
                - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:3>, path=edu.yang.entity.User.cards.<elements>.entries)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:4>, path=edu.yang.entity.User.cards.<elements>.entries.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(cards)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.User.cards)
                - SQL table alias mapping - cards1_
                - alias suffix - 1_
                - suffixed key columns - {user_id11_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCard)
                      - SQL table alias mapping - cards1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(entries)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=edu.yang.entity.YugiohCard.entries)
                            - SQL table alias mapping - entries2_
                            - alias suffix - 3_
                            - suffixed key columns - {yugiohCa4_2_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_2_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=edu.yang.entity.YugiohCardHistory)
                                  - SQL table alias mapping - entries2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_2_4_}

[DEBUG] 2019-11-27 17:27:51.358 [http-nio-8080-exec-15] EntityLoader - Static select for entity edu.yang.entity.User [READ]: select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-27 17:27:51.395 [http-nio-8080-exec-15] Loader - Static select for action ACTION_MERGE on entity edu.yang.entity.User: select user0_.id as id1_0_1_, user0_.user_password as user_pas2_0_1_, user0_.user_role as user_rol3_0_1_, user0_.user_name as user_nam4_0_1_, cards1_.user_id as user_id11_1_3_, cards1_.id as id1_1_3_, cards1_.id as id1_1_0_, cards1_.card_index as card_ind2_1_0_, cards1_.card_name as card_nam3_1_0_, cards1_.card_rarity as card_rar4_1_0_, cards1_.card_set as card_set5_1_0_, cards1_.card_type as card_typ6_1_0_, cards1_.image as image7_1_0_, cards1_.price as price8_1_0_, cards1_.qty as qty9_1_0_, cards1_.status as status10_1_0_, cards1_.user_id as user_id11_1_0_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id where user0_.id=?
[DEBUG] 2019-11-27 17:27:51.397 [http-nio-8080-exec-15] Loader - Static select for action ACTION_REFRESH on entity edu.yang.entity.User: select user0_.id as id1_0_1_, user0_.user_password as user_pas2_0_1_, user0_.user_role as user_rol3_0_1_, user0_.user_name as user_nam4_0_1_, cards1_.user_id as user_id11_1_3_, cards1_.id as id1_1_3_, cards1_.id as id1_1_0_, cards1_.card_index as card_ind2_1_0_, cards1_.card_name as card_nam3_1_0_, cards1_.card_rarity as card_rar4_1_0_, cards1_.card_set as card_set5_1_0_, cards1_.card_type as card_typ6_1_0_, cards1_.image as image7_1_0_, cards1_.price as price8_1_0_, cards1_.qty as qty9_1_0_, cards1_.status as status10_1_0_, cards1_.user_id as user_id11_1_0_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id where user0_.id=?
[DEBUG] 2019-11-27 17:27:51.397 [http-nio-8080-exec-15] AbstractEntityPersister - Static SQL for entity: edu.yang.entity.YugiohCard
[DEBUG] 2019-11-27 17:27:51.397 [http-nio-8080-exec-15] AbstractEntityPersister -  Version select: select id from yugioh_card where id =?
[DEBUG] 2019-11-27 17:27:51.397 [http-nio-8080-exec-15] AbstractEntityPersister -  Snapshot select: select yugiohcard_.id, yugiohcard_.card_index as card_ind2_1_, yugiohcard_.card_name as card_nam3_1_, yugiohcard_.card_rarity as card_rar4_1_, yugiohcard_.card_set as card_set5_1_, yugiohcard_.card_type as card_typ6_1_, yugiohcard_.image as image7_1_, yugiohcard_.price as price8_1_, yugiohcard_.qty as qty9_1_, yugiohcard_.status as status10_1_, yugiohcard_.user_id as user_id11_1_ from yugioh_card yugiohcard_ where yugiohcard_.id=?
[DEBUG] 2019-11-27 17:27:51.397 [http-nio-8080-exec-15] AbstractEntityPersister -  Insert 0: insert into yugioh_card (card_index, card_name, card_rarity, card_set, card_type, image, price, qty, status, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-11-27 17:27:51.397 [http-nio-8080-exec-15] AbstractEntityPersister -  Update 0: update yugioh_card set card_index=?, card_name=?, card_rarity=?, card_set=?, card_type=?, image=?, price=?, qty=?, status=?, user_id=? where id=?
[DEBUG] 2019-11-27 17:27:51.397 [http-nio-8080-exec-15] AbstractEntityPersister -  Delete 0: delete from yugioh_card where id=?
[DEBUG] 2019-11-27 17:27:51.397 [http-nio-8080-exec-15] AbstractEntityPersister -  Identity insert: insert into yugioh_card (card_index, card_name, card_rarity, card_set, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-11-27 17:27:51.397 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@695768c3]
[DEBUG] 2019-11-27 17:27:51.397 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cardIndex
[DEBUG] 2019-11-27 17:27:51.397 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cardName
[DEBUG] 2019-11-27 17:27:51.397 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cardRarity
[DEBUG] 2019-11-27 17:27:51.398 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cardSet
[DEBUG] 2019-11-27 17:27:51.398 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cardType
[DEBUG] 2019-11-27 17:27:51.398 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : entries
[DEBUG] 2019-11-27 17:27:51.398 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ea24cd6]
[DEBUG] 2019-11-27 17:27:51.398 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3427596b]
[DEBUG] 2019-11-27 17:27:51.398 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : entries.price
[DEBUG] 2019-11-27 17:27:51.398 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : entries.ts
[DEBUG] 2019-11-27 17:27:51.398 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : entries.yugiohCard
[DEBUG] 2019-11-27 17:27:51.398 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : entries.yugiohCard
[DEBUG] 2019-11-27 17:27:51.398 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2019-11-27 17:27:51.398 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-11-27 17:27:51.398 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : quantity
[DEBUG] 2019-11-27 17:27:51.398 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2019-11-27 17:27:51.398 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-11-27 17:27:51.403 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a9fd875]
[DEBUG] 2019-11-27 17:27:51.403 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.cards
[DEBUG] 2019-11-27 17:27:51.405 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : user.cards
[DEBUG] 2019-11-27 17:27:51.405 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2019-11-27 17:27:51.405 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.role
[DEBUG] 2019-11-27 17:27:51.405 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-11-27 17:27:51.405 [http-nio-8080-exec-15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-27 17:27:51.405 [http-nio-8080-exec-15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-27 17:27:51.407 [http-nio-8080-exec-15] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCard)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCard)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCard.entries)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCard.entries.<elements>)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:3>, path=edu.yang.entity.YugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCard)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(entries)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.YugiohCard.entries)
                - SQL table alias mapping - entries1_
                - alias suffix - 1_
                - suffixed key columns - {yugiohCa4_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_2_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCardHistory)
                      - SQL table alias mapping - entries1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.yang.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 3_
                - suffixed key columns - {id1_0_3_}

[DEBUG] 2019-11-27 17:27:51.407 [http-nio-8080-exec-15] EntityLoader - Static select for entity edu.yang.entity.YugiohCard [NONE]: select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:27:51.407 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57065019]
[DEBUG] 2019-11-27 17:27:51.407 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cardIndex
[DEBUG] 2019-11-27 17:27:51.407 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cardName
[DEBUG] 2019-11-27 17:27:51.407 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cardRarity
[DEBUG] 2019-11-27 17:27:51.407 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cardSet
[DEBUG] 2019-11-27 17:27:51.407 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cardType
[DEBUG] 2019-11-27 17:27:51.407 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : entries
[DEBUG] 2019-11-27 17:27:51.407 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@42319007]
[DEBUG] 2019-11-27 17:27:51.407 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76cf1adc]
[DEBUG] 2019-11-27 17:27:51.408 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : entries.price
[DEBUG] 2019-11-27 17:27:51.408 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : entries.ts
[DEBUG] 2019-11-27 17:27:51.408 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : entries.yugiohCard
[DEBUG] 2019-11-27 17:27:51.408 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : entries.yugiohCard
[DEBUG] 2019-11-27 17:27:51.408 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2019-11-27 17:27:51.408 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-11-27 17:27:51.408 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : quantity
[DEBUG] 2019-11-27 17:27:51.408 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2019-11-27 17:27:51.408 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-11-27 17:27:51.408 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@689ca078]
[DEBUG] 2019-11-27 17:27:51.408 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.cards
[DEBUG] 2019-11-27 17:27:51.408 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : user.cards
[DEBUG] 2019-11-27 17:27:51.408 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2019-11-27 17:27:51.408 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.role
[DEBUG] 2019-11-27 17:27:51.408 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-11-27 17:27:51.413 [http-nio-8080-exec-15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-27 17:27:51.413 [http-nio-8080-exec-15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-27 17:27:51.415 [http-nio-8080-exec-15] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCard)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCard)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCard.entries)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCard.entries.<elements>)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:3>, path=edu.yang.entity.YugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCard)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(entries)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.YugiohCard.entries)
                - SQL table alias mapping - entries1_
                - alias suffix - 1_
                - suffixed key columns - {yugiohCa4_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_2_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCardHistory)
                      - SQL table alias mapping - entries1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.yang.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 3_
                - suffixed key columns - {id1_0_3_}

[DEBUG] 2019-11-27 17:27:51.423 [http-nio-8080-exec-15] EntityLoader - Static select for entity edu.yang.entity.YugiohCard [READ]: select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:27:51.429 [http-nio-8080-exec-15] Loader - Static select for action ACTION_MERGE on entity edu.yang.entity.YugiohCard: select yugiohcard0_.id as id1_1_1_, yugiohcard0_.card_index as card_ind2_1_1_, yugiohcard0_.card_name as card_nam3_1_1_, yugiohcard0_.card_rarity as card_rar4_1_1_, yugiohcard0_.card_set as card_set5_1_1_, yugiohcard0_.card_type as card_typ6_1_1_, yugiohcard0_.image as image7_1_1_, yugiohcard0_.price as price8_1_1_, yugiohcard0_.qty as qty9_1_1_, yugiohcard0_.status as status10_1_1_, yugiohcard0_.user_id as user_id11_1_1_, entries1_.yugiohCard_id as yugiohCa4_2_3_, entries1_.id as id1_2_3_, entries1_.id as id1_2_0_, entries1_.price as price2_2_0_, entries1_.update_date as update_d3_2_0_, entries1_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:27:51.429 [http-nio-8080-exec-15] Loader - Static select for action ACTION_REFRESH on entity edu.yang.entity.YugiohCard: select yugiohcard0_.id as id1_1_1_, yugiohcard0_.card_index as card_ind2_1_1_, yugiohcard0_.card_name as card_nam3_1_1_, yugiohcard0_.card_rarity as card_rar4_1_1_, yugiohcard0_.card_set as card_set5_1_1_, yugiohcard0_.card_type as card_typ6_1_1_, yugiohcard0_.image as image7_1_1_, yugiohcard0_.price as price8_1_1_, yugiohcard0_.qty as qty9_1_1_, yugiohcard0_.status as status10_1_1_, yugiohcard0_.user_id as user_id11_1_1_, entries1_.yugiohCard_id as yugiohCa4_2_3_, entries1_.id as id1_2_3_, entries1_.id as id1_2_0_, entries1_.price as price2_2_0_, entries1_.update_date as update_d3_2_0_, entries1_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:27:51.429 [http-nio-8080-exec-15] AbstractEntityPersister - Static SQL for entity: edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-11-27 17:27:51.429 [http-nio-8080-exec-15] AbstractEntityPersister -  Version select: select id from yugioh_card_history where id =?
[DEBUG] 2019-11-27 17:27:51.429 [http-nio-8080-exec-15] AbstractEntityPersister -  Snapshot select: select yugiohcard_.id, yugiohcard_.price as price2_2_, yugiohcard_.yugiohCard_id as yugiohCa4_2_ from yugioh_card_history yugiohcard_ where yugiohcard_.id=?
[DEBUG] 2019-11-27 17:27:51.429 [http-nio-8080-exec-15] AbstractEntityPersister -  Insert 0: insert into yugioh_card_history (price, update_date, yugiohCard_id, id) values (?, ?, ?, ?)
[DEBUG] 2019-11-27 17:27:51.429 [http-nio-8080-exec-15] AbstractEntityPersister -  Update 0: update yugioh_card_history set price=?, yugiohCard_id=? where id=?
[DEBUG] 2019-11-27 17:27:51.429 [http-nio-8080-exec-15] AbstractEntityPersister -  Delete 0: delete from yugioh_card_history where id=?
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] AbstractEntityPersister -  Identity insert: insert into yugioh_card_history (price, update_date, yugiohCard_id) values (?, ?, ?)
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15809032]
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : ts
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23a206b2]
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardIndex
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardName
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardRarity
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardSet
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardType
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.entries
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.entries
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.image
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.price
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.quantity
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.status
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ef7df73]
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.cards
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.user.cards
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.password
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.role
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.userName
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-27 17:27:51.430 [http-nio-8080-exec-15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCardHistory)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCardHistory)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCardHistory.yugiohCard)
             - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCardHistory.yugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCardHistory)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(yugiohCard)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCard)
                - SQL table alias mapping - yugiohcard1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] EntityLoader - Static select for entity edu.yang.entity.YugiohCardHistory [NONE]: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_, yugiohcard1_.id as id1_1_1_, yugiohcard1_.card_index as card_ind2_1_1_, yugiohcard1_.card_name as card_nam3_1_1_, yugiohcard1_.card_rarity as card_rar4_1_1_, yugiohcard1_.card_set as card_set5_1_1_, yugiohcard1_.card_type as card_typ6_1_1_, yugiohcard1_.image as image7_1_1_, yugiohcard1_.price as price8_1_1_, yugiohcard1_.qty as qty9_1_1_, yugiohcard1_.status as status10_1_1_, yugiohcard1_.user_id as user_id11_1_1_, user2_.id as id1_0_2_, user2_.user_password as user_pas2_0_2_, user2_.user_role as user_rol3_0_2_, user2_.user_name as user_nam4_0_2_ from yugioh_card_history yugiohcard0_ left outer join yugioh_card yugiohcard1_ on yugiohcard0_.yugiohCard_id=yugiohcard1_.id left outer join user user2_ on yugiohcard1_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14298408]
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : ts
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53e7401]
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardIndex
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardName
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardRarity
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardSet
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardType
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.entries
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.entries
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.image
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.price
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.quantity
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.status
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1627da90]
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.cards
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.user.cards
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.password
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.role
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.userName
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-27 17:27:51.432 [http-nio-8080-exec-15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-27 17:27:51.437 [http-nio-8080-exec-15] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCardHistory)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCardHistory)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCardHistory.yugiohCard)
             - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCardHistory.yugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCardHistory)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(yugiohCard)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCard)
                - SQL table alias mapping - yugiohcard1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-11-27 17:27:51.437 [http-nio-8080-exec-15] EntityLoader - Static select for entity edu.yang.entity.YugiohCardHistory [READ]: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_, yugiohcard1_.id as id1_1_1_, yugiohcard1_.card_index as card_ind2_1_1_, yugiohcard1_.card_name as card_nam3_1_1_, yugiohcard1_.card_rarity as card_rar4_1_1_, yugiohcard1_.card_set as card_set5_1_1_, yugiohcard1_.card_type as card_typ6_1_1_, yugiohcard1_.image as image7_1_1_, yugiohcard1_.price as price8_1_1_, yugiohcard1_.qty as qty9_1_1_, yugiohcard1_.status as status10_1_1_, yugiohcard1_.user_id as user_id11_1_1_, user2_.id as id1_0_2_, user2_.user_password as user_pas2_0_2_, user2_.user_role as user_rol3_0_2_, user2_.user_name as user_nam4_0_2_ from yugioh_card_history yugiohcard0_ left outer join yugioh_card yugiohcard1_ on yugiohcard0_.yugiohCard_id=yugiohcard1_.id left outer join user user2_ on yugiohcard1_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:27:51.438 [http-nio-8080-exec-15] Loader - Static select for action ACTION_MERGE on entity edu.yang.entity.YugiohCardHistory: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card_history yugiohcard0_ where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:27:51.440 [http-nio-8080-exec-15] Loader - Static select for action ACTION_REFRESH on entity edu.yang.entity.YugiohCardHistory: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card_history yugiohcard0_ where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:27:51.450 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@31e01926]
[DEBUG] 2019-11-27 17:27:51.450 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f588637]
[DEBUG] 2019-11-27 17:27:51.453 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cardIndex
[DEBUG] 2019-11-27 17:27:51.454 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cardName
[DEBUG] 2019-11-27 17:27:51.454 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cardRarity
[DEBUG] 2019-11-27 17:27:51.454 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cardSet
[DEBUG] 2019-11-27 17:27:51.454 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : cardType
[DEBUG] 2019-11-27 17:27:51.454 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : entries
[DEBUG] 2019-11-27 17:27:51.454 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5cbbbbd6]
[DEBUG] 2019-11-27 17:27:51.455 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1799f748]
[DEBUG] 2019-11-27 17:27:51.455 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2019-11-27 17:27:51.455 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-11-27 17:27:51.455 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : quantity
[DEBUG] 2019-11-27 17:27:51.455 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2019-11-27 17:27:51.456 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-11-27 17:27:51.456 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-11-27 17:27:51.456 [http-nio-8080-exec-15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-27 17:27:51.519 [http-nio-8080-exec-15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-27 17:27:51.519 [http-nio-8080-exec-15] LoadPlanTreePrinter - LoadPlan(collection=edu.yang.entity.User.cards)
    - Returns
       - CollectionReturnImpl(collection=edu.yang.entity.User.cards, querySpaceUid=<gen:0>, path=[edu.yang.entity.User.cards])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:1>, path=[edu.yang.entity.User.cards].<elements>)
             - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:2>, path=[edu.yang.entity.User.cards].<elements>.entries)
                - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:3>, path=[edu.yang.entity.User.cards].<elements>.entries.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.yang.entity.User.cards)
          - SQL table alias mapping - cards0_
          - alias suffix - 0_
          - suffixed key columns - {user_id11_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCard)
                - SQL table alias mapping - cards0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-11-27 17:27:51.520 [http-nio-8080-exec-15] CollectionLoader - Static select for collection edu.yang.entity.User.cards: select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-27 17:27:51.520 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4821039d]
[DEBUG] 2019-11-27 17:27:51.520 [http-nio-8080-exec-15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e692c53]
[DEBUG] 2019-11-27 17:27:51.520 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-11-27 17:27:51.520 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : ts
[DEBUG] 2019-11-27 17:27:51.520 [http-nio-8080-exec-15] MetamodelGraphWalker - Visiting attribute path : yugiohCard
[DEBUG] 2019-11-27 17:27:51.520 [http-nio-8080-exec-15] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard
[DEBUG] 2019-11-27 17:27:51.521 [http-nio-8080-exec-15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-27 17:27:51.521 [http-nio-8080-exec-15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-27 17:27:51.521 [http-nio-8080-exec-15] LoadPlanTreePrinter - LoadPlan(collection=edu.yang.entity.YugiohCard.entries)
    - Returns
       - CollectionReturnImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:0>, path=[edu.yang.entity.YugiohCard.entries])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:1>, path=[edu.yang.entity.YugiohCard.entries].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.yang.entity.YugiohCard.entries)
          - SQL table alias mapping - entries0_
          - alias suffix - 0_
          - suffixed key columns - {yugiohCa4_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCardHistory)
                - SQL table alias mapping - entries0_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

[DEBUG] 2019-11-27 17:27:51.521 [http-nio-8080-exec-15] CollectionLoader - Static select for collection edu.yang.entity.YugiohCard.entries: select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:27:51.565 [http-nio-8080-exec-15] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-11-27 17:27:51.565 [http-nio-8080-exec-15] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-11-27 17:27:51.566 [http-nio-8080-exec-15] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-11-27 17:27:51.573 [http-nio-8080-exec-15] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-11-27 17:27:51.573 [http-nio-8080-exec-15] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-11-27 17:27:51.576 [http-nio-8080-exec-15] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-11-27 17:27:51.576 [http-nio-8080-exec-15] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-11-27 17:27:51.578 [http-nio-8080-exec-15] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@141104d3
[DEBUG] 2019-11-27 17:27:51.580 [http-nio-8080-exec-15] SessionFactoryRegistry - Registering SessionFactory: 4d574617-8cdb-4ffe-bfcc-8d49aab1f743 (<unnamed>)
[DEBUG] 2019-11-27 17:27:51.580 [http-nio-8080-exec-15] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-11-27 17:27:51.781 [http-nio-8080-exec-15] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-11-27 17:27:51.890 [http-nio-8080-exec-15] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName like :param0
[DEBUG] 2019-11-27 17:27:52.025 [http-nio-8080-exec-15] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@373a10bc
[DEBUG] 2019-11-27 17:27:52.109 [http-nio-8080-exec-15] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.User as generatedAlias0 where generatedAlias0.userName like :param0
[DEBUG] 2019-11-27 17:27:52.122 [http-nio-8080-exec-15] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:27:52.132 [http-nio-8080-exec-15] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'yang'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'userName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-11-27 17:27:52.176 [http-nio-8080-exec-15] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-11-27 17:27:52.211 [http-nio-8080-exec-15] FromElement - FromClause{level=1} : edu.yang.entity.User (generatedAlias0) -> user0_
[DEBUG] 2019-11-27 17:27:52.218 [http-nio-8080-exec-15] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2019-11-27 17:27:52.224 [http-nio-8080-exec-15] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2019-11-27 17:27:52.225 [http-nio-8080-exec-15] DotNode - getDataType() : userName -> org.hibernate.type.StringType@2eae721b
[DEBUG] 2019-11-27 17:27:52.226 [http-nio-8080-exec-15] FromReferenceNode - Resolved : generatedAlias0.userName -> user0_.user_name
[DEBUG] 2019-11-27 17:27:52.232 [http-nio-8080-exec-15] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-11-27 17:27:52.234 [http-nio-8080-exec-15] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.user_name user0_.id userName ) ? ) ) )
[DEBUG] 2019-11-27 17:27:52.254 [http-nio-8080-exec-15] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2019-11-27 17:27:52.254 [http-nio-8080-exec-15] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-11-27 17:27:52.257 [http-nio-8080-exec-15] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_0_' {alias=generatedAlias0, className=edu.yang.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=edu.yang.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.user_name' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path=generatedAlias0.userName,tableAlias=user0_,className=edu.yang.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=edu.yang.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2eae721b}

[DEBUG] 2019-11-27 17:27:52.257 [http-nio-8080-exec-15] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:27:52.269 [http-nio-8080-exec-15] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.User as generatedAlias0 where generatedAlias0.userName like :param0
[DEBUG] 2019-11-27 17:27:52.270 [http-nio-8080-exec-15] QueryTranslatorImpl - SQL: select user0_.id as id1_0_, user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_ from user user0_ where user0_.user_name like ?
[DEBUG] 2019-11-27 17:27:52.273 [http-nio-8080-exec-15] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:27:52.374 [http-nio-8080-exec-15] SQL - select user0_.id as id1_0_, user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_ from user user0_ where user0_.user_name like ?
[DEBUG] 2019-11-27 17:27:52.433 [http-nio-8080-exec-15] Loader - Result set row: 0
[DEBUG] 2019-11-27 17:27:52.437 [http-nio-8080-exec-15] Loader - Result row: EntityKey[edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:27:52.456 [http-nio-8080-exec-15] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:27:52.460 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:27:52.460 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:27:52.472 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `password` : value = august2016
[DEBUG] 2019-11-27 17:27:52.472 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:27:52.472 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:27:52.472 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:27:52.472 [http-nio-8080-exec-15] TwoPhaseLoad - Processing attribute `userName` : value = benjamin
[DEBUG] 2019-11-27 17:27:52.472 [http-nio-8080-exec-15] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:27:52.487 [http-nio-8080-exec-15] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:27:52.491 [http-nio-8080-exec-15] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:27:52.492 [http-nio-8080-exec-15] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-27 17:27:52.516 [http-nio-8080-exec-15] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:27:52.527 [http-nio-8080-exec-15] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:27:52.527 [http-nio-8080-exec-15] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:27:52.527 [http-nio-8080-exec-15] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:27:52.532 [http-nio-8080-exec-15] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:27:52.533 [http-nio-8080-exec-15] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:27:52.535 [http-nio-8080-exec-15] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:28:00.601 [http-nio-8080-exec-17] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-27 17:28:00.601 [http-nio-8080-exec-17] TransactionImpl - begin
[DEBUG] 2019-11-27 17:28:00.613 [http-nio-8080-exec-17] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-27 17:28:00.626 [http-nio-8080-exec-17] SQL - insert into yugioh_card (card_index, card_name, card_rarity, card_set, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-11-27 17:28:00.664 [http-nio-8080-exec-17] IdentifierGeneratorHelper - Natively generated identity: 47
[DEBUG] 2019-11-27 17:28:00.665 [http-nio-8080-exec-17] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:28:00.667 [http-nio-8080-exec-17] TransactionImpl - committing
[DEBUG] 2019-11-27 17:28:00.669 [http-nio-8080-exec-17] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-27 17:28:00.670 [http-nio-8080-exec-17] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-27 17:28:00.681 [http-nio-8080-exec-17] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#47], was: [<unreferenced>] (initialized)
[DEBUG] 2019-11-27 17:28:00.682 [http-nio-8080-exec-17] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-11-27 17:28:00.683 [http-nio-8080-exec-17] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-11-27 17:28:00.684 [http-nio-8080-exec-17] EntityPrinter - Listing entities:
[DEBUG] 2019-11-27 17:28:00.685 [http-nio-8080-exec-17] EntityPrinter - edu.yang.entity.YugiohCard{image=null, entries=[], quantity=2, cardName=Chaos Emperor Dragon Envoy of the End, cardSet=IOC, price=10.0, cardRarity=Secret, cardType=Monster, id=47, user=edu.yang.entity.User#5, cardIndex=EN026, status=Not Sold}
[DEBUG] 2019-11-27 17:28:00.690 [http-nio-8080-exec-17] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:28:00.691 [http-nio-8080-exec-17] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:28:00.696 [http-nio-8080-exec-17] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-27 17:28:00.696 [http-nio-8080-exec-17] TransactionImpl - begin
[DEBUG] 2019-11-27 17:28:00.698 [http-nio-8080-exec-17] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-27 17:28:00.698 [http-nio-8080-exec-17] SQL - insert into yugioh_card (card_index, card_name, card_rarity, card_set, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-11-27 17:28:00.699 [http-nio-8080-exec-17] IdentifierGeneratorHelper - Natively generated identity: 48
[DEBUG] 2019-11-27 17:28:00.699 [http-nio-8080-exec-17] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:28:00.699 [http-nio-8080-exec-17] TransactionImpl - committing
[DEBUG] 2019-11-27 17:28:00.699 [http-nio-8080-exec-17] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-27 17:28:00.699 [http-nio-8080-exec-17] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-27 17:28:00.699 [http-nio-8080-exec-17] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#48], was: [<unreferenced>] (initialized)
[DEBUG] 2019-11-27 17:28:00.699 [http-nio-8080-exec-17] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-11-27 17:28:00.699 [http-nio-8080-exec-17] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-11-27 17:28:00.699 [http-nio-8080-exec-17] EntityPrinter - Listing entities:
[DEBUG] 2019-11-27 17:28:00.699 [http-nio-8080-exec-17] EntityPrinter - edu.yang.entity.YugiohCard{image=null, entries=[], quantity=25, cardName=Dark Magician Girl, cardSet=IOC, price=2.0, cardRarity=Secret, cardType=Monster, id=48, user=edu.yang.entity.User#5, cardIndex=EN001, status=Not Sold}
[DEBUG] 2019-11-27 17:28:00.701 [http-nio-8080-exec-17] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:28:00.702 [http-nio-8080-exec-17] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:28:00.703 [http-nio-8080-exec-17] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-27 17:28:00.703 [http-nio-8080-exec-17] TransactionImpl - begin
[DEBUG] 2019-11-27 17:28:00.706 [http-nio-8080-exec-17] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-27 17:28:00.707 [http-nio-8080-exec-17] SQL - insert into yugioh_card (card_index, card_name, card_rarity, card_set, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-11-27 17:28:00.708 [http-nio-8080-exec-17] IdentifierGeneratorHelper - Natively generated identity: 49
[DEBUG] 2019-11-27 17:28:00.708 [http-nio-8080-exec-17] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:28:00.708 [http-nio-8080-exec-17] TransactionImpl - committing
[DEBUG] 2019-11-27 17:28:00.708 [http-nio-8080-exec-17] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-27 17:28:00.708 [http-nio-8080-exec-17] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-27 17:28:00.709 [http-nio-8080-exec-17] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#49], was: [<unreferenced>] (initialized)
[DEBUG] 2019-11-27 17:28:00.709 [http-nio-8080-exec-17] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-11-27 17:28:00.709 [http-nio-8080-exec-17] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-11-27 17:28:00.709 [http-nio-8080-exec-17] EntityPrinter - Listing entities:
[DEBUG] 2019-11-27 17:28:00.709 [http-nio-8080-exec-17] EntityPrinter - edu.yang.entity.YugiohCard{image=null, entries=[], quantity=15, cardName=Raigeki, cardSet=LOB, price=1.0, cardRarity=Super, cardType=Spell, id=49, user=edu.yang.entity.User#5, cardIndex=EN025, status=Not Sold}
[DEBUG] 2019-11-27 17:28:00.710 [http-nio-8080-exec-17] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:28:00.711 [http-nio-8080-exec-17] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:28:00.719 [http-nio-8080-exec-17] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-27 17:28:00.720 [http-nio-8080-exec-17] TransactionImpl - begin
[DEBUG] 2019-11-27 17:28:00.724 [http-nio-8080-exec-17] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-27 17:28:00.725 [http-nio-8080-exec-17] SQL - insert into yugioh_card (card_index, card_name, card_rarity, card_set, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-11-27 17:28:00.731 [http-nio-8080-exec-17] IdentifierGeneratorHelper - Natively generated identity: 50
[DEBUG] 2019-11-27 17:28:00.731 [http-nio-8080-exec-17] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:28:00.731 [http-nio-8080-exec-17] TransactionImpl - committing
[DEBUG] 2019-11-27 17:28:00.731 [http-nio-8080-exec-17] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-27 17:28:00.735 [http-nio-8080-exec-17] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-27 17:28:00.735 [http-nio-8080-exec-17] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#50], was: [<unreferenced>] (initialized)
[DEBUG] 2019-11-27 17:28:00.736 [http-nio-8080-exec-17] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-11-27 17:28:00.736 [http-nio-8080-exec-17] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-11-27 17:28:00.736 [http-nio-8080-exec-17] EntityPrinter - Listing entities:
[DEBUG] 2019-11-27 17:28:00.736 [http-nio-8080-exec-17] EntityPrinter - edu.yang.entity.YugiohCard{image=null, entries=[], quantity=75, cardName=Harpie's Feather Duster, cardSet=DDS, price=1.0, cardRarity=Prismatic, cardType=Spell, id=50, user=edu.yang.entity.User#5, cardIndex=EN001, status=Not Sold}
[DEBUG] 2019-11-27 17:28:00.737 [http-nio-8080-exec-17] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:28:00.742 [http-nio-8080-exec-17] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:28:00.749 [http-nio-8080-exec-17] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-27 17:28:00.749 [http-nio-8080-exec-17] TransactionImpl - begin
[DEBUG] 2019-11-27 17:28:00.753 [http-nio-8080-exec-17] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-27 17:28:00.754 [http-nio-8080-exec-17] SQL - insert into yugioh_card (card_index, card_name, card_rarity, card_set, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-11-27 17:28:00.760 [http-nio-8080-exec-17] IdentifierGeneratorHelper - Natively generated identity: 51
[DEBUG] 2019-11-27 17:28:00.760 [http-nio-8080-exec-17] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:28:00.760 [http-nio-8080-exec-17] TransactionImpl - committing
[DEBUG] 2019-11-27 17:28:00.761 [http-nio-8080-exec-17] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-27 17:28:00.761 [http-nio-8080-exec-17] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-27 17:28:00.761 [http-nio-8080-exec-17] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#51], was: [<unreferenced>] (initialized)
[DEBUG] 2019-11-27 17:28:00.761 [http-nio-8080-exec-17] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-11-27 17:28:00.761 [http-nio-8080-exec-17] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-11-27 17:28:00.761 [http-nio-8080-exec-17] EntityPrinter - Listing entities:
[DEBUG] 2019-11-27 17:28:00.761 [http-nio-8080-exec-17] EntityPrinter - edu.yang.entity.YugiohCard{image=null, entries=[], quantity=1, cardName=Heavy Storm, cardSet=LOB, price=25.3, cardRarity=Super, cardType=Spell, id=51, user=edu.yang.entity.User#5, cardIndex=EN025, status=Not Sold}
[DEBUG] 2019-11-27 17:28:00.764 [http-nio-8080-exec-17] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:28:00.765 [http-nio-8080-exec-17] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:28:05.031 [http-nio-8080-exec-19] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where generatedAlias0.user=:param0
[DEBUG] 2019-11-27 17:28:05.038 [http-nio-8080-exec-19] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.user=:param0
[DEBUG] 2019-11-27 17:28:05.042 [http-nio-8080-exec-19] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:28:05.045 [http-nio-8080-exec-19] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'yang'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'YugiohCard'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'user'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-11-27 17:28:05.046 [http-nio-8080-exec-19] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-11-27 17:28:05.047 [http-nio-8080-exec-19] FromElement - FromClause{level=1} : edu.yang.entity.YugiohCard (generatedAlias0) -> yugiohcard0_
[DEBUG] 2019-11-27 17:28:05.047 [http-nio-8080-exec-19] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-27 17:28:05.047 [http-nio-8080-exec-19] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-27 17:28:05.047 [http-nio-8080-exec-19] DotNode - getDataType() : user -> org.hibernate.type.ManyToOneType(edu.yang.entity.User)
[DEBUG] 2019-11-27 17:28:05.047 [http-nio-8080-exec-19] DotNode - dereferenceShortcut() : property user in edu.yang.entity.YugiohCard does not require a join.
[DEBUG] 2019-11-27 17:28:05.047 [http-nio-8080-exec-19] DotNode - Terminal getPropertyPath = [user]
[DEBUG] 2019-11-27 17:28:05.047 [http-nio-8080-exec-19] FromReferenceNode - Resolved : generatedAlias0.user -> yugiohcard0_.user_id
[DEBUG] 2019-11-27 17:28:05.048 [http-nio-8080-exec-19] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-11-27 17:28:05.048 [http-nio-8080-exec-19] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} yugiohcard0_.id ) ( FromClause{level=1} yugioh_card yugiohcard0_ ) ( where ( = ( yugiohcard0_.user_id yugiohcard0_.id user ) ? ) ) )
[DEBUG] 2019-11-27 17:28:05.048 [http-nio-8080-exec-19] JoinProcessor - Using FROM fragment [yugioh_card yugiohcard0_]
[DEBUG] 2019-11-27 17:28:05.048 [http-nio-8080-exec-19] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-11-27 17:28:05.048 [http-nio-8080-exec-19] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (yugioh_card)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id as id1_1_' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
    |  \-[SQL_TOKEN] SqlFragment: 'yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[yugiohcard0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'yugioh_card yugiohcard0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=yugioh_card,tableAlias=yugiohcard0_,origin=null,columns={,className=edu.yang.entity.YugiohCard}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'yugiohcard0_.user_id' {propertyName=user,dereferenceType=UNKNOWN,getPropertyPath=user,path=generatedAlias0.user,tableAlias=yugiohcard0_,className=edu.yang.entity.YugiohCard,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
          |  \-[IDENT] IdentNode: 'user' {originalText=user}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(edu.yang.entity.User)}

[DEBUG] 2019-11-27 17:28:05.049 [http-nio-8080-exec-19] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:28:05.049 [http-nio-8080-exec-19] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.user=:param0
[DEBUG] 2019-11-27 17:28:05.049 [http-nio-8080-exec-19] QueryTranslatorImpl - SQL: select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.user_id=?
[DEBUG] 2019-11-27 17:28:05.049 [http-nio-8080-exec-19] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:28:05.055 [http-nio-8080-exec-19] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.user_id=?
[DEBUG] 2019-11-27 17:28:05.063 [http-nio-8080-exec-19] Loader - Result set row: 0
[DEBUG] 2019-11-27 17:28:05.065 [http-nio-8080-exec-19] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:28:05.073 [http-nio-8080-exec-19] Loader - Result set row: 1
[DEBUG] 2019-11-27 17:28:05.074 [http-nio-8080-exec-19] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:28:05.074 [http-nio-8080-exec-19] Loader - Result set row: 2
[DEBUG] 2019-11-27 17:28:05.074 [http-nio-8080-exec-19] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:28:05.075 [http-nio-8080-exec-19] Loader - Result set row: 3
[DEBUG] 2019-11-27 17:28:05.075 [http-nio-8080-exec-19] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:28:05.075 [http-nio-8080-exec-19] Loader - Result set row: 4
[DEBUG] 2019-11-27 17:28:05.075 [http-nio-8080-exec-19] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:28:05.076 [http-nio-8080-exec-19] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:28:05.076 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN026
[DEBUG] 2019-11-27 17:28:05.076 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.076 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardName` : value = Chaos Emperor Dragon Envoy of the End
[DEBUG] 2019-11-27 17:28:05.076 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.076 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:28:05.076 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.076 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-11-27 17:28:05.076 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.076 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:28:05.076 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.076 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:28:05.076 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.076 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:28:05.076 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.076 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `price` : value = 10.0
[DEBUG] 2019-11-27 17:28:05.076 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.076 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:28:05.076 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.076 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:28:05.076 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.076 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:28:05.076 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.084 [http-nio-8080-exec-19] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-27 17:28:05.097 [http-nio-8080-exec-19] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:28:05.107 [http-nio-8080-exec-19] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:28:05.109 [http-nio-8080-exec-19] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:28:05.110 [http-nio-8080-exec-19] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:28:05.110 [http-nio-8080-exec-19] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:28:05.110 [http-nio-8080-exec-19] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:28:05.110 [http-nio-8080-exec-19] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:28:05.110 [http-nio-8080-exec-19] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:28:05.110 [http-nio-8080-exec-19] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-27 17:28:05.110 [http-nio-8080-exec-19] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:28:05.110 [http-nio-8080-exec-19] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:28:05.110 [http-nio-8080-exec-19] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:28:05.111 [http-nio-8080-exec-19] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2019-11-27 17:28:05.112 [http-nio-8080-exec-19] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:28:05.112 [http-nio-8080-exec-19] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:28:05.112 [http-nio-8080-exec-19] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:28:05.113 [http-nio-8080-exec-19] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2019-11-27 17:28:05.113 [http-nio-8080-exec-19] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:28:05.113 [http-nio-8080-exec-19] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:28:05.113 [http-nio-8080-exec-19] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:28:05.113 [http-nio-8080-exec-19] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:28:05.113 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:28:05.113 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.113 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `password` : value = august2016
[DEBUG] 2019-11-27 17:28:05.113 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.113 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:28:05.113 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.113 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `userName` : value = benjamin
[DEBUG] 2019-11-27 17:28:05.113 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.113 [http-nio-8080-exec-19] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:28:05.113 [http-nio-8080-exec-19] CollectionLoadContext - 5 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:28:05.113 [http-nio-8080-exec-19] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:28:05.113 [http-nio-8080-exec-19] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:28:05.113 [http-nio-8080-exec-19] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:28:05.113 [http-nio-8080-exec-19] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:28:05.114 [http-nio-8080-exec-19] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:28:05.114 [http-nio-8080-exec-19] CollectionLoadContext - 5 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:28:05.114 [http-nio-8080-exec-19] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:28:05.115 [http-nio-8080-exec-19] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:28:05.115 [http-nio-8080-exec-19] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:28:05.115 [http-nio-8080-exec-19] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:28:05.116 [http-nio-8080-exec-19] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#5
[DEBUG] 2019-11-27 17:28:05.116 [http-nio-8080-exec-19] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:28:05.116 [http-nio-8080-exec-19] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:28:05.116 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN001
[DEBUG] 2019-11-27 17:28:05.116 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.116 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:28:05.116 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.116 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:28:05.116 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.116 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-11-27 17:28:05.116 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.116 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:28:05.116 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.116 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:28:05.116 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.116 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:28:05.116 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.116 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `price` : value = 2.0
[DEBUG] 2019-11-27 17:28:05.116 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.116 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `quantity` : value = 25
[DEBUG] 2019-11-27 17:28:05.116 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.116 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:28:05.124 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.124 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:28:05.124 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.125 [http-nio-8080-exec-19] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:28:05.126 [http-nio-8080-exec-19] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:28:05.126 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-27 17:28:05.126 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.126 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardName` : value = Raigeki
[DEBUG] 2019-11-27 17:28:05.126 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.126 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-11-27 17:28:05.126 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.126 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:28:05.126 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.126 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:28:05.126 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.126 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:28:05.126 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.126 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:28:05.126 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.126 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `price` : value = 1.0
[DEBUG] 2019-11-27 17:28:05.126 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.132 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `quantity` : value = 15
[DEBUG] 2019-11-27 17:28:05.133 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.136 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:28:05.136 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.136 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:28:05.136 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.137 [http-nio-8080-exec-19] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:28:05.137 [http-nio-8080-exec-19] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:28:05.137 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN001
[DEBUG] 2019-11-27 17:28:05.137 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.142 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardName` : value = Harpie's Feather Duster
[DEBUG] 2019-11-27 17:28:05.142 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.142 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardRarity` : value = Prismatic
[DEBUG] 2019-11-27 17:28:05.142 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.142 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardSet` : value = DDS
[DEBUG] 2019-11-27 17:28:05.142 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.142 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:28:05.142 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.142 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:28:05.143 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.143 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:28:05.143 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.143 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `price` : value = 1.0
[DEBUG] 2019-11-27 17:28:05.143 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.143 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `quantity` : value = 75
[DEBUG] 2019-11-27 17:28:05.143 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.143 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:28:05.143 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.143 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:28:05.143 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardName` : value = Heavy Storm
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `price` : value = 25.3
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:05.144 [http-nio-8080-exec-19] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:28:05.147 [http-nio-8080-exec-19] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:28:07.895 [http-nio-8080-exec-20] SQL - select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:28:07.906 [http-nio-8080-exec-20] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:28:07.906 [http-nio-8080-exec-20] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:28:07.908 [http-nio-8080-exec-20] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:28:07.908 [http-nio-8080-exec-20] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:28:07.908 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN001
[DEBUG] 2019-11-27 17:28:07.908 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.908 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:28:07.908 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.908 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:28:07.908 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.908 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-11-27 17:28:07.908 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.908 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:28:07.908 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.908 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:28:07.908 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.908 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:28:07.908 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.908 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `price` : value = 2.0
[DEBUG] 2019-11-27 17:28:07.909 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.909 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `quantity` : value = 25
[DEBUG] 2019-11-27 17:28:07.909 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.909 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:28:07.909 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.909 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:28:07.909 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.909 [http-nio-8080-exec-20] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:28:07.909 [http-nio-8080-exec-20] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:28:07.909 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:28:07.909 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.909 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `password` : value = august2016
[DEBUG] 2019-11-27 17:28:07.909 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.909 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:28:07.909 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.909 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `userName` : value = benjamin
[DEBUG] 2019-11-27 17:28:07.909 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.915 [http-nio-8080-exec-20] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:28:07.915 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:28:07.915 [http-nio-8080-exec-20] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:28:07.915 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:28:07.915 [http-nio-8080-exec-20] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:28:07.915 [http-nio-8080-exec-20] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:28:07.916 [http-nio-8080-exec-20] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-27 17:28:07.918 [http-nio-8080-exec-20] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:28:07.918 [http-nio-8080-exec-20] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:28:07.919 [http-nio-8080-exec-20] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:28:07.920 [http-nio-8080-exec-20] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:28:07.920 [http-nio-8080-exec-20] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:28:07.922 [http-nio-8080-exec-20] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-27 17:28:07.923 [http-nio-8080-exec-20] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:28:07.923 [http-nio-8080-exec-20] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2019-11-27 17:28:07.923 [http-nio-8080-exec-20] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:28:07.923 [http-nio-8080-exec-20] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2019-11-27 17:28:07.924 [http-nio-8080-exec-20] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:28:07.924 [http-nio-8080-exec-20] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:28:07.924 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN026
[DEBUG] 2019-11-27 17:28:07.924 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.924 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardName` : value = Chaos Emperor Dragon Envoy of the End
[DEBUG] 2019-11-27 17:28:07.924 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.924 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:28:07.924 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.924 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-11-27 17:28:07.924 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.924 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:28:07.924 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.924 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:28:07.924 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.924 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:28:07.925 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.925 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `price` : value = 10.0
[DEBUG] 2019-11-27 17:28:07.925 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.925 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:28:07.925 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.925 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:28:07.925 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.925 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:28:07.925 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.925 [http-nio-8080-exec-20] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:28:07.925 [http-nio-8080-exec-20] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:28:07.925 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-27 17:28:07.925 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.925 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardName` : value = Raigeki
[DEBUG] 2019-11-27 17:28:07.933 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.933 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-11-27 17:28:07.933 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.933 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:28:07.933 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.933 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:28:07.933 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.933 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:28:07.933 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.933 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:28:07.933 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.933 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `price` : value = 1.0
[DEBUG] 2019-11-27 17:28:07.933 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.933 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `quantity` : value = 15
[DEBUG] 2019-11-27 17:28:07.933 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.933 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:28:07.933 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.933 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:28:07.933 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.934 [http-nio-8080-exec-20] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:28:07.934 [http-nio-8080-exec-20] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:28:07.934 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN001
[DEBUG] 2019-11-27 17:28:07.934 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.934 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardName` : value = Harpie's Feather Duster
[DEBUG] 2019-11-27 17:28:07.934 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.934 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardRarity` : value = Prismatic
[DEBUG] 2019-11-27 17:28:07.934 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.934 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardSet` : value = DDS
[DEBUG] 2019-11-27 17:28:07.934 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.934 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:28:07.934 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.934 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:28:07.934 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.934 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:28:07.934 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.934 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `price` : value = 1.0
[DEBUG] 2019-11-27 17:28:07.934 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.934 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `quantity` : value = 75
[DEBUG] 2019-11-27 17:28:07.934 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.934 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:28:07.934 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.934 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:28:07.934 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.935 [http-nio-8080-exec-20] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:28:07.935 [http-nio-8080-exec-20] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:28:07.935 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-27 17:28:07.935 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.935 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardName` : value = Heavy Storm
[DEBUG] 2019-11-27 17:28:07.935 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.935 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-11-27 17:28:07.935 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.935 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:28:07.935 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.935 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:28:07.935 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.935 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:28:07.935 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.935 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:28:07.935 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.935 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `price` : value = 25.3
[DEBUG] 2019-11-27 17:28:07.936 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.936 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:28:07.936 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.936 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:28:07.936 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.936 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:28:07.936 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:28:07.936 [http-nio-8080-exec-20] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:28:07.936 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:28:07.937 [http-nio-8080-exec-20] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:28:07.937 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:28:07.937 [http-nio-8080-exec-20] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:28:07.937 [http-nio-8080-exec-20] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:28:07.937 [http-nio-8080-exec-20] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:28:07.937 [http-nio-8080-exec-20] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:28:07.940 [http-nio-8080-exec-20] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:28:07.940 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:28:07.940 [http-nio-8080-exec-20] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:28:07.940 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:28:07.940 [http-nio-8080-exec-20] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:28:07.940 [http-nio-8080-exec-20] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:28:07.940 [http-nio-8080-exec-20] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:28:07.940 [http-nio-8080-exec-20] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:28:07.942 [http-nio-8080-exec-20] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:28:07.942 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:28:07.942 [http-nio-8080-exec-20] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:28:07.942 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:28:07.947 [http-nio-8080-exec-20] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:28:07.948 [http-nio-8080-exec-20] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:28:07.948 [http-nio-8080-exec-20] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:28:07.948 [http-nio-8080-exec-20] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:28:07.951 [http-nio-8080-exec-20] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:28:07.951 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:28:07.951 [http-nio-8080-exec-20] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:28:07.951 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:28:07.951 [http-nio-8080-exec-20] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:28:07.951 [http-nio-8080-exec-20] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:28:07.951 [http-nio-8080-exec-20] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:28:07.951 [http-nio-8080-exec-20] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:28:07.957 [http-nio-8080-exec-20] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:28:07.958 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:28:07.958 [http-nio-8080-exec-20] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:28:07.958 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:28:07.958 [http-nio-8080-exec-20] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:28:07.958 [http-nio-8080-exec-20] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:28:07.958 [http-nio-8080-exec-20] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCard#48
[DEBUG] 2019-11-27 17:28:07.958 [http-nio-8080-exec-20] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:29:32.815 [http-nio-8080-exec-20] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where generatedAlias0.user=:param0
[DEBUG] 2019-11-27 17:29:32.816 [http-nio-8080-exec-20] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.user_id=?
[DEBUG] 2019-11-27 17:29:32.829 [http-nio-8080-exec-20] Loader - Result set row: 0
[DEBUG] 2019-11-27 17:29:32.831 [http-nio-8080-exec-20] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:29:32.831 [http-nio-8080-exec-20] Loader - Result set row: 1
[DEBUG] 2019-11-27 17:29:32.831 [http-nio-8080-exec-20] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:29:32.839 [http-nio-8080-exec-20] Loader - Result set row: 2
[DEBUG] 2019-11-27 17:29:32.839 [http-nio-8080-exec-20] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:29:32.839 [http-nio-8080-exec-20] Loader - Result set row: 3
[DEBUG] 2019-11-27 17:29:32.839 [http-nio-8080-exec-20] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:29:32.849 [http-nio-8080-exec-20] Loader - Result set row: 4
[DEBUG] 2019-11-27 17:29:32.849 [http-nio-8080-exec-20] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:29:32.851 [http-nio-8080-exec-20] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:29:32.851 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN026
[DEBUG] 2019-11-27 17:29:32.851 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.852 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardName` : value = Chaos Emperor Dragon Envoy of the End
[DEBUG] 2019-11-27 17:29:32.852 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.852 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:29:32.852 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.852 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-11-27 17:29:32.852 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.852 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:29:32.852 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.852 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:29:32.852 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.852 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:29:32.852 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.852 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `price` : value = 10.0
[DEBUG] 2019-11-27 17:29:32.852 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.852 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:29:32.852 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.852 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:29:32.852 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.852 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:29:32.852 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.852 [http-nio-8080-exec-20] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-27 17:29:32.883 [http-nio-8080-exec-20] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:29:32.883 [http-nio-8080-exec-20] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:29:32.889 [http-nio-8080-exec-20] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:29:32.889 [http-nio-8080-exec-20] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:29:32.894 [http-nio-8080-exec-20] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:29:32.895 [http-nio-8080-exec-20] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:29:32.897 [http-nio-8080-exec-20] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:29:32.898 [http-nio-8080-exec-20] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:29:32.900 [http-nio-8080-exec-20] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-27 17:29:32.903 [http-nio-8080-exec-20] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:29:32.903 [http-nio-8080-exec-20] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:29:32.904 [http-nio-8080-exec-20] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:29:32.906 [http-nio-8080-exec-20] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2019-11-27 17:29:32.906 [http-nio-8080-exec-20] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:29:32.906 [http-nio-8080-exec-20] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:29:32.913 [http-nio-8080-exec-20] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:29:32.915 [http-nio-8080-exec-20] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2019-11-27 17:29:32.915 [http-nio-8080-exec-20] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:29:32.929 [http-nio-8080-exec-20] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:29:32.929 [http-nio-8080-exec-20] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:29:32.972 [http-nio-8080-exec-20] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:29:32.972 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:29:32.972 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.972 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `password` : value = august2016
[DEBUG] 2019-11-27 17:29:32.972 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.972 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:29:32.972 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.972 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `userName` : value = benjamin
[DEBUG] 2019-11-27 17:29:32.972 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.972 [http-nio-8080-exec-20] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:29:32.972 [http-nio-8080-exec-20] CollectionLoadContext - 5 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:29:32.972 [http-nio-8080-exec-20] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:29:32.972 [http-nio-8080-exec-20] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:29:32.973 [http-nio-8080-exec-20] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:29:32.973 [http-nio-8080-exec-20] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:29:32.973 [http-nio-8080-exec-20] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:29:32.973 [http-nio-8080-exec-20] CollectionLoadContext - 5 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:29:32.973 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:29:32.973 [http-nio-8080-exec-20] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:29:32.973 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:29:32.976 [http-nio-8080-exec-20] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:29:32.976 [http-nio-8080-exec-20] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#5
[DEBUG] 2019-11-27 17:29:32.976 [http-nio-8080-exec-20] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:29:32.976 [http-nio-8080-exec-20] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:29:32.976 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN001
[DEBUG] 2019-11-27 17:29:32.976 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.976 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:29:32.976 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.976 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:29:32.976 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.976 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-11-27 17:29:32.976 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.976 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:29:32.976 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.976 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:29:32.976 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.977 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:29:32.977 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.977 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `price` : value = 2.0
[DEBUG] 2019-11-27 17:29:32.977 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.977 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `quantity` : value = 25
[DEBUG] 2019-11-27 17:29:32.977 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.977 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:29:32.977 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.977 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:29:32.977 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.977 [http-nio-8080-exec-20] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:29:32.977 [http-nio-8080-exec-20] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:29:32.977 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-27 17:29:32.977 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.977 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardName` : value = Raigeki
[DEBUG] 2019-11-27 17:29:32.977 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.977 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-11-27 17:29:32.977 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `price` : value = 1.0
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `quantity` : value = 15
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN001
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardName` : value = Harpie's Feather Duster
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardRarity` : value = Prismatic
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardSet` : value = DDS
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `price` : value = 1.0
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `quantity` : value = 75
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:29:32.978 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.979 [http-nio-8080-exec-20] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:29:32.979 [http-nio-8080-exec-20] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:29:32.979 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-27 17:29:32.979 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.979 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardName` : value = Heavy Storm
[DEBUG] 2019-11-27 17:29:32.979 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.979 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-11-27 17:29:32.979 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.979 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:29:32.987 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.987 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:29:32.987 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.987 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:29:32.987 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.987 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:29:32.987 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.987 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `price` : value = 25.3
[DEBUG] 2019-11-27 17:29:32.987 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.987 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:29:32.987 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.987 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:29:32.987 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.988 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:29:32.989 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:32.991 [http-nio-8080-exec-20] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:29:32.991 [http-nio-8080-exec-20] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:29:36.570 [http-nio-8080-exec-21] SQL - select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:29:36.579 [http-nio-8080-exec-21] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:29:36.583 [http-nio-8080-exec-21] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN001
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `price` : value = 2.0
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `quantity` : value = 25
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.584 [http-nio-8080-exec-21] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:29:36.588 [http-nio-8080-exec-21] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:29:36.588 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:29:36.588 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.588 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `password` : value = august2016
[DEBUG] 2019-11-27 17:29:36.588 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.588 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:29:36.588 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.588 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `userName` : value = benjamin
[DEBUG] 2019-11-27 17:29:36.588 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.589 [http-nio-8080-exec-21] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:29:36.589 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:29:36.589 [http-nio-8080-exec-21] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:29:36.589 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:29:36.589 [http-nio-8080-exec-21] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:29:36.589 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:29:36.589 [http-nio-8080-exec-21] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-27 17:29:36.590 [http-nio-8080-exec-21] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:29:36.590 [http-nio-8080-exec-21] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:29:36.591 [http-nio-8080-exec-21] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:29:36.592 [http-nio-8080-exec-21] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:29:36.592 [http-nio-8080-exec-21] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:29:36.592 [http-nio-8080-exec-21] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-27 17:29:36.597 [http-nio-8080-exec-21] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:29:36.598 [http-nio-8080-exec-21] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2019-11-27 17:29:36.599 [http-nio-8080-exec-21] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:29:36.599 [http-nio-8080-exec-21] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2019-11-27 17:29:36.599 [http-nio-8080-exec-21] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:29:36.600 [http-nio-8080-exec-21] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:29:36.600 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN026
[DEBUG] 2019-11-27 17:29:36.600 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.600 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardName` : value = Chaos Emperor Dragon Envoy of the End
[DEBUG] 2019-11-27 17:29:36.600 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.600 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:29:36.600 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.600 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-11-27 17:29:36.600 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.602 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:29:36.602 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.602 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:29:36.603 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.603 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:29:36.604 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.604 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `price` : value = 10.0
[DEBUG] 2019-11-27 17:29:36.604 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.604 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:29:36.604 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.604 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:29:36.604 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.604 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:29:36.604 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.605 [http-nio-8080-exec-21] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:29:36.605 [http-nio-8080-exec-21] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:29:36.605 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-27 17:29:36.605 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.605 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardName` : value = Raigeki
[DEBUG] 2019-11-27 17:29:36.605 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.605 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-11-27 17:29:36.605 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.605 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `price` : value = 1.0
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `quantity` : value = 15
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN001
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardName` : value = Harpie's Feather Duster
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardRarity` : value = Prismatic
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardSet` : value = DDS
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `price` : value = 1.0
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `quantity` : value = 75
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:29:36.606 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.608 [http-nio-8080-exec-21] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:29:36.608 [http-nio-8080-exec-21] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:29:36.608 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-27 17:29:36.608 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.608 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardName` : value = Heavy Storm
[DEBUG] 2019-11-27 17:29:36.608 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.608 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-11-27 17:29:36.608 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.608 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:29:36.608 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.608 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:29:36.608 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.608 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:29:36.608 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.608 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:29:36.609 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.609 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `price` : value = 25.3
[DEBUG] 2019-11-27 17:29:36.609 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.609 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:29:36.609 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.609 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:29:36.609 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.609 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:29:36.609 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:36.610 [http-nio-8080-exec-21] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:29:36.611 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:29:36.611 [http-nio-8080-exec-21] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:29:36.611 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:29:36.611 [http-nio-8080-exec-21] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:29:36.611 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:29:36.611 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:29:36.611 [http-nio-8080-exec-21] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:29:36.615 [http-nio-8080-exec-21] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:29:36.615 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:29:36.615 [http-nio-8080-exec-21] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:29:36.615 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:29:36.615 [http-nio-8080-exec-21] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:29:36.615 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:29:36.615 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:29:36.615 [http-nio-8080-exec-21] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:29:36.617 [http-nio-8080-exec-21] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:29:36.617 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:29:36.618 [http-nio-8080-exec-21] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:29:36.618 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:29:36.618 [http-nio-8080-exec-21] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:29:36.618 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:29:36.618 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:29:36.618 [http-nio-8080-exec-21] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:29:36.621 [http-nio-8080-exec-21] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:29:36.621 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:29:36.621 [http-nio-8080-exec-21] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:29:36.621 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:29:36.621 [http-nio-8080-exec-21] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:29:36.621 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:29:36.621 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:29:36.621 [http-nio-8080-exec-21] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:29:36.623 [http-nio-8080-exec-21] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:29:36.623 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:29:36.623 [http-nio-8080-exec-21] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:29:36.623 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:29:36.623 [http-nio-8080-exec-21] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:29:36.624 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:29:36.624 [http-nio-8080-exec-21] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCard#48
[DEBUG] 2019-11-27 17:29:36.624 [http-nio-8080-exec-21] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:29:41.444 [http-nio-8080-exec-13] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where generatedAlias0.user=:param0
[DEBUG] 2019-11-27 17:29:41.444 [http-nio-8080-exec-13] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.user_id=?
[DEBUG] 2019-11-27 17:29:41.450 [http-nio-8080-exec-13] Loader - Result set row: 0
[DEBUG] 2019-11-27 17:29:41.450 [http-nio-8080-exec-13] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:29:41.451 [http-nio-8080-exec-13] Loader - Result set row: 1
[DEBUG] 2019-11-27 17:29:41.451 [http-nio-8080-exec-13] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:29:41.454 [http-nio-8080-exec-13] Loader - Result set row: 2
[DEBUG] 2019-11-27 17:29:41.454 [http-nio-8080-exec-13] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:29:41.454 [http-nio-8080-exec-13] Loader - Result set row: 3
[DEBUG] 2019-11-27 17:29:41.454 [http-nio-8080-exec-13] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:29:41.457 [http-nio-8080-exec-13] Loader - Result set row: 4
[DEBUG] 2019-11-27 17:29:41.457 [http-nio-8080-exec-13] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:29:41.469 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:29:41.469 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN026
[DEBUG] 2019-11-27 17:29:41.469 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.469 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardName` : value = Chaos Emperor Dragon Envoy of the End
[DEBUG] 2019-11-27 17:29:41.469 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.469 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:29:41.469 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.469 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-11-27 17:29:41.469 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.469 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:29:41.469 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.469 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:29:41.469 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.469 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:29:41.469 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.469 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `price` : value = 10.0
[DEBUG] 2019-11-27 17:29:41.469 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.469 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:29:41.469 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.469 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:29:41.469 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.469 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:29:41.470 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.471 [http-nio-8080-exec-13] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-27 17:29:41.481 [http-nio-8080-exec-13] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:29:41.482 [http-nio-8080-exec-13] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:29:41.482 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:29:41.484 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:29:41.486 [http-nio-8080-exec-13] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:29:41.486 [http-nio-8080-exec-13] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:29:41.486 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:29:41.489 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:29:41.495 [http-nio-8080-exec-13] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-27 17:29:41.496 [http-nio-8080-exec-13] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:29:41.496 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:29:41.498 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:29:41.498 [http-nio-8080-exec-13] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2019-11-27 17:29:41.498 [http-nio-8080-exec-13] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:29:41.499 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:29:41.499 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:29:41.499 [http-nio-8080-exec-13] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2019-11-27 17:29:41.501 [http-nio-8080-exec-13] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:29:41.501 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:29:41.502 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:29:41.502 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:29:41.502 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:29:41.502 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.502 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `password` : value = august2016
[DEBUG] 2019-11-27 17:29:41.502 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.502 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:29:41.502 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.502 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `userName` : value = benjamin
[DEBUG] 2019-11-27 17:29:41.502 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.504 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:29:41.532 [http-nio-8080-exec-13] CollectionLoadContext - 5 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:29:41.551 [http-nio-8080-exec-13] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:29:41.551 [http-nio-8080-exec-13] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:29:41.552 [http-nio-8080-exec-13] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:29:41.552 [http-nio-8080-exec-13] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:29:41.552 [http-nio-8080-exec-13] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:29:41.552 [http-nio-8080-exec-13] CollectionLoadContext - 5 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:29:41.552 [http-nio-8080-exec-13] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:29:41.553 [http-nio-8080-exec-13] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:29:41.553 [http-nio-8080-exec-13] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:29:41.553 [http-nio-8080-exec-13] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:29:41.564 [http-nio-8080-exec-13] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#5
[DEBUG] 2019-11-27 17:29:41.564 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:29:41.565 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:29:41.565 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN001
[DEBUG] 2019-11-27 17:29:41.567 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.569 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:29:41.569 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.569 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:29:41.569 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.569 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-11-27 17:29:41.569 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.569 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:29:41.569 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.569 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:29:41.569 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.570 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:29:41.570 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.570 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `price` : value = 2.0
[DEBUG] 2019-11-27 17:29:41.570 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.570 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `quantity` : value = 25
[DEBUG] 2019-11-27 17:29:41.570 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.570 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:29:41.570 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.570 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:29:41.570 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.573 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:29:41.573 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:29:41.573 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-27 17:29:41.573 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.573 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardName` : value = Raigeki
[DEBUG] 2019-11-27 17:29:41.573 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.573 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-11-27 17:29:41.573 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.573 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:29:41.573 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.573 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:29:41.573 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.573 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:29:41.573 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.573 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:29:41.573 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.573 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `price` : value = 1.0
[DEBUG] 2019-11-27 17:29:41.573 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.573 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `quantity` : value = 15
[DEBUG] 2019-11-27 17:29:41.573 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.573 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:29:41.573 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.573 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:29:41.573 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN001
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardName` : value = Harpie's Feather Duster
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardRarity` : value = Prismatic
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardSet` : value = DDS
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `price` : value = 1.0
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `quantity` : value = 75
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-27 17:29:41.574 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.575 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardName` : value = Heavy Storm
[DEBUG] 2019-11-27 17:29:41.575 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.575 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-11-27 17:29:41.575 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.575 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:29:41.575 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.575 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:29:41.575 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.575 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:29:41.575 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.575 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:29:41.575 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.575 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `price` : value = 25.3
[DEBUG] 2019-11-27 17:29:41.575 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.575 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:29:41.575 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.575 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:29:41.575 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.575 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:29:41.575 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:29:41.576 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:29:41.576 [http-nio-8080-exec-13] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:30:58.758 [http-nio-8080-exec-18] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where generatedAlias0.user=:param0
[DEBUG] 2019-11-27 17:30:58.758 [http-nio-8080-exec-18] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.user_id=?
[DEBUG] 2019-11-27 17:30:58.764 [http-nio-8080-exec-18] Loader - Result set row: 0
[DEBUG] 2019-11-27 17:30:58.764 [http-nio-8080-exec-18] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:30:58.764 [http-nio-8080-exec-18] Loader - Result set row: 1
[DEBUG] 2019-11-27 17:30:58.774 [http-nio-8080-exec-18] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:30:58.774 [http-nio-8080-exec-18] Loader - Result set row: 2
[DEBUG] 2019-11-27 17:30:58.774 [http-nio-8080-exec-18] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:30:58.774 [http-nio-8080-exec-18] Loader - Result set row: 3
[DEBUG] 2019-11-27 17:30:58.774 [http-nio-8080-exec-18] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:30:58.774 [http-nio-8080-exec-18] Loader - Result set row: 4
[DEBUG] 2019-11-27 17:30:58.774 [http-nio-8080-exec-18] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:30:58.783 [http-nio-8080-exec-18] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:30:58.784 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN026
[DEBUG] 2019-11-27 17:30:58.784 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.784 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardName` : value = Chaos Emperor Dragon Envoy of the End
[DEBUG] 2019-11-27 17:30:58.784 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.784 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:30:58.784 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.784 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-11-27 17:30:58.784 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.784 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:30:58.784 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.784 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:30:58.784 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.784 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:30:58.784 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.784 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `price` : value = 10.0
[DEBUG] 2019-11-27 17:30:58.784 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.784 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:30:58.784 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.784 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:30:58.784 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.784 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:30:58.784 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.784 [http-nio-8080-exec-18] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-27 17:30:58.788 [http-nio-8080-exec-18] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:30:58.788 [http-nio-8080-exec-18] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:30:58.788 [http-nio-8080-exec-18] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:30:58.788 [http-nio-8080-exec-18] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:30:58.791 [http-nio-8080-exec-18] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:30:58.791 [http-nio-8080-exec-18] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:30:58.791 [http-nio-8080-exec-18] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:30:58.791 [http-nio-8080-exec-18] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:30:58.791 [http-nio-8080-exec-18] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-27 17:30:58.791 [http-nio-8080-exec-18] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:30:58.791 [http-nio-8080-exec-18] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:30:58.792 [http-nio-8080-exec-18] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:30:58.792 [http-nio-8080-exec-18] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2019-11-27 17:30:58.792 [http-nio-8080-exec-18] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:30:58.792 [http-nio-8080-exec-18] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:30:58.792 [http-nio-8080-exec-18] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:30:58.792 [http-nio-8080-exec-18] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2019-11-27 17:30:58.793 [http-nio-8080-exec-18] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:30:58.793 [http-nio-8080-exec-18] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:30:58.793 [http-nio-8080-exec-18] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:30:58.793 [http-nio-8080-exec-18] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:30:58.793 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:30:58.793 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.793 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `password` : value = august2016
[DEBUG] 2019-11-27 17:30:58.793 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.793 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:30:58.793 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.793 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `userName` : value = benjamin
[DEBUG] 2019-11-27 17:30:58.793 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.793 [http-nio-8080-exec-18] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:30:58.793 [http-nio-8080-exec-18] CollectionLoadContext - 5 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:30:58.793 [http-nio-8080-exec-18] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:30:58.793 [http-nio-8080-exec-18] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:30:58.793 [http-nio-8080-exec-18] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:30:58.793 [http-nio-8080-exec-18] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:30:58.795 [http-nio-8080-exec-18] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:30:58.795 [http-nio-8080-exec-18] CollectionLoadContext - 5 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:30:58.795 [http-nio-8080-exec-18] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#5
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN001
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `price` : value = 2.0
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `quantity` : value = 25
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.796 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardName` : value = Raigeki
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `price` : value = 1.0
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `quantity` : value = 15
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN001
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardName` : value = Harpie's Feather Duster
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardRarity` : value = Prismatic
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardSet` : value = DDS
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `price` : value = 1.0
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `quantity` : value = 75
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:30:58.797 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.804 [http-nio-8080-exec-18] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:30:58.804 [http-nio-8080-exec-18] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:30:58.804 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-27 17:30:58.804 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.804 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardName` : value = Heavy Storm
[DEBUG] 2019-11-27 17:30:58.804 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.804 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-11-27 17:30:58.804 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.804 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:30:58.804 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.804 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:30:58.804 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.804 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:30:58.804 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.804 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:30:58.804 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.804 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `price` : value = 25.3
[DEBUG] 2019-11-27 17:30:58.804 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.804 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:30:58.804 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.804 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:30:58.804 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.804 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:30:58.805 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:30:58.805 [http-nio-8080-exec-18] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:30:58.806 [http-nio-8080-exec-18] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:46:18.682 [http-nio-8080-exec-16] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where ( generatedAlias0.cardName like :param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-11-27 17:46:18.705 [http-nio-8080-exec-16] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where ( generatedAlias0.cardName like :param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-11-27 17:46:18.706 [http-nio-8080-exec-16] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:46:18.708 [http-nio-8080-exec-16] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'yang'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'YugiohCard'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'cardName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'user'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

[DEBUG] 2019-11-27 17:46:18.708 [http-nio-8080-exec-16] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-11-27 17:46:18.708 [http-nio-8080-exec-16] FromElement - FromClause{level=1} : edu.yang.entity.YugiohCard (generatedAlias0) -> yugiohcard0_
[DEBUG] 2019-11-27 17:46:18.709 [http-nio-8080-exec-16] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-27 17:46:18.709 [http-nio-8080-exec-16] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-27 17:46:18.710 [http-nio-8080-exec-16] DotNode - getDataType() : cardName -> org.hibernate.type.StringType@2eae721b
[DEBUG] 2019-11-27 17:46:18.710 [http-nio-8080-exec-16] FromReferenceNode - Resolved : generatedAlias0.cardName -> yugiohcard0_.card_name
[DEBUG] 2019-11-27 17:46:18.714 [http-nio-8080-exec-16] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-27 17:46:18.714 [http-nio-8080-exec-16] DotNode - getDataType() : user -> org.hibernate.type.ManyToOneType(edu.yang.entity.User)
[DEBUG] 2019-11-27 17:46:18.714 [http-nio-8080-exec-16] DotNode - dereferenceShortcut() : property user in edu.yang.entity.YugiohCard does not require a join.
[DEBUG] 2019-11-27 17:46:18.714 [http-nio-8080-exec-16] DotNode - Terminal getPropertyPath = [user]
[DEBUG] 2019-11-27 17:46:18.714 [http-nio-8080-exec-16] FromReferenceNode - Resolved : generatedAlias0.user -> yugiohcard0_.user_id
[DEBUG] 2019-11-27 17:46:18.721 [http-nio-8080-exec-16] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-11-27 17:46:18.721 [http-nio-8080-exec-16] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} yugiohcard0_.id ) ( FromClause{level=1} yugioh_card yugiohcard0_ ) ( where ( and ( like ( yugiohcard0_.card_name yugiohcard0_.id cardName ) ? ) ( = ( yugiohcard0_.user_id yugiohcard0_.id user ) ? ) ) ) )
[DEBUG] 2019-11-27 17:46:18.721 [http-nio-8080-exec-16] JoinProcessor - Using FROM fragment [yugioh_card yugiohcard0_]
[DEBUG] 2019-11-27 17:46:18.721 [http-nio-8080-exec-16] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-11-27 17:46:18.721 [http-nio-8080-exec-16] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (yugioh_card)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id as id1_1_' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
    |  \-[SQL_TOKEN] SqlFragment: 'yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[yugiohcard0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'yugioh_card yugiohcard0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=yugioh_card,tableAlias=yugiohcard0_,origin=null,columns={,className=edu.yang.entity.YugiohCard}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'yugiohcard0_.card_name' {propertyName=cardName,dereferenceType=PRIMITIVE,getPropertyPath=cardName,path=generatedAlias0.cardName,tableAlias=yugiohcard0_,className=edu.yang.entity.YugiohCard,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
          |  |  \-[IDENT] IdentNode: 'cardName' {originalText=cardName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2eae721b}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'yugiohcard0_.user_id' {propertyName=user,dereferenceType=UNKNOWN,getPropertyPath=user,path=generatedAlias0.user,tableAlias=yugiohcard0_,className=edu.yang.entity.YugiohCard,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
             |  \-[IDENT] IdentNode: 'user' {originalText=user}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.ManyToOneType(edu.yang.entity.User)}

[DEBUG] 2019-11-27 17:46:18.721 [http-nio-8080-exec-16] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:46:18.721 [http-nio-8080-exec-16] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where ( generatedAlias0.cardName like :param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-11-27 17:46:18.721 [http-nio-8080-exec-16] QueryTranslatorImpl - SQL: select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where (yugiohcard0_.card_name like ?) and yugiohcard0_.user_id=?
[DEBUG] 2019-11-27 17:46:18.721 [http-nio-8080-exec-16] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-27 17:46:18.733 [http-nio-8080-exec-16] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where (yugiohcard0_.card_name like ?) and yugiohcard0_.user_id=?
[DEBUG] 2019-11-27 17:46:18.743 [http-nio-8080-exec-16] Loader - Result set row: 0
[DEBUG] 2019-11-27 17:46:18.743 [http-nio-8080-exec-16] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:46:18.744 [http-nio-8080-exec-16] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:46:18.745 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN001
[DEBUG] 2019-11-27 17:46:18.745 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.745 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:46:18.745 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.745 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:46:18.745 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.745 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-11-27 17:46:18.747 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.748 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:46:18.748 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.748 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:46:18.748 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.748 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:46:18.748 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.748 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `price` : value = 2.0
[DEBUG] 2019-11-27 17:46:18.748 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.748 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `quantity` : value = 25
[DEBUG] 2019-11-27 17:46:18.748 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.748 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:46:18.748 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.748 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:46:18.748 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.748 [http-nio-8080-exec-16] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-27 17:46:18.761 [http-nio-8080-exec-16] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:46:18.763 [http-nio-8080-exec-16] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:46:18.764 [http-nio-8080-exec-16] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:46:18.764 [http-nio-8080-exec-16] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:46:18.777 [http-nio-8080-exec-16] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:46:18.777 [http-nio-8080-exec-16] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:46:18.777 [http-nio-8080-exec-16] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:46:18.779 [http-nio-8080-exec-16] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:46:18.780 [http-nio-8080-exec-16] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-27 17:46:18.780 [http-nio-8080-exec-16] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:46:18.781 [http-nio-8080-exec-16] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:46:18.781 [http-nio-8080-exec-16] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:46:18.782 [http-nio-8080-exec-16] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2019-11-27 17:46:18.785 [http-nio-8080-exec-16] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:46:18.788 [http-nio-8080-exec-16] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:46:18.792 [http-nio-8080-exec-16] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:46:18.793 [http-nio-8080-exec-16] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2019-11-27 17:46:18.793 [http-nio-8080-exec-16] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:46:18.793 [http-nio-8080-exec-16] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:46:18.793 [http-nio-8080-exec-16] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:46:18.796 [http-nio-8080-exec-16] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:46:18.796 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:46:18.797 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.797 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `password` : value = august2016
[DEBUG] 2019-11-27 17:46:18.797 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.797 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:46:18.797 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.797 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `userName` : value = benjamin
[DEBUG] 2019-11-27 17:46:18.797 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.797 [http-nio-8080-exec-16] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:46:18.797 [http-nio-8080-exec-16] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:46:18.797 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN026
[DEBUG] 2019-11-27 17:46:18.797 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.797 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardName` : value = Chaos Emperor Dragon Envoy of the End
[DEBUG] 2019-11-27 17:46:18.797 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.797 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:46:18.797 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.797 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-11-27 17:46:18.797 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.797 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:46:18.797 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.797 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:46:18.797 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.797 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:46:18.797 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.797 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `price` : value = 10.0
[DEBUG] 2019-11-27 17:46:18.803 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.803 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:46:18.803 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.803 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:46:18.804 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.806 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:46:18.806 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.806 [http-nio-8080-exec-16] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:46:18.806 [http-nio-8080-exec-16] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:46:18.806 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-27 17:46:18.806 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.806 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardName` : value = Raigeki
[DEBUG] 2019-11-27 17:46:18.806 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.806 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-11-27 17:46:18.806 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.806 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:46:18.806 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.806 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:46:18.806 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.806 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:46:18.806 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.806 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:46:18.806 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.806 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `price` : value = 1.0
[DEBUG] 2019-11-27 17:46:18.807 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.807 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `quantity` : value = 15
[DEBUG] 2019-11-27 17:46:18.807 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.807 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:46:18.807 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.807 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:46:18.807 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.807 [http-nio-8080-exec-16] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:46:18.811 [http-nio-8080-exec-16] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:46:18.813 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN001
[DEBUG] 2019-11-27 17:46:18.813 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.813 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardName` : value = Harpie's Feather Duster
[DEBUG] 2019-11-27 17:46:18.813 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.813 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardRarity` : value = Prismatic
[DEBUG] 2019-11-27 17:46:18.813 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.813 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardSet` : value = DDS
[DEBUG] 2019-11-27 17:46:18.813 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.813 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:46:18.813 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.813 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:46:18.813 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.817 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `price` : value = 1.0
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `quantity` : value = 75
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardName` : value = Heavy Storm
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `price` : value = 25.3
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.818 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:46:18.819 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.819 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:46:18.819 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.819 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:46:18.819 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:18.819 [http-nio-8080-exec-16] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:46:18.819 [http-nio-8080-exec-16] CollectionLoadContext - 5 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:46:18.819 [http-nio-8080-exec-16] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:46:18.819 [http-nio-8080-exec-16] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:46:18.819 [http-nio-8080-exec-16] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:46:18.819 [http-nio-8080-exec-16] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:46:18.819 [http-nio-8080-exec-16] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:46:18.819 [http-nio-8080-exec-16] CollectionLoadContext - 5 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:46:18.819 [http-nio-8080-exec-16] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:46:18.819 [http-nio-8080-exec-16] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:46:18.819 [http-nio-8080-exec-16] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:46:18.819 [http-nio-8080-exec-16] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:46:18.820 [http-nio-8080-exec-16] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#5
[DEBUG] 2019-11-27 17:46:18.821 [http-nio-8080-exec-16] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:46:18.821 [http-nio-8080-exec-16] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:46:37.311 [http-nio-8080-exec-17] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where ( generatedAlias0.cardName like :param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-11-27 17:46:37.313 [http-nio-8080-exec-17] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where (yugiohcard0_.card_name like ?) and yugiohcard0_.user_id=?
[DEBUG] 2019-11-27 17:46:37.323 [http-nio-8080-exec-17] Loader - Result set row: 0
[DEBUG] 2019-11-27 17:46:37.323 [http-nio-8080-exec-17] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:46:37.329 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:46:37.329 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-27 17:46:37.329 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.329 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardName` : value = Raigeki
[DEBUG] 2019-11-27 17:46:37.329 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.329 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-11-27 17:46:37.329 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.329 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:46:37.330 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.330 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:46:37.330 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.330 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:46:37.330 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.330 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:46:37.330 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.330 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `price` : value = 1.0
[DEBUG] 2019-11-27 17:46:37.330 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.330 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `quantity` : value = 15
[DEBUG] 2019-11-27 17:46:37.330 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.330 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:46:37.330 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.330 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:46:37.330 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.330 [http-nio-8080-exec-17] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-27 17:46:37.344 [http-nio-8080-exec-17] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:46:37.344 [http-nio-8080-exec-17] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:46:37.346 [http-nio-8080-exec-17] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:46:37.346 [http-nio-8080-exec-17] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:46:37.347 [http-nio-8080-exec-17] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:46:37.347 [http-nio-8080-exec-17] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:46:37.347 [http-nio-8080-exec-17] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:46:37.347 [http-nio-8080-exec-17] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:46:37.347 [http-nio-8080-exec-17] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-27 17:46:37.347 [http-nio-8080-exec-17] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:46:37.348 [http-nio-8080-exec-17] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:46:37.349 [http-nio-8080-exec-17] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:46:37.350 [http-nio-8080-exec-17] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2019-11-27 17:46:37.350 [http-nio-8080-exec-17] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:46:37.353 [http-nio-8080-exec-17] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:46:37.354 [http-nio-8080-exec-17] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:46:37.354 [http-nio-8080-exec-17] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2019-11-27 17:46:37.354 [http-nio-8080-exec-17] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:46:37.355 [http-nio-8080-exec-17] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:46:37.355 [http-nio-8080-exec-17] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:46:37.355 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:46:37.355 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:46:37.355 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.355 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `password` : value = august2016
[DEBUG] 2019-11-27 17:46:37.355 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.355 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:46:37.355 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.355 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `userName` : value = benjamin
[DEBUG] 2019-11-27 17:46:37.355 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.355 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:46:37.355 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:46:37.355 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN026
[DEBUG] 2019-11-27 17:46:37.355 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.355 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardName` : value = Chaos Emperor Dragon Envoy of the End
[DEBUG] 2019-11-27 17:46:37.355 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.355 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:46:37.355 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.355 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-11-27 17:46:37.355 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.355 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `price` : value = 10.0
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN001
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `price` : value = 2.0
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `quantity` : value = 25
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN001
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardName` : value = Harpie's Feather Duster
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardRarity` : value = Prismatic
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardSet` : value = DDS
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:46:37.356 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.357 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `price` : value = 1.0
[DEBUG] 2019-11-27 17:46:37.357 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.357 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `quantity` : value = 75
[DEBUG] 2019-11-27 17:46:37.357 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.357 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:46:37.357 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.357 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:46:37.357 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.361 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:46:37.361 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:46:37.361 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-27 17:46:37.361 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.361 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardName` : value = Heavy Storm
[DEBUG] 2019-11-27 17:46:37.361 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.361 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-11-27 17:46:37.361 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.361 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:46:37.361 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.361 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:46:37.361 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.361 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:46:37.361 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.361 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:46:37.361 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.361 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `price` : value = 25.3
[DEBUG] 2019-11-27 17:46:37.362 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.362 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:46:37.362 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.362 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:46:37.362 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.362 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:46:37.362 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:37.362 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:46:37.362 [http-nio-8080-exec-17] CollectionLoadContext - 5 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:46:37.362 [http-nio-8080-exec-17] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:46:37.362 [http-nio-8080-exec-17] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:46:37.362 [http-nio-8080-exec-17] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:46:37.362 [http-nio-8080-exec-17] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:46:37.362 [http-nio-8080-exec-17] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:46:37.362 [http-nio-8080-exec-17] CollectionLoadContext - 5 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:46:37.362 [http-nio-8080-exec-17] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:46:37.362 [http-nio-8080-exec-17] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:46:37.362 [http-nio-8080-exec-17] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:46:37.362 [http-nio-8080-exec-17] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:46:37.363 [http-nio-8080-exec-17] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#5
[DEBUG] 2019-11-27 17:46:37.363 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:46:37.363 [http-nio-8080-exec-17] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:46:40.216 [http-nio-8080-exec-18] SQL - select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:46:40.219 [http-nio-8080-exec-18] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:46:40.219 [http-nio-8080-exec-18] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:46:40.221 [http-nio-8080-exec-18] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:46:40.221 [http-nio-8080-exec-18] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:46:40.221 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-27 17:46:40.221 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.221 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardName` : value = Raigeki
[DEBUG] 2019-11-27 17:46:40.221 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.221 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-11-27 17:46:40.221 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.221 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:46:40.221 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.221 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:46:40.221 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.221 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:46:40.221 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.221 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:46:40.221 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.221 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `price` : value = 1.0
[DEBUG] 2019-11-27 17:46:40.221 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.221 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `quantity` : value = 15
[DEBUG] 2019-11-27 17:46:40.221 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.223 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:46:40.223 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.223 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:46:40.223 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.223 [http-nio-8080-exec-18] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:46:40.223 [http-nio-8080-exec-18] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:46:40.223 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:46:40.223 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.223 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `password` : value = august2016
[DEBUG] 2019-11-27 17:46:40.223 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.223 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:46:40.223 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.223 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `userName` : value = benjamin
[DEBUG] 2019-11-27 17:46:40.223 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.223 [http-nio-8080-exec-18] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:46:40.223 [http-nio-8080-exec-18] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:46:40.223 [http-nio-8080-exec-18] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:46:40.224 [http-nio-8080-exec-18] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:46:40.224 [http-nio-8080-exec-18] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:46:40.224 [http-nio-8080-exec-18] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:46:40.224 [http-nio-8080-exec-18] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-27 17:46:40.231 [http-nio-8080-exec-18] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:46:40.231 [http-nio-8080-exec-18] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:46:40.234 [http-nio-8080-exec-18] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:46:40.234 [http-nio-8080-exec-18] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:46:40.234 [http-nio-8080-exec-18] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:46:40.234 [http-nio-8080-exec-18] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-27 17:46:40.235 [http-nio-8080-exec-18] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:46:40.235 [http-nio-8080-exec-18] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2019-11-27 17:46:40.235 [http-nio-8080-exec-18] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:46:40.235 [http-nio-8080-exec-18] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2019-11-27 17:46:40.236 [http-nio-8080-exec-18] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:46:40.236 [http-nio-8080-exec-18] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:46:40.236 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN026
[DEBUG] 2019-11-27 17:46:40.236 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.236 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardName` : value = Chaos Emperor Dragon Envoy of the End
[DEBUG] 2019-11-27 17:46:40.236 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.236 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:46:40.236 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.236 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-11-27 17:46:40.236 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.236 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:46:40.236 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.236 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:46:40.236 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.236 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:46:40.236 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.236 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `price` : value = 10.0
[DEBUG] 2019-11-27 17:46:40.236 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.236 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:46:40.236 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.236 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:46:40.236 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.237 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:46:40.237 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN001
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `price` : value = 2.0
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `quantity` : value = 25
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.238 [http-nio-8080-exec-18] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:46:40.239 [http-nio-8080-exec-18] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:46:40.239 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN001
[DEBUG] 2019-11-27 17:46:40.239 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.239 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardName` : value = Harpie's Feather Duster
[DEBUG] 2019-11-27 17:46:40.239 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.239 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardRarity` : value = Prismatic
[DEBUG] 2019-11-27 17:46:40.239 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.239 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardSet` : value = DDS
[DEBUG] 2019-11-27 17:46:40.239 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.239 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:46:40.239 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.239 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:46:40.239 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.239 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:46:40.239 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.239 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `price` : value = 1.0
[DEBUG] 2019-11-27 17:46:40.239 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.239 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `quantity` : value = 75
[DEBUG] 2019-11-27 17:46:40.239 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardName` : value = Heavy Storm
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `price` : value = 25.3
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:46:40.240 [http-nio-8080-exec-18] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:46:40.241 [http-nio-8080-exec-18] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:46:40.241 [http-nio-8080-exec-18] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:46:40.241 [http-nio-8080-exec-18] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:46:40.241 [http-nio-8080-exec-18] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:46:40.241 [http-nio-8080-exec-18] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:46:40.241 [http-nio-8080-exec-18] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:46:40.243 [http-nio-8080-exec-18] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:46:40.243 [http-nio-8080-exec-18] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:46:40.243 [http-nio-8080-exec-18] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:46:40.243 [http-nio-8080-exec-18] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:46:40.244 [http-nio-8080-exec-18] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:46:40.244 [http-nio-8080-exec-18] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:46:40.244 [http-nio-8080-exec-18] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:46:40.244 [http-nio-8080-exec-18] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:46:40.246 [http-nio-8080-exec-18] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:46:40.246 [http-nio-8080-exec-18] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:46:40.246 [http-nio-8080-exec-18] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:46:40.246 [http-nio-8080-exec-18] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:46:40.247 [http-nio-8080-exec-18] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:46:40.247 [http-nio-8080-exec-18] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:46:40.247 [http-nio-8080-exec-18] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:46:40.247 [http-nio-8080-exec-18] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:46:40.248 [http-nio-8080-exec-18] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:46:40.248 [http-nio-8080-exec-18] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:46:40.248 [http-nio-8080-exec-18] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:46:40.248 [http-nio-8080-exec-18] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:46:40.248 [http-nio-8080-exec-18] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:46:40.248 [http-nio-8080-exec-18] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:46:40.248 [http-nio-8080-exec-18] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:46:40.248 [http-nio-8080-exec-18] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:46:40.249 [http-nio-8080-exec-18] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:46:40.249 [http-nio-8080-exec-18] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:46:40.249 [http-nio-8080-exec-18] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:46:40.249 [http-nio-8080-exec-18] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:46:40.249 [http-nio-8080-exec-18] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:46:40.249 [http-nio-8080-exec-18] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:46:40.249 [http-nio-8080-exec-18] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCard#49
[DEBUG] 2019-11-27 17:46:40.249 [http-nio-8080-exec-18] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:47:03.267 [http-nio-8080-exec-21] SQL - select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:47:03.272 [http-nio-8080-exec-21] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:47:03.272 [http-nio-8080-exec-21] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:47:03.280 [http-nio-8080-exec-21] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:47:03.280 [http-nio-8080-exec-21] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:47:03.280 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-27 17:47:03.280 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.280 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardName` : value = Raigeki
[DEBUG] 2019-11-27 17:47:03.280 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.281 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-11-27 17:47:03.281 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.281 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:47:03.281 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.281 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:47:03.281 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.281 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:47:03.281 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.281 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:47:03.281 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.281 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `price` : value = 1.0
[DEBUG] 2019-11-27 17:47:03.281 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.283 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `quantity` : value = 15
[DEBUG] 2019-11-27 17:47:03.283 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.283 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:47:03.283 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.283 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:47:03.283 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.283 [http-nio-8080-exec-21] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:47:03.283 [http-nio-8080-exec-21] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:47:03.283 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:47:03.283 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.283 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `password` : value = august2016
[DEBUG] 2019-11-27 17:47:03.283 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.283 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:47:03.283 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.283 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `userName` : value = benjamin
[DEBUG] 2019-11-27 17:47:03.283 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.284 [http-nio-8080-exec-21] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:47:03.284 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:47:03.284 [http-nio-8080-exec-21] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:47:03.284 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:47:03.284 [http-nio-8080-exec-21] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:47:03.284 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:47:03.284 [http-nio-8080-exec-21] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-27 17:47:03.296 [http-nio-8080-exec-21] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:47:03.296 [http-nio-8080-exec-21] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:47:03.298 [http-nio-8080-exec-21] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:47:03.298 [http-nio-8080-exec-21] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:47:03.299 [http-nio-8080-exec-21] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:47:03.299 [http-nio-8080-exec-21] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-27 17:47:03.299 [http-nio-8080-exec-21] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:47:03.300 [http-nio-8080-exec-21] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2019-11-27 17:47:03.300 [http-nio-8080-exec-21] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:47:03.300 [http-nio-8080-exec-21] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2019-11-27 17:47:03.300 [http-nio-8080-exec-21] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:47:03.300 [http-nio-8080-exec-21] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:47:03.300 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN026
[DEBUG] 2019-11-27 17:47:03.300 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.300 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardName` : value = Chaos Emperor Dragon Envoy of the End
[DEBUG] 2019-11-27 17:47:03.300 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.300 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:47:03.300 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.300 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-11-27 17:47:03.300 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.300 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:47:03.300 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.300 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:47:03.300 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.301 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:47:03.301 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.301 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `price` : value = 10.0
[DEBUG] 2019-11-27 17:47:03.301 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.301 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:47:03.301 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.301 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:47:03.301 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.301 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:47:03.303 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.304 [http-nio-8080-exec-21] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:47:03.304 [http-nio-8080-exec-21] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:47:03.304 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN001
[DEBUG] 2019-11-27 17:47:03.304 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.304 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:47:03.304 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.304 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:47:03.304 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.304 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-11-27 17:47:03.304 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.304 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:47:03.304 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.304 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:47:03.304 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.306 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:47:03.306 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.306 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `price` : value = 2.0
[DEBUG] 2019-11-27 17:47:03.306 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.306 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `quantity` : value = 25
[DEBUG] 2019-11-27 17:47:03.306 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.306 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:47:03.306 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.306 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:47:03.306 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.306 [http-nio-8080-exec-21] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:47:03.306 [http-nio-8080-exec-21] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:47:03.306 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN001
[DEBUG] 2019-11-27 17:47:03.306 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.306 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardName` : value = Harpie's Feather Duster
[DEBUG] 2019-11-27 17:47:03.306 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.306 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardRarity` : value = Prismatic
[DEBUG] 2019-11-27 17:47:03.306 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.306 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardSet` : value = DDS
[DEBUG] 2019-11-27 17:47:03.306 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.306 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:47:03.306 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.306 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:47:03.306 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `price` : value = 1.0
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `quantity` : value = 75
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardName` : value = Heavy Storm
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.307 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `price` : value = 25.3
[DEBUG] 2019-11-27 17:47:03.308 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.308 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:47:03.308 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.308 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:47:03.308 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.308 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:47:03.308 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:03.308 [http-nio-8080-exec-21] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:47:03.308 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:47:03.308 [http-nio-8080-exec-21] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:47:03.308 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:47:03.308 [http-nio-8080-exec-21] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:47:03.308 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:47:03.309 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:47:03.309 [http-nio-8080-exec-21] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:47:03.312 [http-nio-8080-exec-21] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:47:03.312 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:47:03.312 [http-nio-8080-exec-21] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:47:03.312 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:47:03.312 [http-nio-8080-exec-21] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:47:03.312 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:47:03.312 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:47:03.312 [http-nio-8080-exec-21] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:47:03.316 [http-nio-8080-exec-21] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:47:03.316 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:47:03.316 [http-nio-8080-exec-21] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:47:03.316 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:47:03.316 [http-nio-8080-exec-21] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:47:03.317 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:47:03.317 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:47:03.317 [http-nio-8080-exec-21] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:47:03.320 [http-nio-8080-exec-21] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:47:03.320 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:47:03.320 [http-nio-8080-exec-21] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:47:03.321 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:47:03.321 [http-nio-8080-exec-21] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:47:03.321 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:47:03.321 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:47:03.321 [http-nio-8080-exec-21] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:47:03.324 [http-nio-8080-exec-21] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:47:03.324 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:47:03.324 [http-nio-8080-exec-21] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:47:03.324 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:47:03.324 [http-nio-8080-exec-21] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:47:03.324 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:47:03.324 [http-nio-8080-exec-21] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCard#49
[DEBUG] 2019-11-27 17:47:03.324 [http-nio-8080-exec-21] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:47:05.961 [http-nio-8080-exec-13] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where generatedAlias0.user=:param0
[DEBUG] 2019-11-27 17:47:05.962 [http-nio-8080-exec-13] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.user_id=?
[DEBUG] 2019-11-27 17:47:05.967 [http-nio-8080-exec-13] Loader - Result set row: 0
[DEBUG] 2019-11-27 17:47:05.967 [http-nio-8080-exec-13] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:47:05.975 [http-nio-8080-exec-13] Loader - Result set row: 1
[DEBUG] 2019-11-27 17:47:05.975 [http-nio-8080-exec-13] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:47:05.975 [http-nio-8080-exec-13] Loader - Result set row: 2
[DEBUG] 2019-11-27 17:47:05.975 [http-nio-8080-exec-13] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:47:05.978 [http-nio-8080-exec-13] Loader - Result set row: 3
[DEBUG] 2019-11-27 17:47:05.978 [http-nio-8080-exec-13] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:47:05.978 [http-nio-8080-exec-13] Loader - Result set row: 4
[DEBUG] 2019-11-27 17:47:05.978 [http-nio-8080-exec-13] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:47:05.985 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:47:05.986 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN026
[DEBUG] 2019-11-27 17:47:05.986 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:05.987 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardName` : value = Chaos Emperor Dragon Envoy of the End
[DEBUG] 2019-11-27 17:47:05.987 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:05.987 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:47:05.987 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:05.987 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-11-27 17:47:05.987 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:05.987 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:47:05.992 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:05.992 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:47:05.992 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:05.992 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:47:05.992 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:05.992 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `price` : value = 10.0
[DEBUG] 2019-11-27 17:47:05.992 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:05.992 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:47:05.992 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:05.992 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:47:05.992 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:05.992 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:47:05.992 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:05.992 [http-nio-8080-exec-13] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-27 17:47:06.003 [http-nio-8080-exec-13] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:47:06.003 [http-nio-8080-exec-13] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:47:06.003 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:47:06.003 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:47:06.003 [http-nio-8080-exec-13] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:47:06.004 [http-nio-8080-exec-13] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:47:06.004 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:47:06.004 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:47:06.004 [http-nio-8080-exec-13] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-27 17:47:06.004 [http-nio-8080-exec-13] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:47:06.004 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:47:06.004 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:47:06.007 [http-nio-8080-exec-13] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2019-11-27 17:47:06.007 [http-nio-8080-exec-13] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:47:06.007 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:47:06.007 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `password` : value = august2016
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `userName` : value = benjamin
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] CollectionLoadContext - 5 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] CollectionLoadContext - 5 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:47:06.008 [http-nio-8080-exec-13] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#5
[DEBUG] 2019-11-27 17:47:06.009 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:47:06.009 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:47:06.009 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN001
[DEBUG] 2019-11-27 17:47:06.009 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.009 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:47:06.009 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.009 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:47:06.009 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.009 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-11-27 17:47:06.009 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.009 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:47:06.009 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.009 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:47:06.009 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.009 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:47:06.009 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.009 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `price` : value = 2.0
[DEBUG] 2019-11-27 17:47:06.009 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.009 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `quantity` : value = 25
[DEBUG] 2019-11-27 17:47:06.009 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.009 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:47:06.009 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.017 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:47:06.018 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.018 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:47:06.019 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:47:06.019 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-27 17:47:06.019 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.019 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardName` : value = Raigeki
[DEBUG] 2019-11-27 17:47:06.019 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.019 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-11-27 17:47:06.019 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.019 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:47:06.019 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.019 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:47:06.019 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.019 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:47:06.019 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.019 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:47:06.019 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.019 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `price` : value = 1.0
[DEBUG] 2019-11-27 17:47:06.019 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.019 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `quantity` : value = 15
[DEBUG] 2019-11-27 17:47:06.019 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.019 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:47:06.019 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.019 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:47:06.019 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN001
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardName` : value = Harpie's Feather Duster
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardRarity` : value = Prismatic
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardSet` : value = DDS
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `price` : value = 1.0
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `quantity` : value = 75
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardName` : value = Heavy Storm
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:47:06.021 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.034 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:47:06.034 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.034 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `price` : value = 25.3
[DEBUG] 2019-11-27 17:47:06.034 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.034 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:47:06.034 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.034 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:47:06.034 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.034 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:47:06.034 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:06.035 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:47:06.035 [http-nio-8080-exec-13] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-27 17:47:08.421 [http-nio-8080-exec-16] SQL - select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-27 17:47:08.427 [http-nio-8080-exec-16] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:47:08.427 [http-nio-8080-exec-16] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-27 17:47:08.428 [http-nio-8080-exec-16] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:47:08.428 [http-nio-8080-exec-16] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:47:08.429 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-27 17:47:08.429 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.429 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardName` : value = Raigeki
[DEBUG] 2019-11-27 17:47:08.429 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.429 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-11-27 17:47:08.429 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `price` : value = 1.0
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `quantity` : value = 15
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#49]
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `password` : value = august2016
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `userName` : value = benjamin
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#5]
[DEBUG] 2019-11-27 17:47:08.430 [http-nio-8080-exec-16] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:47:08.435 [http-nio-8080-exec-16] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#49]
[DEBUG] 2019-11-27 17:47:08.435 [http-nio-8080-exec-16] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:47:08.435 [http-nio-8080-exec-16] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:47:08.436 [http-nio-8080-exec-16] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:47:08.436 [http-nio-8080-exec-16] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-27 17:47:08.440 [http-nio-8080-exec-16] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:47:08.440 [http-nio-8080-exec-16] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-27 17:47:08.442 [http-nio-8080-exec-16] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:47:08.442 [http-nio-8080-exec-16] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-27 17:47:08.443 [http-nio-8080-exec-16] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:47:08.443 [http-nio-8080-exec-16] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-27 17:47:08.443 [http-nio-8080-exec-16] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:47:08.443 [http-nio-8080-exec-16] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2019-11-27 17:47:08.443 [http-nio-8080-exec-16] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:47:08.443 [http-nio-8080-exec-16] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2019-11-27 17:47:08.443 [http-nio-8080-exec-16] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:47:08.444 [http-nio-8080-exec-16] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:47:08.444 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN026
[DEBUG] 2019-11-27 17:47:08.444 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.444 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardName` : value = Chaos Emperor Dragon Envoy of the End
[DEBUG] 2019-11-27 17:47:08.444 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.444 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:47:08.444 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.444 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-11-27 17:47:08.444 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.444 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:47:08.444 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.444 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:47:08.444 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.447 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `price` : value = 10.0
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#47]
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN001
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `price` : value = 2.0
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `quantity` : value = 25
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:47:08.448 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.449 [http-nio-8080-exec-16] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#48]
[DEBUG] 2019-11-27 17:47:08.449 [http-nio-8080-exec-16] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:47:08.449 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN001
[DEBUG] 2019-11-27 17:47:08.449 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.449 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardName` : value = Harpie's Feather Duster
[DEBUG] 2019-11-27 17:47:08.449 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.449 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardRarity` : value = Prismatic
[DEBUG] 2019-11-27 17:47:08.449 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.449 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardSet` : value = DDS
[DEBUG] 2019-11-27 17:47:08.449 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.449 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:47:08.449 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.449 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:47:08.449 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.449 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:47:08.449 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.449 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `price` : value = 1.0
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `quantity` : value = 75
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#50]
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardName` : value = Heavy Storm
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `price` : value = 25.3
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `status` : value = Not Sold
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Processing attribute `user` : value = 5
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#51]
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#5]
[DEBUG] 2019-11-27 17:47:08.450 [http-nio-8080-exec-16] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-27 17:47:08.451 [http-nio-8080-exec-16] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:47:08.451 [http-nio-8080-exec-16] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:47:08.453 [http-nio-8080-exec-16] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:47:08.453 [http-nio-8080-exec-16] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:47:08.455 [http-nio-8080-exec-16] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:47:08.455 [http-nio-8080-exec-16] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:47:08.455 [http-nio-8080-exec-16] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#51]
[DEBUG] 2019-11-27 17:47:08.455 [http-nio-8080-exec-16] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:47:08.455 [http-nio-8080-exec-16] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:47:08.455 [http-nio-8080-exec-16] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:47:08.455 [http-nio-8080-exec-16] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:47:08.455 [http-nio-8080-exec-16] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:47:08.456 [http-nio-8080-exec-16] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:47:08.456 [http-nio-8080-exec-16] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:47:08.456 [http-nio-8080-exec-16] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#50]
[DEBUG] 2019-11-27 17:47:08.456 [http-nio-8080-exec-16] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:47:08.456 [http-nio-8080-exec-16] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:47:08.456 [http-nio-8080-exec-16] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:47:08.456 [http-nio-8080-exec-16] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:47:08.456 [http-nio-8080-exec-16] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:47:08.457 [http-nio-8080-exec-16] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:47:08.457 [http-nio-8080-exec-16] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:47:08.457 [http-nio-8080-exec-16] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#48]
[DEBUG] 2019-11-27 17:47:08.457 [http-nio-8080-exec-16] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:47:08.457 [http-nio-8080-exec-16] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:47:08.457 [http-nio-8080-exec-16] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:47:08.457 [http-nio-8080-exec-16] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:47:08.457 [http-nio-8080-exec-16] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-27 17:47:08.458 [http-nio-8080-exec-16] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:47:08.458 [http-nio-8080-exec-16] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:47:08.458 [http-nio-8080-exec-16] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#47]
[DEBUG] 2019-11-27 17:47:08.458 [http-nio-8080-exec-16] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-27 17:47:08.458 [http-nio-8080-exec-16] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-27 17:47:08.458 [http-nio-8080-exec-16] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-27 17:47:08.458 [http-nio-8080-exec-16] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCard#49
[DEBUG] 2019-11-27 17:47:08.458 [http-nio-8080-exec-16] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
