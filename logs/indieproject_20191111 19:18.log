[DEBUG] 2019-11-11 19:13:50.608 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-11-11 19:13:50.617 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-11-11 19:13:50.624 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-11-11 19:13:51.267 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-11-11 19:13:51.275 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-11-11 19:13:52.801 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-11-11 19:13:52.803 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-11-11 19:13:52.838 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-11-11 19:13:53.752 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-11-11 19:13:53.789 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-11-11 19:13:53.790 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-11-11 19:13:53.825 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-11-11 19:13:53.891 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@acdcf71
[DEBUG] 2019-11-11 19:13:53.891 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@acdcf71
[DEBUG] 2019-11-11 19:13:53.891 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@acdcf71
[DEBUG] 2019-11-11 19:13:53.892 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6bda1d19
[DEBUG] 2019-11-11 19:13:53.895 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@37b57b54
[DEBUG] 2019-11-11 19:13:53.895 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@7be71476
[DEBUG] 2019-11-11 19:13:53.897 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3a01773b
[DEBUG] 2019-11-11 19:13:53.897 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3a01773b
[DEBUG] 2019-11-11 19:13:53.899 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3a01773b
[DEBUG] 2019-11-11 19:13:53.900 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@472698d
[DEBUG] 2019-11-11 19:13:53.901 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@472698d
[DEBUG] 2019-11-11 19:13:53.901 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@472698d
[DEBUG] 2019-11-11 19:13:53.902 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@cf67838
[DEBUG] 2019-11-11 19:13:53.906 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@cf67838
[DEBUG] 2019-11-11 19:13:53.906 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@cf67838
[DEBUG] 2019-11-11 19:13:53.907 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@499ef98e
[DEBUG] 2019-11-11 19:13:53.907 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@499ef98e
[DEBUG] 2019-11-11 19:13:53.907 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@499ef98e
[DEBUG] 2019-11-11 19:13:53.908 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@639aba11
[DEBUG] 2019-11-11 19:13:53.914 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@639aba11
[DEBUG] 2019-11-11 19:13:53.914 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@639aba11
[DEBUG] 2019-11-11 19:13:53.915 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@34f392be
[DEBUG] 2019-11-11 19:13:53.915 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@34f392be
[DEBUG] 2019-11-11 19:13:53.915 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@34f392be
[DEBUG] 2019-11-11 19:13:53.916 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@523d6bdb
[DEBUG] 2019-11-11 19:13:53.916 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@523d6bdb
[DEBUG] 2019-11-11 19:13:53.916 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@523d6bdb
[DEBUG] 2019-11-11 19:13:53.921 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2cfa2c4f
[DEBUG] 2019-11-11 19:13:53.921 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2cfa2c4f
[DEBUG] 2019-11-11 19:13:53.984 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5e2a3040
[DEBUG] 2019-11-11 19:13:53.984 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5e2a3040
[DEBUG] 2019-11-11 19:13:53.985 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5bb51241
[DEBUG] 2019-11-11 19:13:53.985 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5bb51241
[DEBUG] 2019-11-11 19:13:53.986 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@70f822e
[DEBUG] 2019-11-11 19:13:53.987 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@17a703f5
[DEBUG] 2019-11-11 19:13:53.988 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@65f2f9b0
[DEBUG] 2019-11-11 19:13:53.988 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@65f2f9b0
[DEBUG] 2019-11-11 19:13:53.989 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@38fc5554
[DEBUG] 2019-11-11 19:13:53.989 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@38fc5554
[DEBUG] 2019-11-11 19:13:53.996 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@e9dc4d0
[DEBUG] 2019-11-11 19:13:53.997 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@e9dc4d0
[DEBUG] 2019-11-11 19:13:53.999 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2184b4f4
[DEBUG] 2019-11-11 19:13:53.999 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2184b4f4
[DEBUG] 2019-11-11 19:13:54.000 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@35764bef
[DEBUG] 2019-11-11 19:13:54.000 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@35764bef
[DEBUG] 2019-11-11 19:13:54.002 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@778d82e9
[DEBUG] 2019-11-11 19:13:54.002 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@778d82e9
[DEBUG] 2019-11-11 19:13:54.004 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@10cd6753
[DEBUG] 2019-11-11 19:13:54.004 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@10cd6753
[DEBUG] 2019-11-11 19:13:54.005 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@260ff5b7
[DEBUG] 2019-11-11 19:13:54.005 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@260ff5b7
[DEBUG] 2019-11-11 19:13:54.007 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@58860997
[DEBUG] 2019-11-11 19:13:54.007 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@58860997
[DEBUG] 2019-11-11 19:13:54.009 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@161f6623
[DEBUG] 2019-11-11 19:13:54.010 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@161f6623
[DEBUG] 2019-11-11 19:13:54.011 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2f61d591
[DEBUG] 2019-11-11 19:13:54.011 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2f61d591
[DEBUG] 2019-11-11 19:13:54.012 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@84487f4
[DEBUG] 2019-11-11 19:13:54.012 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@84487f4
[DEBUG] 2019-11-11 19:13:54.012 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@84487f4
[DEBUG] 2019-11-11 19:13:54.014 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1290c49
[DEBUG] 2019-11-11 19:13:54.015 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3419e23b
[DEBUG] 2019-11-11 19:13:54.015 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3419e23b
[DEBUG] 2019-11-11 19:13:54.015 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3419e23b
[DEBUG] 2019-11-11 19:13:54.017 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@29eda4f8
[DEBUG] 2019-11-11 19:13:54.017 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@57402ba1
[DEBUG] 2019-11-11 19:13:54.018 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@57402ba1
[DEBUG] 2019-11-11 19:13:54.019 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@62573c86
[DEBUG] 2019-11-11 19:13:54.019 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@62573c86
[DEBUG] 2019-11-11 19:13:54.020 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3936df72
[DEBUG] 2019-11-11 19:13:54.020 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3936df72
[DEBUG] 2019-11-11 19:13:54.021 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3ce53f6a
[DEBUG] 2019-11-11 19:13:54.021 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3ce53f6a
[DEBUG] 2019-11-11 19:13:54.022 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@60859f5a
[DEBUG] 2019-11-11 19:13:54.023 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@60859f5a
[DEBUG] 2019-11-11 19:13:54.023 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@8f2098e
[DEBUG] 2019-11-11 19:13:54.030 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@481e91b6
[DEBUG] 2019-11-11 19:13:54.030 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@481e91b6
[DEBUG] 2019-11-11 19:13:54.030 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@481e91b6
[DEBUG] 2019-11-11 19:13:54.031 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@383864d5
[DEBUG] 2019-11-11 19:13:54.031 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@383864d5
[DEBUG] 2019-11-11 19:13:54.031 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@383864d5
[DEBUG] 2019-11-11 19:13:54.032 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@65c86db8
[DEBUG] 2019-11-11 19:13:54.032 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7ca8d498
[DEBUG] 2019-11-11 19:13:54.033 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@15dc339f
[DEBUG] 2019-11-11 19:13:54.033 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@15dc339f
[DEBUG] 2019-11-11 19:13:54.034 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@15dc339f
[DEBUG] 2019-11-11 19:13:54.034 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@76889e60
[DEBUG] 2019-11-11 19:13:54.035 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@76889e60
[DEBUG] 2019-11-11 19:13:54.035 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@76889e60
[DEBUG] 2019-11-11 19:13:54.039 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@64f1fd08
[DEBUG] 2019-11-11 19:13:54.039 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@55e2fe3c
[DEBUG] 2019-11-11 19:13:54.045 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1cec219f
[DEBUG] 2019-11-11 19:13:54.045 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1cec219f
[DEBUG] 2019-11-11 19:13:54.046 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3e7c4815
[DEBUG] 2019-11-11 19:13:54.047 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@70c0a3d5
[DEBUG] 2019-11-11 19:13:54.047 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@70c0a3d5
[DEBUG] 2019-11-11 19:13:54.048 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@407873d3
[DEBUG] 2019-11-11 19:13:54.048 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@407873d3
[DEBUG] 2019-11-11 19:13:54.048 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4743a322
[DEBUG] 2019-11-11 19:13:54.050 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@13fed1ec
[DEBUG] 2019-11-11 19:13:54.051 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4cdb8504
[DEBUG] 2019-11-11 19:13:54.057 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6ff6efdc
[DEBUG] 2019-11-11 19:13:54.057 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6ff6efdc
[DEBUG] 2019-11-11 19:13:54.057 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2b037cfc
[DEBUG] 2019-11-11 19:13:54.061 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@44924587
[DEBUG] 2019-11-11 19:13:54.061 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@18460128
[DEBUG] 2019-11-11 19:13:54.062 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@74d3b638
[DEBUG] 2019-11-11 19:13:54.062 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4487c0c2
[DEBUG] 2019-11-11 19:13:54.062 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@126f1ba8
[DEBUG] 2019-11-11 19:13:54.062 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3a08078c
[DEBUG] 2019-11-11 19:13:54.062 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53830483
[DEBUG] 2019-11-11 19:13:54.243 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-11-11 19:13:54.244 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-11-11 19:13:54.245 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-11-11 19:13:54.245 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-11-11 19:13:54.250 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-11-11 19:13:54.251 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-11-11 19:13:54.252 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-11-11 19:13:54.279 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-11-11 19:13:54.279 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-11-11 19:13:54.286 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-11-11 19:13:54.286 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-11-11 19:13:54.286 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-11-11 19:13:54.287 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-11-11 19:13:54.288 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-11-11 19:13:54.301 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_yugioh_card_db
[INFO ] 2019-11-11 19:13:54.303 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-11-11 19:13:54.304 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-11-11 19:13:54.563 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-11-11 19:13:54.815 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-11-11 19:13:54.828 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-11-11 19:13:54.828 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-11-11 19:13:54.895 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-11-11 19:13:54.924 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-11-11 19:13:54.966 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-11-11 19:13:55.042 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-11-11 19:13:55.045 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@559cedee] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@18371d89]
[DEBUG] 2019-11-11 19:13:55.293 [main] AnnotationBinder - Binding entity from annotated class: edu.yang.entity.YugiohCard
[DEBUG] 2019-11-11 19:13:55.483 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-11-11 19:13:55.490 [main] EntityBinder - Import with entity name YugiohCard
[DEBUG] 2019-11-11 19:13:55.494 [main] EntityBinder - Bind entity edu.yang.entity.YugiohCard on table yugioh_card
[DEBUG] 2019-11-11 19:13:55.554 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.558 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-11-11 19:13:55.559 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:id]
[DEBUG] 2019-11-11 19:13:55.561 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-11-11 19:13:55.562 [main] PropertyBinder - Building property id
[DEBUG] 2019-11-11 19:13:55.568 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-11-11 19:13:55.569 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_index, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.570 [main] PropertyBinder - MetadataSourceProcessor property cardIndex with lazy=false
[DEBUG] 2019-11-11 19:13:55.570 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardIndex]
[DEBUG] 2019-11-11 19:13:55.570 [main] SimpleValueBinder - building SimpleValue for cardIndex
[DEBUG] 2019-11-11 19:13:55.570 [main] PropertyBinder - Building property cardIndex
[DEBUG] 2019-11-11 19:13:55.570 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.570 [main] PropertyBinder - MetadataSourceProcessor property cardName with lazy=false
[DEBUG] 2019-11-11 19:13:55.571 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardName]
[DEBUG] 2019-11-11 19:13:55.571 [main] SimpleValueBinder - building SimpleValue for cardName
[DEBUG] 2019-11-11 19:13:55.571 [main] PropertyBinder - Building property cardName
[DEBUG] 2019-11-11 19:13:55.571 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_rarity, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.602 [main] PropertyBinder - MetadataSourceProcessor property cardRarity with lazy=false
[DEBUG] 2019-11-11 19:13:55.603 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardRarity]
[DEBUG] 2019-11-11 19:13:55.603 [main] SimpleValueBinder - building SimpleValue for cardRarity
[DEBUG] 2019-11-11 19:13:55.603 [main] PropertyBinder - Building property cardRarity
[DEBUG] 2019-11-11 19:13:55.603 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_set, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.605 [main] PropertyBinder - MetadataSourceProcessor property cardSet with lazy=false
[DEBUG] 2019-11-11 19:13:55.605 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardSet]
[DEBUG] 2019-11-11 19:13:55.605 [main] SimpleValueBinder - building SimpleValue for cardSet
[DEBUG] 2019-11-11 19:13:55.605 [main] PropertyBinder - Building property cardSet
[DEBUG] 2019-11-11 19:13:55.606 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_type, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.606 [main] PropertyBinder - MetadataSourceProcessor property cardType with lazy=false
[DEBUG] 2019-11-11 19:13:55.606 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardType]
[DEBUG] 2019-11-11 19:13:55.606 [main] SimpleValueBinder - building SimpleValue for cardType
[DEBUG] 2019-11-11 19:13:55.606 [main] PropertyBinder - Building property cardType
[DEBUG] 2019-11-11 19:13:55.608 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='yugiohCard'}
[DEBUG] 2019-11-11 19:13:55.609 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=entries, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.612 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.626 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.627 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=entries_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.628 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='entries_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-11-11 19:13:55.629 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='yugiohCard'}
[DEBUG] 2019-11-11 19:13:55.630 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='yugiohCard'}
[DEBUG] 2019-11-11 19:13:55.630 [main] CollectionBinder - Collection role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:13:55.634 [main] PropertyBinder - Building property entries
[DEBUG] 2019-11-11 19:13:55.635 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=image, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.637 [main] PropertyBinder - MetadataSourceProcessor property image with lazy=false
[DEBUG] 2019-11-11 19:13:55.638 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:image]
[DEBUG] 2019-11-11 19:13:55.641 [main] SimpleValueBinder - building SimpleValue for image
[DEBUG] 2019-11-11 19:13:55.642 [main] PropertyBinder - Building property image
[DEBUG] 2019-11-11 19:13:55.642 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.643 [main] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2019-11-11 19:13:55.644 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:price]
[DEBUG] 2019-11-11 19:13:55.644 [main] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2019-11-11 19:13:55.644 [main] PropertyBinder - Building property price
[DEBUG] 2019-11-11 19:13:55.644 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=qty, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.644 [main] PropertyBinder - MetadataSourceProcessor property quantity with lazy=false
[DEBUG] 2019-11-11 19:13:55.645 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:quantity]
[DEBUG] 2019-11-11 19:13:55.645 [main] SimpleValueBinder - building SimpleValue for quantity
[DEBUG] 2019-11-11 19:13:55.645 [main] PropertyBinder - Building property quantity
[DEBUG] 2019-11-11 19:13:55.645 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=status, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.647 [main] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[DEBUG] 2019-11-11 19:13:55.647 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:status]
[DEBUG] 2019-11-11 19:13:55.647 [main] SimpleValueBinder - building SimpleValue for status
[DEBUG] 2019-11-11 19:13:55.648 [main] PropertyBinder - Building property status
[DEBUG] 2019-11-11 19:13:55.652 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-11-11 19:13:55.652 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.660 [main] PropertyBinder - Building property user
[DEBUG] 2019-11-11 19:13:55.664 [main] AnnotationBinder - Binding entity from annotated class: edu.yang.entity.User
[DEBUG] 2019-11-11 19:13:55.665 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-11-11 19:13:55.665 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-11-11 19:13:55.665 [main] EntityBinder - Bind entity edu.yang.entity.User on table user
[DEBUG] 2019-11-11 19:13:55.667 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.667 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-11-11 19:13:55.667 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:id]
[DEBUG] 2019-11-11 19:13:55.671 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-11-11 19:13:55.671 [main] PropertyBinder - Building property id
[DEBUG] 2019-11-11 19:13:55.672 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-11-11 19:13:55.672 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-11-11 19:13:55.672 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=cards, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.672 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.673 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.673 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=cards_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.673 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='cards_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-11-11 19:13:55.673 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-11-11 19:13:55.673 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-11-11 19:13:55.673 [main] CollectionBinder - Collection role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:13:55.673 [main] PropertyBinder - Building property cards
[DEBUG] 2019-11-11 19:13:55.673 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_password, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.673 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2019-11-11 19:13:55.674 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:password]
[DEBUG] 2019-11-11 19:13:55.674 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2019-11-11 19:13:55.674 [main] PropertyBinder - Building property password
[DEBUG] 2019-11-11 19:13:55.674 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.682 [main] PropertyBinder - MetadataSourceProcessor property role with lazy=false
[DEBUG] 2019-11-11 19:13:55.682 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:role]
[DEBUG] 2019-11-11 19:13:55.682 [main] SimpleValueBinder - building SimpleValue for role
[DEBUG] 2019-11-11 19:13:55.682 [main] PropertyBinder - Building property role
[DEBUG] 2019-11-11 19:13:55.682 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.682 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-11-11 19:13:55.682 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:userName]
[DEBUG] 2019-11-11 19:13:55.682 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-11-11 19:13:55.682 [main] PropertyBinder - Building property userName
[DEBUG] 2019-11-11 19:13:55.683 [main] AnnotationBinder - Binding entity from annotated class: edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-11-11 19:13:55.683 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-11-11 19:13:55.683 [main] EntityBinder - Import with entity name YugiohCardHistory
[DEBUG] 2019-11-11 19:13:55.683 [main] EntityBinder - Bind entity edu.yang.entity.YugiohCardHistory on table yugioh_card_history
[DEBUG] 2019-11-11 19:13:55.686 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.686 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-11-11 19:13:55.686 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCardHistory:id]
[DEBUG] 2019-11-11 19:13:55.686 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-11-11 19:13:55.686 [main] PropertyBinder - Building property id
[DEBUG] 2019-11-11 19:13:55.699 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-11-11 19:13:55.700 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.700 [main] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2019-11-11 19:13:55.700 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCardHistory:price]
[DEBUG] 2019-11-11 19:13:55.700 [main] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2019-11-11 19:13:55.700 [main] PropertyBinder - Building property price
[DEBUG] 2019-11-11 19:13:55.701 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=update_date, insertable=true, updatable=false, unique=false}
[DEBUG] 2019-11-11 19:13:55.701 [main] PropertyBinder - MetadataSourceProcessor property ts with lazy=false
[DEBUG] 2019-11-11 19:13:55.701 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCardHistory:ts]
[DEBUG] 2019-11-11 19:13:55.701 [main] SimpleValueBinder - building SimpleValue for ts
[DEBUG] 2019-11-11 19:13:55.701 [main] PropertyBinder - Building property ts
[DEBUG] 2019-11-11 19:13:55.786 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-11-11 19:13:55.789 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=yugiohCard, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:13:55.790 [main] PropertyBinder - Building property yugiohCard
[DEBUG] 2019-11-11 19:13:55.865 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-11-11 19:13:55.865 [main] SimpleValueBinder - Starting fillSimpleValue for cardIndex
[DEBUG] 2019-11-11 19:13:55.865 [main] SimpleValueBinder - Starting fillSimpleValue for cardName
[DEBUG] 2019-11-11 19:13:55.865 [main] SimpleValueBinder - Starting fillSimpleValue for cardRarity
[DEBUG] 2019-11-11 19:13:55.865 [main] SimpleValueBinder - Starting fillSimpleValue for cardSet
[DEBUG] 2019-11-11 19:13:55.865 [main] SimpleValueBinder - Starting fillSimpleValue for cardType
[DEBUG] 2019-11-11 19:13:55.865 [main] SimpleValueBinder - Starting fillSimpleValue for image
[DEBUG] 2019-11-11 19:13:55.865 [main] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2019-11-11 19:13:55.865 [main] SimpleValueBinder - Starting fillSimpleValue for quantity
[DEBUG] 2019-11-11 19:13:55.865 [main] SimpleValueBinder - Starting fillSimpleValue for status
[DEBUG] 2019-11-11 19:13:55.865 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-11-11 19:13:55.865 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2019-11-11 19:13:55.865 [main] SimpleValueBinder - Starting fillSimpleValue for role
[DEBUG] 2019-11-11 19:13:55.865 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-11-11 19:13:55.865 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-11-11 19:13:55.866 [main] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2019-11-11 19:13:55.866 [main] SimpleValueBinder - Starting fillSimpleValue for ts
[DEBUG] 2019-11-11 19:13:55.870 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [yugioh_card]
[DEBUG] 2019-11-11 19:13:55.870 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2019-11-11 19:13:55.870 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [yugioh_card_history]
[DEBUG] 2019-11-11 19:13:55.870 [main] CollectionSecondPass - Second pass for collection: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:13:55.871 [main] CollectionBinder - Binding a OneToMany: edu.yang.entity.YugiohCard.entries through a foreign key
[DEBUG] 2019-11-11 19:13:55.873 [main] CollectionBinder - Mapping collection: edu.yang.entity.YugiohCard.entries -> yugioh_card_history
[DEBUG] 2019-11-11 19:13:55.901 [main] TableBinder - Retrieving property edu.yang.entity.YugiohCardHistory.yugiohCard
[DEBUG] 2019-11-11 19:13:55.901 [main] CollectionSecondPass - Mapped collection key: yugiohCard_id, one-to-many: edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-11-11 19:13:55.901 [main] CollectionSecondPass - Second pass for collection: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:13:55.901 [main] CollectionBinder - Binding a OneToMany: edu.yang.entity.User.cards through a foreign key
[DEBUG] 2019-11-11 19:13:55.901 [main] CollectionBinder - Mapping collection: edu.yang.entity.User.cards -> yugioh_card
[DEBUG] 2019-11-11 19:13:55.901 [main] TableBinder - Retrieving property edu.yang.entity.YugiohCard.user
[DEBUG] 2019-11-11 19:13:55.901 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: edu.yang.entity.YugiohCard
[DEBUG] 2019-11-11 19:13:55.901 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.User
[DEBUG] 2019-11-11 19:13:55.903 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.YugiohCard
[DEBUG] 2019-11-11 19:13:55.904 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.User
[DEBUG] 2019-11-11 19:13:55.904 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.YugiohCard
[DEBUG] 2019-11-11 19:13:55.970 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-11-11 19:13:55.971 [main] Settings - SessionFactory name : null
[DEBUG] 2019-11-11 19:13:55.971 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-11-11 19:13:55.971 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-11-11 19:13:55.971 [main] Settings - Statistics: disabled
[DEBUG] 2019-11-11 19:13:55.971 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-11-11 19:13:55.971 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-11-11 19:13:55.971 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-11-11 19:13:55.971 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-11-11 19:13:55.972 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-11-11 19:13:55.972 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-11-11 19:13:55.972 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-11-11 19:13:55.972 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-11-11 19:13:55.972 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-11-11 19:13:55.972 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-11-11 19:13:55.972 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-11-11 19:13:55.972 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-11-11 19:13:55.972 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-11-11 19:13:55.972 [main] Settings - Named query checking : enabled
[DEBUG] 2019-11-11 19:13:55.972 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-11-11 19:13:55.973 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-11-11 19:13:55.973 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-11-11 19:13:55.973 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-11-11 19:13:55.973 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-11-11 19:13:55.973 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-11-11 19:13:55.973 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-11-11 19:13:55.973 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-11-11 19:13:55.973 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-11-11 19:13:55.973 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-11-11 19:13:55.973 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-11-11 19:13:55.973 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-11-11 19:13:55.973 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-11-11 19:13:55.973 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-11-11 19:13:55.973 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-11-11 19:13:55.973 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-11-11 19:13:55.973 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-11-11 19:13:55.973 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-11-11 19:13:55.973 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-11-11 19:13:55.974 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-11-11 19:13:56.090 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-11-11 19:13:56.165 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-11-11 19:13:56.165 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/IdeaProjects/indieproject/target/test-classes:/home/student/IdeaProjects/indieproject/target/classes:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/home/student/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/home/student/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/student/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/home/student/.m2/repository/com/sun/activation/jakarta.activation/1.2.1/jakarta.activation-1.2.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/home/student/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/home/student/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/home/student/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:, java.vm.vendor=Ubuntu, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=/home/student/IdeaProjects/indieproject/target/surefire/surefirebooter7885421112606921206.jar /home/student/IdeaProjects/indieproject/target/surefire/surefire11883928592956035717tmp /home/student/IdeaProjects/indieproject/target/surefire/surefire_012776152841030789058tmp, jdk.debug=release, surefire.test.class.path=/home/student/IdeaProjects/indieproject/target/test-classes:/home/student/IdeaProjects/indieproject/target/classes:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/home/student/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/home/student/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/student/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/home/student/.m2/repository/com/sun/activation/jakarta.activation/1.2.1/jakarta.activation-1.2.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.29.1/jersey-container-servlet-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.29.1/jersey-container-servlet-core-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-server/2.29.1/jersey-server-2.29.1.jar:/home/student/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.29.1/jersey-media-jaxb-2.29.1.jar:/home/student/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/home/student/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.2/jakarta.xml.bind-api-2.3.2.jar:/home/student/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, basedir=/home/student/IdeaProjects/indieproject, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, surefire.real.class.path=/home/student/IdeaProjects/indieproject/target/surefire/surefirebooter7885421112606921206.jar, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.0.0-32-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test_yugioh_card_db, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, localRepository=/home/student/.m2/repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.4, user.dir=/home/student/IdeaProjects/indieproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@ea04cab, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, idea.version2019.1.4=true, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/test_yugioh_card_db, java.class.version=55.0}
[DEBUG] 2019-11-11 19:13:56.210 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-11-11 19:13:56.210 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-11-11 19:13:56.211 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-11-11 19:13:56.211 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@559cedee] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7fda2001]
[DEBUG] 2019-11-11 19:13:57.130 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.User] is safe
[DEBUG] 2019-11-11 19:13:57.131 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.User
[DEBUG] 2019-11-11 19:13:57.196 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.User] is safe
[DEBUG] 2019-11-11 19:13:57.197 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.User
[DEBUG] 2019-11-11 19:13:58.261 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCard] is safe
[DEBUG] 2019-11-11 19:13:58.261 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCard
[DEBUG] 2019-11-11 19:13:58.262 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCard] is safe
[DEBUG] 2019-11-11 19:13:58.262 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCard
[DEBUG] 2019-11-11 19:13:58.339 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCardHistory] is safe
[DEBUG] 2019-11-11 19:13:58.339 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-11-11 19:13:58.340 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCardHistory] is safe
[DEBUG] 2019-11-11 19:13:58.340 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-11-11 19:13:58.387 [main] AbstractCollectionPersister - Static SQL for collection: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:13:58.389 [main] AbstractCollectionPersister -  Row insert: update yugioh_card set user_id=? where id=?
[DEBUG] 2019-11-11 19:13:58.389 [main] AbstractCollectionPersister -  Row update: update yugioh_card set  where id=?
[DEBUG] 2019-11-11 19:13:58.389 [main] AbstractCollectionPersister -  Row delete: update yugioh_card set user_id=null where user_id=? and id=?
[DEBUG] 2019-11-11 19:13:58.389 [main] AbstractCollectionPersister -  One-shot delete: update yugioh_card set user_id=null where user_id=?
[DEBUG] 2019-11-11 19:13:58.390 [main] AbstractCollectionPersister - Static SQL for collection: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:13:58.390 [main] AbstractCollectionPersister -  Row insert: update yugioh_card_history set yugiohCard_id=? where id=?
[DEBUG] 2019-11-11 19:13:58.390 [main] AbstractCollectionPersister -  Row update: update yugioh_card_history set  where id=?
[DEBUG] 2019-11-11 19:13:58.390 [main] AbstractCollectionPersister -  Row delete: update yugioh_card_history set yugiohCard_id=null where yugiohCard_id=? and id=?
[DEBUG] 2019-11-11 19:13:58.391 [main] AbstractCollectionPersister -  One-shot delete: update yugioh_card_history set yugiohCard_id=null where yugiohCard_id=?
[DEBUG] 2019-11-11 19:13:58.394 [main] AbstractEntityPersister - Static SQL for entity: edu.yang.entity.User
[DEBUG] 2019-11-11 19:13:58.394 [main] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2019-11-11 19:13:58.394 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.user_password as user_pas2_0_, user_.user_role as user_rol3_0_, user_.user_name as user_nam4_0_ from user user_ where user_.id=?
[DEBUG] 2019-11-11 19:13:58.394 [main] AbstractEntityPersister -  Insert 0: insert into user (user_password, user_role, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2019-11-11 19:13:58.397 [main] AbstractEntityPersister -  Update 0: update user set user_password=?, user_role=?, user_name=? where id=?
[DEBUG] 2019-11-11 19:13:58.400 [main] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2019-11-11 19:13:58.400 [main] AbstractEntityPersister -  Identity insert: insert into user (user_password, user_role, user_name) values (?, ?, ?)
[DEBUG] 2019-11-11 19:13:58.427 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f048c86]
[DEBUG] 2019-11-11 19:13:58.429 [main] MetamodelGraphWalker - Visiting attribute path : cards
[DEBUG] 2019-11-11 19:13:58.435 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@403364e9]
[DEBUG] 2019-11-11 19:13:58.436 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16e1219f]
[DEBUG] 2019-11-11 19:13:58.443 [main] MetamodelGraphWalker - Visiting attribute path : cards.cardIndex
[DEBUG] 2019-11-11 19:13:58.443 [main] MetamodelGraphWalker - Visiting attribute path : cards.cardName
[DEBUG] 2019-11-11 19:13:58.443 [main] MetamodelGraphWalker - Visiting attribute path : cards.cardRarity
[DEBUG] 2019-11-11 19:13:58.443 [main] MetamodelGraphWalker - Visiting attribute path : cards.cardSet
[DEBUG] 2019-11-11 19:13:58.443 [main] MetamodelGraphWalker - Visiting attribute path : cards.cardType
[DEBUG] 2019-11-11 19:13:58.443 [main] MetamodelGraphWalker - Visiting attribute path : cards.entries
[DEBUG] 2019-11-11 19:13:58.443 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14e750c5]
[DEBUG] 2019-11-11 19:13:58.443 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@242ff747]
[DEBUG] 2019-11-11 19:13:58.443 [main] MetamodelGraphWalker - Visiting attribute path : cards.entries.price
[DEBUG] 2019-11-11 19:13:58.444 [main] MetamodelGraphWalker - Visiting attribute path : cards.entries.ts
[DEBUG] 2019-11-11 19:13:58.445 [main] MetamodelGraphWalker - Visiting attribute path : cards.entries.yugiohCard
[DEBUG] 2019-11-11 19:13:58.445 [main] MetamodelGraphWalker - Property path deemed to be circular : cards.entries.yugiohCard
[DEBUG] 2019-11-11 19:13:58.445 [main] MetamodelGraphWalker - Visiting attribute path : cards.image
[DEBUG] 2019-11-11 19:13:58.446 [main] MetamodelGraphWalker - Visiting attribute path : cards.price
[DEBUG] 2019-11-11 19:13:58.446 [main] MetamodelGraphWalker - Visiting attribute path : cards.quantity
[DEBUG] 2019-11-11 19:13:58.446 [main] MetamodelGraphWalker - Visiting attribute path : cards.status
[DEBUG] 2019-11-11 19:13:58.446 [main] MetamodelGraphWalker - Visiting attribute path : cards.user
[DEBUG] 2019-11-11 19:13:58.446 [main] MetamodelGraphWalker - Property path deemed to be circular : cards.user
[DEBUG] 2019-11-11 19:13:58.446 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-11-11 19:13:58.446 [main] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2019-11-11 19:13:58.446 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-11-11 19:13:58.446 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-11 19:13:58.461 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-11 19:13:58.477 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:0>, path=edu.yang.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.User.cards, querySpaceUid=<gen:1>, path=edu.yang.entity.User.cards)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:2>, path=edu.yang.entity.User.cards.<elements>)
                - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:3>, path=edu.yang.entity.User.cards.<elements>.entries)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:4>, path=edu.yang.entity.User.cards.<elements>.entries.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(cards)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.User.cards)
                - SQL table alias mapping - cards1_
                - alias suffix - 1_
                - suffixed key columns - {user_id11_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCard)
                      - SQL table alias mapping - cards1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(entries)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=edu.yang.entity.YugiohCard.entries)
                            - SQL table alias mapping - entries2_
                            - alias suffix - 3_
                            - suffixed key columns - {yugiohCa4_2_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_2_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=edu.yang.entity.YugiohCardHistory)
                                  - SQL table alias mapping - entries2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_2_4_}

[DEBUG] 2019-11-11 19:13:58.479 [main] EntityLoader - Static select for entity edu.yang.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-11 19:13:58.483 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42d9e8d2]
[DEBUG] 2019-11-11 19:13:58.483 [main] MetamodelGraphWalker - Visiting attribute path : cards
[DEBUG] 2019-11-11 19:13:58.484 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@582a3b19]
[DEBUG] 2019-11-11 19:13:58.484 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b0454d2]
[DEBUG] 2019-11-11 19:13:58.485 [main] MetamodelGraphWalker - Visiting attribute path : cards.cardIndex
[DEBUG] 2019-11-11 19:13:58.485 [main] MetamodelGraphWalker - Visiting attribute path : cards.cardName
[DEBUG] 2019-11-11 19:13:58.485 [main] MetamodelGraphWalker - Visiting attribute path : cards.cardRarity
[DEBUG] 2019-11-11 19:13:58.485 [main] MetamodelGraphWalker - Visiting attribute path : cards.cardSet
[DEBUG] 2019-11-11 19:13:58.485 [main] MetamodelGraphWalker - Visiting attribute path : cards.cardType
[DEBUG] 2019-11-11 19:13:58.485 [main] MetamodelGraphWalker - Visiting attribute path : cards.entries
[DEBUG] 2019-11-11 19:13:58.485 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7ac058a0]
[DEBUG] 2019-11-11 19:13:58.485 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@736b21ee]
[DEBUG] 2019-11-11 19:13:58.485 [main] MetamodelGraphWalker - Visiting attribute path : cards.entries.price
[DEBUG] 2019-11-11 19:13:58.485 [main] MetamodelGraphWalker - Visiting attribute path : cards.entries.ts
[DEBUG] 2019-11-11 19:13:58.485 [main] MetamodelGraphWalker - Visiting attribute path : cards.entries.yugiohCard
[DEBUG] 2019-11-11 19:13:58.485 [main] MetamodelGraphWalker - Property path deemed to be circular : cards.entries.yugiohCard
[DEBUG] 2019-11-11 19:13:58.486 [main] MetamodelGraphWalker - Visiting attribute path : cards.image
[DEBUG] 2019-11-11 19:13:58.486 [main] MetamodelGraphWalker - Visiting attribute path : cards.price
[DEBUG] 2019-11-11 19:13:58.486 [main] MetamodelGraphWalker - Visiting attribute path : cards.quantity
[DEBUG] 2019-11-11 19:13:58.486 [main] MetamodelGraphWalker - Visiting attribute path : cards.status
[DEBUG] 2019-11-11 19:13:58.486 [main] MetamodelGraphWalker - Visiting attribute path : cards.user
[DEBUG] 2019-11-11 19:13:58.486 [main] MetamodelGraphWalker - Property path deemed to be circular : cards.user
[DEBUG] 2019-11-11 19:13:58.486 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-11-11 19:13:58.486 [main] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2019-11-11 19:13:58.486 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-11-11 19:13:58.486 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-11 19:13:58.486 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-11 19:13:58.488 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:0>, path=edu.yang.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.User.cards, querySpaceUid=<gen:1>, path=edu.yang.entity.User.cards)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:2>, path=edu.yang.entity.User.cards.<elements>)
                - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:3>, path=edu.yang.entity.User.cards.<elements>.entries)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:4>, path=edu.yang.entity.User.cards.<elements>.entries.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(cards)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.User.cards)
                - SQL table alias mapping - cards1_
                - alias suffix - 1_
                - suffixed key columns - {user_id11_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCard)
                      - SQL table alias mapping - cards1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(entries)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=edu.yang.entity.YugiohCard.entries)
                            - SQL table alias mapping - entries2_
                            - alias suffix - 3_
                            - suffixed key columns - {yugiohCa4_2_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_2_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=edu.yang.entity.YugiohCardHistory)
                                  - SQL table alias mapping - entries2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_2_4_}

[DEBUG] 2019-11-11 19:13:58.493 [main] EntityLoader - Static select for entity edu.yang.entity.User [READ]: select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-11 19:13:58.509 [main] Loader - Static select for action ACTION_MERGE on entity edu.yang.entity.User: select user0_.id as id1_0_1_, user0_.user_password as user_pas2_0_1_, user0_.user_role as user_rol3_0_1_, user0_.user_name as user_nam4_0_1_, cards1_.user_id as user_id11_1_3_, cards1_.id as id1_1_3_, cards1_.id as id1_1_0_, cards1_.card_index as card_ind2_1_0_, cards1_.card_name as card_nam3_1_0_, cards1_.card_rarity as card_rar4_1_0_, cards1_.card_set as card_set5_1_0_, cards1_.card_type as card_typ6_1_0_, cards1_.image as image7_1_0_, cards1_.price as price8_1_0_, cards1_.qty as qty9_1_0_, cards1_.status as status10_1_0_, cards1_.user_id as user_id11_1_0_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id where user0_.id=?
[DEBUG] 2019-11-11 19:13:58.510 [main] Loader - Static select for action ACTION_REFRESH on entity edu.yang.entity.User: select user0_.id as id1_0_1_, user0_.user_password as user_pas2_0_1_, user0_.user_role as user_rol3_0_1_, user0_.user_name as user_nam4_0_1_, cards1_.user_id as user_id11_1_3_, cards1_.id as id1_1_3_, cards1_.id as id1_1_0_, cards1_.card_index as card_ind2_1_0_, cards1_.card_name as card_nam3_1_0_, cards1_.card_rarity as card_rar4_1_0_, cards1_.card_set as card_set5_1_0_, cards1_.card_type as card_typ6_1_0_, cards1_.image as image7_1_0_, cards1_.price as price8_1_0_, cards1_.qty as qty9_1_0_, cards1_.status as status10_1_0_, cards1_.user_id as user_id11_1_0_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id where user0_.id=?
[DEBUG] 2019-11-11 19:13:58.510 [main] AbstractEntityPersister - Static SQL for entity: edu.yang.entity.YugiohCard
[DEBUG] 2019-11-11 19:13:58.510 [main] AbstractEntityPersister -  Version select: select id from yugioh_card where id =?
[DEBUG] 2019-11-11 19:13:58.510 [main] AbstractEntityPersister -  Snapshot select: select yugiohcard_.id, yugiohcard_.card_index as card_ind2_1_, yugiohcard_.card_name as card_nam3_1_, yugiohcard_.card_rarity as card_rar4_1_, yugiohcard_.card_set as card_set5_1_, yugiohcard_.card_type as card_typ6_1_, yugiohcard_.image as image7_1_, yugiohcard_.price as price8_1_, yugiohcard_.qty as qty9_1_, yugiohcard_.status as status10_1_, yugiohcard_.user_id as user_id11_1_ from yugioh_card yugiohcard_ where yugiohcard_.id=?
[DEBUG] 2019-11-11 19:13:58.510 [main] AbstractEntityPersister -  Insert 0: insert into yugioh_card (card_index, card_name, card_rarity, card_set, card_type, image, price, qty, status, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-11-11 19:13:58.510 [main] AbstractEntityPersister -  Update 0: update yugioh_card set card_index=?, card_name=?, card_rarity=?, card_set=?, card_type=?, image=?, price=?, qty=?, status=?, user_id=? where id=?
[DEBUG] 2019-11-11 19:13:58.510 [main] AbstractEntityPersister -  Delete 0: delete from yugioh_card where id=?
[DEBUG] 2019-11-11 19:13:58.510 [main] AbstractEntityPersister -  Identity insert: insert into yugioh_card (card_index, card_name, card_rarity, card_set, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-11-11 19:13:58.510 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d14e99e]
[DEBUG] 2019-11-11 19:13:58.513 [main] MetamodelGraphWalker - Visiting attribute path : cardIndex
[DEBUG] 2019-11-11 19:13:58.513 [main] MetamodelGraphWalker - Visiting attribute path : cardName
[DEBUG] 2019-11-11 19:13:58.513 [main] MetamodelGraphWalker - Visiting attribute path : cardRarity
[DEBUG] 2019-11-11 19:13:58.513 [main] MetamodelGraphWalker - Visiting attribute path : cardSet
[DEBUG] 2019-11-11 19:13:58.513 [main] MetamodelGraphWalker - Visiting attribute path : cardType
[DEBUG] 2019-11-11 19:13:58.513 [main] MetamodelGraphWalker - Visiting attribute path : entries
[DEBUG] 2019-11-11 19:13:58.513 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@682618e5]
[DEBUG] 2019-11-11 19:13:58.513 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25ad25f5]
[DEBUG] 2019-11-11 19:13:58.513 [main] MetamodelGraphWalker - Visiting attribute path : entries.price
[DEBUG] 2019-11-11 19:13:58.513 [main] MetamodelGraphWalker - Visiting attribute path : entries.ts
[DEBUG] 2019-11-11 19:13:58.513 [main] MetamodelGraphWalker - Visiting attribute path : entries.yugiohCard
[DEBUG] 2019-11-11 19:13:58.513 [main] MetamodelGraphWalker - Property path deemed to be circular : entries.yugiohCard
[DEBUG] 2019-11-11 19:13:58.513 [main] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2019-11-11 19:13:58.513 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-11-11 19:13:58.513 [main] MetamodelGraphWalker - Visiting attribute path : quantity
[DEBUG] 2019-11-11 19:13:58.513 [main] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2019-11-11 19:13:58.513 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-11-11 19:13:58.514 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40d96578]
[DEBUG] 2019-11-11 19:13:58.514 [main] MetamodelGraphWalker - Visiting attribute path : user.cards
[DEBUG] 2019-11-11 19:13:58.514 [main] MetamodelGraphWalker - Property path deemed to be circular : user.cards
[DEBUG] 2019-11-11 19:13:58.514 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2019-11-11 19:13:58.514 [main] MetamodelGraphWalker - Visiting attribute path : user.role
[DEBUG] 2019-11-11 19:13:58.514 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-11-11 19:13:58.515 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-11 19:13:58.517 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-11 19:13:58.518 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCard)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCard)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCard.entries)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCard.entries.<elements>)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:3>, path=edu.yang.entity.YugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCard)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(entries)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.YugiohCard.entries)
                - SQL table alias mapping - entries1_
                - alias suffix - 1_
                - suffixed key columns - {yugiohCa4_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_2_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCardHistory)
                      - SQL table alias mapping - entries1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.yang.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 3_
                - suffixed key columns - {id1_0_3_}

[DEBUG] 2019-11-11 19:13:58.518 [main] EntityLoader - Static select for entity edu.yang.entity.YugiohCard [NONE]: select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:13:58.518 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74e497ae]
[DEBUG] 2019-11-11 19:13:58.518 [main] MetamodelGraphWalker - Visiting attribute path : cardIndex
[DEBUG] 2019-11-11 19:13:58.518 [main] MetamodelGraphWalker - Visiting attribute path : cardName
[DEBUG] 2019-11-11 19:13:58.518 [main] MetamodelGraphWalker - Visiting attribute path : cardRarity
[DEBUG] 2019-11-11 19:13:58.518 [main] MetamodelGraphWalker - Visiting attribute path : cardSet
[DEBUG] 2019-11-11 19:13:58.518 [main] MetamodelGraphWalker - Visiting attribute path : cardType
[DEBUG] 2019-11-11 19:13:58.518 [main] MetamodelGraphWalker - Visiting attribute path : entries
[DEBUG] 2019-11-11 19:13:58.518 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35d7386b]
[DEBUG] 2019-11-11 19:13:58.518 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21002393]
[DEBUG] 2019-11-11 19:13:58.518 [main] MetamodelGraphWalker - Visiting attribute path : entries.price
[DEBUG] 2019-11-11 19:13:58.518 [main] MetamodelGraphWalker - Visiting attribute path : entries.ts
[DEBUG] 2019-11-11 19:13:58.518 [main] MetamodelGraphWalker - Visiting attribute path : entries.yugiohCard
[DEBUG] 2019-11-11 19:13:58.518 [main] MetamodelGraphWalker - Property path deemed to be circular : entries.yugiohCard
[DEBUG] 2019-11-11 19:13:58.519 [main] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2019-11-11 19:13:58.519 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-11-11 19:13:58.519 [main] MetamodelGraphWalker - Visiting attribute path : quantity
[DEBUG] 2019-11-11 19:13:58.519 [main] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2019-11-11 19:13:58.519 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-11-11 19:13:58.519 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6568f998]
[DEBUG] 2019-11-11 19:13:58.519 [main] MetamodelGraphWalker - Visiting attribute path : user.cards
[DEBUG] 2019-11-11 19:13:58.519 [main] MetamodelGraphWalker - Property path deemed to be circular : user.cards
[DEBUG] 2019-11-11 19:13:58.519 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2019-11-11 19:13:58.519 [main] MetamodelGraphWalker - Visiting attribute path : user.role
[DEBUG] 2019-11-11 19:13:58.519 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-11-11 19:13:58.519 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-11 19:13:58.523 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-11 19:13:58.525 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCard)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCard)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCard.entries)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCard.entries.<elements>)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:3>, path=edu.yang.entity.YugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCard)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(entries)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.YugiohCard.entries)
                - SQL table alias mapping - entries1_
                - alias suffix - 1_
                - suffixed key columns - {yugiohCa4_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_2_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCardHistory)
                      - SQL table alias mapping - entries1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.yang.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 3_
                - suffixed key columns - {id1_0_3_}

[DEBUG] 2019-11-11 19:13:58.525 [main] EntityLoader - Static select for entity edu.yang.entity.YugiohCard [READ]: select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:13:58.529 [main] Loader - Static select for action ACTION_MERGE on entity edu.yang.entity.YugiohCard: select yugiohcard0_.id as id1_1_1_, yugiohcard0_.card_index as card_ind2_1_1_, yugiohcard0_.card_name as card_nam3_1_1_, yugiohcard0_.card_rarity as card_rar4_1_1_, yugiohcard0_.card_set as card_set5_1_1_, yugiohcard0_.card_type as card_typ6_1_1_, yugiohcard0_.image as image7_1_1_, yugiohcard0_.price as price8_1_1_, yugiohcard0_.qty as qty9_1_1_, yugiohcard0_.status as status10_1_1_, yugiohcard0_.user_id as user_id11_1_1_, entries1_.yugiohCard_id as yugiohCa4_2_3_, entries1_.id as id1_2_3_, entries1_.id as id1_2_0_, entries1_.price as price2_2_0_, entries1_.update_date as update_d3_2_0_, entries1_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:13:58.530 [main] Loader - Static select for action ACTION_REFRESH on entity edu.yang.entity.YugiohCard: select yugiohcard0_.id as id1_1_1_, yugiohcard0_.card_index as card_ind2_1_1_, yugiohcard0_.card_name as card_nam3_1_1_, yugiohcard0_.card_rarity as card_rar4_1_1_, yugiohcard0_.card_set as card_set5_1_1_, yugiohcard0_.card_type as card_typ6_1_1_, yugiohcard0_.image as image7_1_1_, yugiohcard0_.price as price8_1_1_, yugiohcard0_.qty as qty9_1_1_, yugiohcard0_.status as status10_1_1_, yugiohcard0_.user_id as user_id11_1_1_, entries1_.yugiohCard_id as yugiohCa4_2_3_, entries1_.id as id1_2_3_, entries1_.id as id1_2_0_, entries1_.price as price2_2_0_, entries1_.update_date as update_d3_2_0_, entries1_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:13:58.531 [main] AbstractEntityPersister - Static SQL for entity: edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-11-11 19:13:58.531 [main] AbstractEntityPersister -  Version select: select id from yugioh_card_history where id =?
[DEBUG] 2019-11-11 19:13:58.531 [main] AbstractEntityPersister -  Snapshot select: select yugiohcard_.id, yugiohcard_.price as price2_2_, yugiohcard_.yugiohCard_id as yugiohCa4_2_ from yugioh_card_history yugiohcard_ where yugiohcard_.id=?
[DEBUG] 2019-11-11 19:13:58.531 [main] AbstractEntityPersister -  Insert 0: insert into yugioh_card_history (price, update_date, yugiohCard_id, id) values (?, ?, ?, ?)
[DEBUG] 2019-11-11 19:13:58.531 [main] AbstractEntityPersister -  Update 0: update yugioh_card_history set price=?, yugiohCard_id=? where id=?
[DEBUG] 2019-11-11 19:13:58.531 [main] AbstractEntityPersister -  Delete 0: delete from yugioh_card_history where id=?
[DEBUG] 2019-11-11 19:13:58.532 [main] AbstractEntityPersister -  Identity insert: insert into yugioh_card_history (price, update_date, yugiohCard_id) values (?, ?, ?)
[DEBUG] 2019-11-11 19:13:58.532 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@782fd504]
[DEBUG] 2019-11-11 19:13:58.532 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-11-11 19:13:58.532 [main] MetamodelGraphWalker - Visiting attribute path : ts
[DEBUG] 2019-11-11 19:13:58.532 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard
[DEBUG] 2019-11-11 19:13:58.532 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37314843]
[DEBUG] 2019-11-11 19:13:58.532 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardIndex
[DEBUG] 2019-11-11 19:13:58.532 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardName
[DEBUG] 2019-11-11 19:13:58.532 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardRarity
[DEBUG] 2019-11-11 19:13:58.532 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardSet
[DEBUG] 2019-11-11 19:13:58.532 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardType
[DEBUG] 2019-11-11 19:13:58.532 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.entries
[DEBUG] 2019-11-11 19:13:58.532 [main] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.entries
[DEBUG] 2019-11-11 19:13:58.532 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.image
[DEBUG] 2019-11-11 19:13:58.532 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.price
[DEBUG] 2019-11-11 19:13:58.532 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.quantity
[DEBUG] 2019-11-11 19:13:58.532 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.status
[DEBUG] 2019-11-11 19:13:58.532 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user
[DEBUG] 2019-11-11 19:13:58.532 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@569348e1]
[DEBUG] 2019-11-11 19:13:58.532 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.cards
[DEBUG] 2019-11-11 19:13:58.532 [main] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.user.cards
[DEBUG] 2019-11-11 19:13:58.539 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.password
[DEBUG] 2019-11-11 19:13:58.539 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.role
[DEBUG] 2019-11-11 19:13:58.539 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.userName
[DEBUG] 2019-11-11 19:13:58.539 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-11 19:13:58.539 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-11 19:13:58.539 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCardHistory)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCardHistory)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCardHistory.yugiohCard)
             - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCardHistory.yugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCardHistory)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(yugiohCard)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCard)
                - SQL table alias mapping - yugiohcard1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-11-11 19:13:58.540 [main] EntityLoader - Static select for entity edu.yang.entity.YugiohCardHistory [NONE]: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_, yugiohcard1_.id as id1_1_1_, yugiohcard1_.card_index as card_ind2_1_1_, yugiohcard1_.card_name as card_nam3_1_1_, yugiohcard1_.card_rarity as card_rar4_1_1_, yugiohcard1_.card_set as card_set5_1_1_, yugiohcard1_.card_type as card_typ6_1_1_, yugiohcard1_.image as image7_1_1_, yugiohcard1_.price as price8_1_1_, yugiohcard1_.qty as qty9_1_1_, yugiohcard1_.status as status10_1_1_, yugiohcard1_.user_id as user_id11_1_1_, user2_.id as id1_0_2_, user2_.user_password as user_pas2_0_2_, user2_.user_role as user_rol3_0_2_, user2_.user_name as user_nam4_0_2_ from yugioh_card_history yugiohcard0_ left outer join yugioh_card yugiohcard1_ on yugiohcard0_.yugiohCard_id=yugiohcard1_.id left outer join user user2_ on yugiohcard1_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:13:58.540 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@407b8435]
[DEBUG] 2019-11-11 19:13:58.540 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-11-11 19:13:58.540 [main] MetamodelGraphWalker - Visiting attribute path : ts
[DEBUG] 2019-11-11 19:13:58.540 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard
[DEBUG] 2019-11-11 19:13:58.540 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4db0ba1c]
[DEBUG] 2019-11-11 19:13:58.540 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardIndex
[DEBUG] 2019-11-11 19:13:58.540 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardName
[DEBUG] 2019-11-11 19:13:58.540 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardRarity
[DEBUG] 2019-11-11 19:13:58.540 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardSet
[DEBUG] 2019-11-11 19:13:58.540 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardType
[DEBUG] 2019-11-11 19:13:58.540 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.entries
[DEBUG] 2019-11-11 19:13:58.540 [main] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.entries
[DEBUG] 2019-11-11 19:13:58.540 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.image
[DEBUG] 2019-11-11 19:13:58.540 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.price
[DEBUG] 2019-11-11 19:13:58.540 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.quantity
[DEBUG] 2019-11-11 19:13:58.540 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.status
[DEBUG] 2019-11-11 19:13:58.540 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user
[DEBUG] 2019-11-11 19:13:58.540 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1578fa9]
[DEBUG] 2019-11-11 19:13:58.540 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.cards
[DEBUG] 2019-11-11 19:13:58.540 [main] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.user.cards
[DEBUG] 2019-11-11 19:13:58.540 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.password
[DEBUG] 2019-11-11 19:13:58.545 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.role
[DEBUG] 2019-11-11 19:13:58.545 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.userName
[DEBUG] 2019-11-11 19:13:58.545 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-11 19:13:58.547 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-11 19:13:58.547 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCardHistory)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCardHistory)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCardHistory.yugiohCard)
             - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCardHistory.yugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCardHistory)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(yugiohCard)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCard)
                - SQL table alias mapping - yugiohcard1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-11-11 19:13:58.547 [main] EntityLoader - Static select for entity edu.yang.entity.YugiohCardHistory [READ]: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_, yugiohcard1_.id as id1_1_1_, yugiohcard1_.card_index as card_ind2_1_1_, yugiohcard1_.card_name as card_nam3_1_1_, yugiohcard1_.card_rarity as card_rar4_1_1_, yugiohcard1_.card_set as card_set5_1_1_, yugiohcard1_.card_type as card_typ6_1_1_, yugiohcard1_.image as image7_1_1_, yugiohcard1_.price as price8_1_1_, yugiohcard1_.qty as qty9_1_1_, yugiohcard1_.status as status10_1_1_, yugiohcard1_.user_id as user_id11_1_1_, user2_.id as id1_0_2_, user2_.user_password as user_pas2_0_2_, user2_.user_role as user_rol3_0_2_, user2_.user_name as user_nam4_0_2_ from yugioh_card_history yugiohcard0_ left outer join yugioh_card yugiohcard1_ on yugiohcard0_.yugiohCard_id=yugiohcard1_.id left outer join user user2_ on yugiohcard1_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:13:58.547 [main] Loader - Static select for action ACTION_MERGE on entity edu.yang.entity.YugiohCardHistory: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card_history yugiohcard0_ where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:13:58.548 [main] Loader - Static select for action ACTION_REFRESH on entity edu.yang.entity.YugiohCardHistory: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card_history yugiohcard0_ where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:13:58.553 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@783b3aa0]
[DEBUG] 2019-11-11 19:13:58.554 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ec85a25]
[DEBUG] 2019-11-11 19:13:58.557 [main] MetamodelGraphWalker - Visiting attribute path : cardIndex
[DEBUG] 2019-11-11 19:13:58.557 [main] MetamodelGraphWalker - Visiting attribute path : cardName
[DEBUG] 2019-11-11 19:13:58.557 [main] MetamodelGraphWalker - Visiting attribute path : cardRarity
[DEBUG] 2019-11-11 19:13:58.557 [main] MetamodelGraphWalker - Visiting attribute path : cardSet
[DEBUG] 2019-11-11 19:13:58.557 [main] MetamodelGraphWalker - Visiting attribute path : cardType
[DEBUG] 2019-11-11 19:13:58.557 [main] MetamodelGraphWalker - Visiting attribute path : entries
[DEBUG] 2019-11-11 19:13:58.557 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68aec50]
[DEBUG] 2019-11-11 19:13:58.557 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aff97d6]
[DEBUG] 2019-11-11 19:13:58.557 [main] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2019-11-11 19:13:58.557 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-11-11 19:13:58.557 [main] MetamodelGraphWalker - Visiting attribute path : quantity
[DEBUG] 2019-11-11 19:13:58.557 [main] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2019-11-11 19:13:58.557 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-11-11 19:13:58.558 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-11-11 19:13:58.558 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-11 19:13:58.560 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-11 19:13:58.562 [main] LoadPlanTreePrinter - LoadPlan(collection=edu.yang.entity.User.cards)
    - Returns
       - CollectionReturnImpl(collection=edu.yang.entity.User.cards, querySpaceUid=<gen:0>, path=[edu.yang.entity.User.cards])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:1>, path=[edu.yang.entity.User.cards].<elements>)
             - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:2>, path=[edu.yang.entity.User.cards].<elements>.entries)
                - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:3>, path=[edu.yang.entity.User.cards].<elements>.entries.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.yang.entity.User.cards)
          - SQL table alias mapping - cards0_
          - alias suffix - 0_
          - suffixed key columns - {user_id11_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCard)
                - SQL table alias mapping - cards0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-11-11 19:13:58.562 [main] CollectionLoader - Static select for collection edu.yang.entity.User.cards: select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-11 19:13:58.562 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8f57e4c]
[DEBUG] 2019-11-11 19:13:58.562 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26fadd98]
[DEBUG] 2019-11-11 19:13:58.562 [main] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-11-11 19:13:58.562 [main] MetamodelGraphWalker - Visiting attribute path : ts
[DEBUG] 2019-11-11 19:13:58.562 [main] MetamodelGraphWalker - Visiting attribute path : yugiohCard
[DEBUG] 2019-11-11 19:13:58.562 [main] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard
[DEBUG] 2019-11-11 19:13:58.562 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-11 19:13:58.562 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-11 19:13:58.565 [main] LoadPlanTreePrinter - LoadPlan(collection=edu.yang.entity.YugiohCard.entries)
    - Returns
       - CollectionReturnImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:0>, path=[edu.yang.entity.YugiohCard.entries])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:1>, path=[edu.yang.entity.YugiohCard.entries].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.yang.entity.YugiohCard.entries)
          - SQL table alias mapping - entries0_
          - alias suffix - 0_
          - suffixed key columns - {yugiohCa4_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCardHistory)
                - SQL table alias mapping - entries0_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

[DEBUG] 2019-11-11 19:13:58.565 [main] CollectionLoader - Static select for collection edu.yang.entity.YugiohCard.entries: select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-11 19:13:58.598 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-11-11 19:13:58.600 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-11-11 19:13:58.600 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-11-11 19:13:58.606 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-11-11 19:13:58.606 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-11-11 19:13:58.606 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-11-11 19:13:58.606 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-11-11 19:13:58.608 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@b5d9f1e
[DEBUG] 2019-11-11 19:13:58.610 [main] SessionFactoryRegistry - Registering SessionFactory: b82c62c8-fa8d-4d05-9b9f-e70d075b4084 (<unnamed>)
[DEBUG] 2019-11-11 19:13:58.610 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-11-11 19:13:58.668 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-11-11 19:13:58.692 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0
[DEBUG] 2019-11-11 19:13:58.747 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@23b71d24
[DEBUG] 2019-11-11 19:13:58.791 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0
[DEBUG] 2019-11-11 19:13:58.798 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:13:58.810 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'edu'
       |     |  |  |  \-[IDENT] Node: 'yang'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'YugiohCard'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2019-11-11 19:13:58.917 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-11-11 19:13:58.934 [main] FromElement - FromClause{level=1} : edu.yang.entity.YugiohCard (generatedAlias0) -> yugiohcard0_
[DEBUG] 2019-11-11 19:13:58.935 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-11 19:13:58.937 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-11-11 19:13:58.937 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} yugiohcard0_.id ) ( FromClause{level=1} yugioh_card yugiohcard0_ ) )
[DEBUG] 2019-11-11 19:13:58.957 [main] JoinProcessor - Using FROM fragment [yugioh_card yugiohcard0_]
[DEBUG] 2019-11-11 19:13:58.957 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-11-11 19:13:58.961 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (yugioh_card)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id as id1_1_' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
    |  \-[SQL_TOKEN] SqlFragment: 'yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[yugiohcard0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'yugioh_card yugiohcard0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=yugioh_card,tableAlias=yugiohcard0_,origin=null,columns={,className=edu.yang.entity.YugiohCard}}

[DEBUG] 2019-11-11 19:13:58.962 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:13:58.975 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0
[DEBUG] 2019-11-11 19:13:58.975 [main] QueryTranslatorImpl - SQL: select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_
[DEBUG] 2019-11-11 19:13:58.976 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:13:59.004 [main] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_
[DEBUG] 2019-11-11 19:13:59.069 [main] Loader - Result set row: 0
[DEBUG] 2019-11-11 19:13:59.072 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:13:59.083 [main] Loader - Result set row: 1
[DEBUG] 2019-11-11 19:13:59.083 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:13:59.086 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:13:59.087 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-11 19:13:59.087 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.087 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-11 19:13:59.093 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.093 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-11 19:13:59.093 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.093 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-11 19:13:59.093 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.093 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:13:59.093 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.093 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:13:59.093 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.121 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:13:59.121 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.121 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-11 19:13:59.121 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.121 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-11 19:13:59.121 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.121 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:13:59.121 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.121 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:13:59.121 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.127 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-11 19:13:59.137 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:13:59.138 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:13:59.141 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:13:59.146 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:13:59.146 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:13:59.146 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:13:59.148 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:13:59.148 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:13:59.149 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-11 19:13:59.149 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:13:59.149 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:13:59.149 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:13:59.149 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:13:59.150 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:13:59.150 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.150 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-11 19:13:59.150 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.150 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:13:59.150 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.150 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-11 19:13:59.150 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.152 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:13:59.152 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:13:59.152 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-11 19:13:59.152 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.152 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:13:48.0
[DEBUG] 2019-11-11 19:13:59.152 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.152 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:13:59.152 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.154 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:13:59.154 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:13:59.155 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-11 19:13:59.155 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.155 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:13:48.0
[DEBUG] 2019-11-11 19:13:59.155 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.155 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:13:59.155 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.155 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:13:59.155 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:13:59.155 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-11 19:13:59.156 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.156 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:13:48.0
[DEBUG] 2019-11-11 19:13:59.156 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.156 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-11 19:13:59.156 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.156 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:13:59.156 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:13:59.157 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:13:59.158 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:13:59.158 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:13:59.158 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:13:59.158 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:13:59.158 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:13:59.158 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:13:59.160 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-11-11 19:13:59.160 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:13:59.160 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:13:59.160 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-11 19:13:59.160 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.160 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-11 19:13:59.160 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.160 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-11 19:13:59.160 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.160 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-11 19:13:59.160 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.160 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:13:59.160 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.160 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:13:59.160 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.160 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:13:59.160 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.160 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-11 19:13:59.160 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.160 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-11 19:13:59.160 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.160 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:13:59.161 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.162 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:13:59.162 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.162 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:13:59.165 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:13:59.487 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-11 19:13:59.489 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:13:59.493 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:13:59.493 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:13:59.493 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:13:59.494 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:13:59.494 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:13:59.494 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:13:59.494 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:13:59.494 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-11 19:13:59.494 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:13:59.494 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:13:59.494 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-11 19:13:59.498 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.499 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-11 19:13:59.499 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.499 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:13:59.499 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.499 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:13:59.499 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.499 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:13:59.499 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:13:59.499 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-11 19:13:59.499 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.499 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:13:59.0
[DEBUG] 2019-11-11 19:13:59.499 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.499 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:13:59.499 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.499 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:13:59.499 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:13:59.499 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-11 19:13:59.499 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.503 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:13:59.0
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-11 19:13:59.504 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.506 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:13:59.0
[DEBUG] 2019-11-11 19:13:59.506 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.506 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-11 19:13:59.506 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.506 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:13:59.508 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:13:59.508 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:13:59.508 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:13:59.508 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:13:59.508 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:13:59.508 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:13:59.508 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:13:59.511 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:13:59.511 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-11-11 19:13:59.511 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:13:59.562 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where ( generatedAlias0.cardName like :param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-11-11 19:13:59.564 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where ( generatedAlias0.cardName like :param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-11-11 19:13:59.573 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:13:59.577 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'yang'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'YugiohCard'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'cardName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'user'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

[DEBUG] 2019-11-11 19:13:59.577 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-11-11 19:13:59.578 [main] FromElement - FromClause{level=1} : edu.yang.entity.YugiohCard (generatedAlias0) -> yugiohcard0_
[DEBUG] 2019-11-11 19:13:59.579 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-11 19:13:59.583 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-11 19:13:59.613 [main] DotNode - getDataType() : cardName -> org.hibernate.type.StringType@5bb51241
[DEBUG] 2019-11-11 19:13:59.614 [main] FromReferenceNode - Resolved : generatedAlias0.cardName -> yugiohcard0_.card_name
[DEBUG] 2019-11-11 19:13:59.615 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-11 19:13:59.615 [main] DotNode - getDataType() : user -> org.hibernate.type.ManyToOneType(edu.yang.entity.User)
[DEBUG] 2019-11-11 19:13:59.615 [main] DotNode - dereferenceShortcut() : property user in edu.yang.entity.YugiohCard does not require a join.
[DEBUG] 2019-11-11 19:13:59.615 [main] DotNode - Terminal getPropertyPath = [user]
[DEBUG] 2019-11-11 19:13:59.615 [main] FromReferenceNode - Resolved : generatedAlias0.user -> yugiohcard0_.user_id
[DEBUG] 2019-11-11 19:13:59.616 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-11-11 19:13:59.617 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} yugiohcard0_.id ) ( FromClause{level=1} yugioh_card yugiohcard0_ ) ( where ( and ( like ( yugiohcard0_.card_name yugiohcard0_.id cardName ) ? ) ( = ( yugiohcard0_.user_id yugiohcard0_.id user ) ? ) ) ) )
[DEBUG] 2019-11-11 19:13:59.617 [main] JoinProcessor - Using FROM fragment [yugioh_card yugiohcard0_]
[DEBUG] 2019-11-11 19:13:59.617 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-11-11 19:13:59.618 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (yugioh_card)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id as id1_1_' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
    |  \-[SQL_TOKEN] SqlFragment: 'yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[yugiohcard0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'yugioh_card yugiohcard0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=yugioh_card,tableAlias=yugiohcard0_,origin=null,columns={,className=edu.yang.entity.YugiohCard}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'yugiohcard0_.card_name' {propertyName=cardName,dereferenceType=PRIMITIVE,getPropertyPath=cardName,path=generatedAlias0.cardName,tableAlias=yugiohcard0_,className=edu.yang.entity.YugiohCard,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
          |  |  \-[IDENT] IdentNode: 'cardName' {originalText=cardName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@5bb51241}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'yugiohcard0_.user_id' {propertyName=user,dereferenceType=UNKNOWN,getPropertyPath=user,path=generatedAlias0.user,tableAlias=yugiohcard0_,className=edu.yang.entity.YugiohCard,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
             |  \-[IDENT] IdentNode: 'user' {originalText=user}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.ManyToOneType(edu.yang.entity.User)}

[DEBUG] 2019-11-11 19:13:59.618 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:13:59.618 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where ( generatedAlias0.cardName like :param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-11-11 19:13:59.618 [main] QueryTranslatorImpl - SQL: select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where (yugiohcard0_.card_name like ?) and yugiohcard0_.user_id=?
[DEBUG] 2019-11-11 19:13:59.618 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:13:59.622 [main] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where (yugiohcard0_.card_name like ?) and yugiohcard0_.user_id=?
[DEBUG] 2019-11-11 19:13:59.640 [main] Loader - Result set row: 0
[DEBUG] 2019-11-11 19:13:59.640 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:13:59.640 [main] Loader - Result set row: 1
[DEBUG] 2019-11-11 19:13:59.640 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:13:59.641 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:13:59.641 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-11 19:13:59.641 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.641 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-11 19:13:59.641 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.641 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-11 19:13:59.641 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.641 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-11 19:13:59.641 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.641 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:13:59.641 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.641 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:13:59.641 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.641 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:13:59.641 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.641 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-11 19:13:59.641 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.641 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-11 19:13:59.641 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.641 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:13:59.641 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.641 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:13:59.641 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.641 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-11 19:13:59.643 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:13:59.644 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:13:59.644 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:13:59.645 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:13:59.645 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:13:59.645 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:13:59.645 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:13:59.645 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:13:59.646 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-11 19:13:59.646 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:13:59.646 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:13:59.646 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:13:59.646 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:13:59.646 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:13:59.646 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.646 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-11 19:13:59.646 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.647 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:13:59.647 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.647 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-11 19:13:59.647 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.647 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:13:59.647 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:13:59.647 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-11 19:13:59.647 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.647 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:13:59.0
[DEBUG] 2019-11-11 19:13:59.647 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.647 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:13:59.647 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.648 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:13:59.648 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:13:59.648 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-11 19:13:59.648 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.648 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:13:59.0
[DEBUG] 2019-11-11 19:13:59.648 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.648 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:13:59.648 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.648 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:13:59.648 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:13:59.648 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-11 19:13:59.648 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.648 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:13:59.0
[DEBUG] 2019-11-11 19:13:59.648 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.649 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-11 19:13:59.649 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.649 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:13:59.649 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:13:59.649 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:13:59.649 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:13:59.649 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:13:59.649 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:13:59.649 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:13:59.649 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:13:59.649 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:13:59.649 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-11-11 19:13:59.649 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:13:59.649 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:13:59.649 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-11 19:13:59.650 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.650 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-11 19:13:59.650 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.650 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-11 19:13:59.650 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.650 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-11 19:13:59.650 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.650 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:13:59.650 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.650 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:13:59.650 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.650 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:13:59.650 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.650 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-11 19:13:59.650 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.650 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-11 19:13:59.650 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.650 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:13:59.650 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.650 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:13:59.650 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:13:59.651 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:13:59.651 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:13:59.840 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where generatedAlias0.status like :param0
[DEBUG] 2019-11-11 19:13:59.842 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.status like :param0
[DEBUG] 2019-11-11 19:13:59.844 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:13:59.844 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'yang'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'YugiohCard'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'status'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-11-11 19:13:59.844 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-11-11 19:13:59.846 [main] FromElement - FromClause{level=1} : edu.yang.entity.YugiohCard (generatedAlias0) -> yugiohcard0_
[DEBUG] 2019-11-11 19:13:59.847 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-11 19:13:59.847 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-11 19:13:59.847 [main] DotNode - getDataType() : status -> org.hibernate.type.StringType@5bb51241
[DEBUG] 2019-11-11 19:13:59.847 [main] FromReferenceNode - Resolved : generatedAlias0.status -> yugiohcard0_.status
[DEBUG] 2019-11-11 19:13:59.847 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-11-11 19:13:59.848 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} yugiohcard0_.id ) ( FromClause{level=1} yugioh_card yugiohcard0_ ) ( where ( like ( yugiohcard0_.status yugiohcard0_.id status ) ? ) ) )
[DEBUG] 2019-11-11 19:13:59.848 [main] JoinProcessor - Using FROM fragment [yugioh_card yugiohcard0_]
[DEBUG] 2019-11-11 19:13:59.848 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-11-11 19:13:59.849 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (yugioh_card)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id as id1_1_' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
    |  \-[SQL_TOKEN] SqlFragment: 'yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[yugiohcard0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'yugioh_card yugiohcard0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=yugioh_card,tableAlias=yugiohcard0_,origin=null,columns={,className=edu.yang.entity.YugiohCard}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'yugiohcard0_.status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=generatedAlias0.status,tableAlias=yugiohcard0_,className=edu.yang.entity.YugiohCard,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
          |  \-[IDENT] IdentNode: 'status' {originalText=status}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@5bb51241}

[DEBUG] 2019-11-11 19:13:59.850 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:13:59.850 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.status like :param0
[DEBUG] 2019-11-11 19:13:59.850 [main] QueryTranslatorImpl - SQL: select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.status like ?
[DEBUG] 2019-11-11 19:13:59.850 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:13:59.851 [main] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.status like ?
[DEBUG] 2019-11-11 19:13:59.854 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:00.048 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where generatedAlias0.cardSet like :param0
[DEBUG] 2019-11-11 19:14:00.049 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.cardSet like :param0
[DEBUG] 2019-11-11 19:14:00.051 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:14:00.053 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'yang'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'YugiohCard'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'cardSet'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-11-11 19:14:00.053 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-11-11 19:14:00.055 [main] FromElement - FromClause{level=1} : edu.yang.entity.YugiohCard (generatedAlias0) -> yugiohcard0_
[DEBUG] 2019-11-11 19:14:00.055 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-11 19:14:00.056 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-11 19:14:00.056 [main] DotNode - getDataType() : cardSet -> org.hibernate.type.StringType@5bb51241
[DEBUG] 2019-11-11 19:14:00.056 [main] FromReferenceNode - Resolved : generatedAlias0.cardSet -> yugiohcard0_.card_set
[DEBUG] 2019-11-11 19:14:00.056 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-11-11 19:14:00.056 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} yugiohcard0_.id ) ( FromClause{level=1} yugioh_card yugiohcard0_ ) ( where ( like ( yugiohcard0_.card_set yugiohcard0_.id cardSet ) ? ) ) )
[DEBUG] 2019-11-11 19:14:00.056 [main] JoinProcessor - Using FROM fragment [yugioh_card yugiohcard0_]
[DEBUG] 2019-11-11 19:14:00.056 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-11-11 19:14:00.060 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (yugioh_card)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id as id1_1_' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
    |  \-[SQL_TOKEN] SqlFragment: 'yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[yugiohcard0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'yugioh_card yugiohcard0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=yugioh_card,tableAlias=yugiohcard0_,origin=null,columns={,className=edu.yang.entity.YugiohCard}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'yugiohcard0_.card_set' {propertyName=cardSet,dereferenceType=PRIMITIVE,getPropertyPath=cardSet,path=generatedAlias0.cardSet,tableAlias=yugiohcard0_,className=edu.yang.entity.YugiohCard,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
          |  \-[IDENT] IdentNode: 'cardSet' {originalText=cardSet}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@5bb51241}

[DEBUG] 2019-11-11 19:14:00.061 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:14:00.061 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.cardSet like :param0
[DEBUG] 2019-11-11 19:14:00.061 [main] QueryTranslatorImpl - SQL: select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.card_set like ?
[DEBUG] 2019-11-11 19:14:00.061 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:14:00.061 [main] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.card_set like ?
[DEBUG] 2019-11-11 19:14:00.066 [main] Loader - Result set row: 0
[DEBUG] 2019-11-11 19:14:00.066 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:00.068 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:00.068 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-11 19:14:00.068 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.068 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-11 19:14:00.068 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.068 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-11 19:14:00.068 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.068 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-11 19:14:00.068 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.068 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:00.068 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.068 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:00.068 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.068 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:00.068 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.068 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-11 19:14:00.069 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.069 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-11 19:14:00.069 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.069 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:00.069 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.069 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:00.069 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.071 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-11 19:14:00.073 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:00.073 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:00.075 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:00.075 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.075 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:00.075 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:00.077 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:00.077 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.077 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-11 19:14:00.077 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:00.081 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:00.081 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.081 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:00.081 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:00.081 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.081 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-11 19:14:00.081 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.081 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:14:00.081 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.081 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-11 19:14:00.081 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.081 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:00.081 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:00.082 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-11 19:14:00.082 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.082 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:13:59.0
[DEBUG] 2019-11-11 19:14:00.082 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.082 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:00.082 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.082 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:00.082 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:00.082 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-11 19:14:00.082 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.082 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:00.0
[DEBUG] 2019-11-11 19:14:00.082 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.082 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:00.082 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.083 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:00.083 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:00.083 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-11 19:14:00.083 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.083 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-11 19:14:00.083 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.083 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-11 19:14:00.083 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.083 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-11 19:14:00.083 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.083 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:00.083 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.083 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:00.083 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.083 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:00.083 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.083 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-11 19:14:00.083 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.083 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-11 19:14:00.083 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.083 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:00.083 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.083 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:00.083 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.084 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:00.084 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:00.084 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-11 19:14:00.084 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.084 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:00.0
[DEBUG] 2019-11-11 19:14:00.084 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.084 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-11 19:14:00.084 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.084 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:00.084 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:00.084 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:00.084 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:00.084 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:00.084 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:00.084 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.084 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:00.084 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:00.084 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-11-11 19:14:00.085 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:00.085 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:00.174 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where generatedAlias0.cardName like :param0
[DEBUG] 2019-11-11 19:14:00.175 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.cardName like :param0
[DEBUG] 2019-11-11 19:14:00.176 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:14:00.180 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'yang'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'YugiohCard'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'cardName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-11-11 19:14:00.180 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-11-11 19:14:00.180 [main] FromElement - FromClause{level=1} : edu.yang.entity.YugiohCard (generatedAlias0) -> yugiohcard0_
[DEBUG] 2019-11-11 19:14:00.180 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-11 19:14:00.180 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-11 19:14:00.180 [main] DotNode - getDataType() : cardName -> org.hibernate.type.StringType@5bb51241
[DEBUG] 2019-11-11 19:14:00.180 [main] FromReferenceNode - Resolved : generatedAlias0.cardName -> yugiohcard0_.card_name
[DEBUG] 2019-11-11 19:14:00.180 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-11-11 19:14:00.181 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} yugiohcard0_.id ) ( FromClause{level=1} yugioh_card yugiohcard0_ ) ( where ( like ( yugiohcard0_.card_name yugiohcard0_.id cardName ) ? ) ) )
[DEBUG] 2019-11-11 19:14:00.181 [main] JoinProcessor - Using FROM fragment [yugioh_card yugiohcard0_]
[DEBUG] 2019-11-11 19:14:00.181 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-11-11 19:14:00.182 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (yugioh_card)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id as id1_1_' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
    |  \-[SQL_TOKEN] SqlFragment: 'yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[yugiohcard0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'yugioh_card yugiohcard0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=yugioh_card,tableAlias=yugiohcard0_,origin=null,columns={,className=edu.yang.entity.YugiohCard}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'yugiohcard0_.card_name' {propertyName=cardName,dereferenceType=PRIMITIVE,getPropertyPath=cardName,path=generatedAlias0.cardName,tableAlias=yugiohcard0_,className=edu.yang.entity.YugiohCard,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
          |  \-[IDENT] IdentNode: 'cardName' {originalText=cardName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@5bb51241}

[DEBUG] 2019-11-11 19:14:00.182 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:14:00.182 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.cardName like :param0
[DEBUG] 2019-11-11 19:14:00.182 [main] QueryTranslatorImpl - SQL: select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.card_name like ?
[DEBUG] 2019-11-11 19:14:00.182 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:14:00.182 [main] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.card_name like ?
[DEBUG] 2019-11-11 19:14:00.186 [main] Loader - Result set row: 0
[DEBUG] 2019-11-11 19:14:00.186 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:00.186 [main] Loader - Result set row: 1
[DEBUG] 2019-11-11 19:14:00.186 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:00.186 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:00.186 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-11 19:14:00.186 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.186 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-11 19:14:00.188 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.188 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-11 19:14:00.188 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.189 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-11 19:14:00.189 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.189 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:00.189 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.189 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:00.189 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.189 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:00.189 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.189 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-11 19:14:00.189 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.189 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-11 19:14:00.189 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.189 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:00.189 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.189 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:00.189 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.189 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-11 19:14:00.192 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:00.193 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:00.198 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:00.198 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.198 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:00.198 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:00.198 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:00.199 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.199 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-11 19:14:00.200 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:00.200 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:00.201 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.201 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:00.201 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:00.201 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.201 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-11 19:14:00.201 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.201 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:14:00.201 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.201 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-11 19:14:00.201 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.201 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:00.201 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:00.201 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-11 19:14:00.202 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.202 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:00.0
[DEBUG] 2019-11-11 19:14:00.202 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.202 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:00.202 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.202 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:00.202 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:00.202 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-11 19:14:00.202 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.202 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:00.0
[DEBUG] 2019-11-11 19:14:00.202 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.202 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:00.203 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.203 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:00.203 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:00.203 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-11 19:14:00.203 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.203 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:00.0
[DEBUG] 2019-11-11 19:14:00.203 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.203 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-11 19:14:00.203 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.203 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:00.203 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:00.203 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:00.203 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:00.203 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:00.203 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:00.203 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.203 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:00.203 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:00.203 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-11-11 19:14:00.204 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:00.204 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:00.204 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-11 19:14:00.204 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.204 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-11 19:14:00.204 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.204 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-11 19:14:00.205 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.205 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-11 19:14:00.205 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.205 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:00.205 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.205 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:00.205 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.205 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:00.205 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.205 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-11 19:14:00.205 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.205 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-11 19:14:00.205 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.205 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:00.205 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.205 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:00.205 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.205 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:00.206 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:00.340 [main] SQL - select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:14:00.344 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:00.344 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:00.345 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:00.345 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:00.350 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:00.350 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:00.350 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:00.350 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-11 19:14:00.350 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.350 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-11 19:14:00.350 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.350 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-11 19:14:00.350 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:00.0
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:00.351 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.353 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-11 19:14:00.353 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.353 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:14:00.353 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.353 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-11 19:14:00.353 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.353 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:00.353 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:00.353 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-11 19:14:00.353 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.353 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:00.0
[DEBUG] 2019-11-11 19:14:00.353 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.353 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:00.354 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.354 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:00.354 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:00.354 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:00.354 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:00.354 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:00.355 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.355 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-11 19:14:00.360 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.360 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:00.360 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.363 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:00.363 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.364 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:00.364 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-11 19:14:00.364 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.364 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-11 19:14:00.364 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.364 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-11 19:14:00.364 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.365 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-11 19:14:00.365 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.365 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:00.365 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.365 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:00.365 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.365 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:00.365 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.365 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-11 19:14:00.365 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.365 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-11 19:14:00.365 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.365 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:00.365 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.365 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:00.365 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.365 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:00.365 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:00.365 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.365 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:00.365 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:00.365 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:14:00.365 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:00.365 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-11 19:14:00.367 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:00.367 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:00.370 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:00.370 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:00.371 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-11 19:14:00.371 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.371 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:00.0
[DEBUG] 2019-11-11 19:14:00.371 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.371 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-11 19:14:00.371 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.371 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:00.371 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:00.371 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:00.371 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:00.371 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:00.371 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:14:00.371 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCard#1
[DEBUG] 2019-11-11 19:14:00.371 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:00.499 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where generatedAlias0.cardType like :param0
[DEBUG] 2019-11-11 19:14:00.500 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.cardType like :param0
[DEBUG] 2019-11-11 19:14:00.500 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:14:00.501 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'yang'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'YugiohCard'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'cardType'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-11-11 19:14:00.502 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-11-11 19:14:00.502 [main] FromElement - FromClause{level=1} : edu.yang.entity.YugiohCard (generatedAlias0) -> yugiohcard0_
[DEBUG] 2019-11-11 19:14:00.503 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-11 19:14:00.503 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-11 19:14:00.503 [main] DotNode - getDataType() : cardType -> org.hibernate.type.StringType@5bb51241
[DEBUG] 2019-11-11 19:14:00.503 [main] FromReferenceNode - Resolved : generatedAlias0.cardType -> yugiohcard0_.card_type
[DEBUG] 2019-11-11 19:14:00.503 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-11-11 19:14:00.503 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} yugiohcard0_.id ) ( FromClause{level=1} yugioh_card yugiohcard0_ ) ( where ( like ( yugiohcard0_.card_type yugiohcard0_.id cardType ) ? ) ) )
[DEBUG] 2019-11-11 19:14:00.503 [main] JoinProcessor - Using FROM fragment [yugioh_card yugiohcard0_]
[DEBUG] 2019-11-11 19:14:00.503 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-11-11 19:14:00.506 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (yugioh_card)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id as id1_1_' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
    |  \-[SQL_TOKEN] SqlFragment: 'yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[yugiohcard0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'yugioh_card yugiohcard0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=yugioh_card,tableAlias=yugiohcard0_,origin=null,columns={,className=edu.yang.entity.YugiohCard}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'yugiohcard0_.card_type' {propertyName=cardType,dereferenceType=PRIMITIVE,getPropertyPath=cardType,path=generatedAlias0.cardType,tableAlias=yugiohcard0_,className=edu.yang.entity.YugiohCard,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
          |  \-[IDENT] IdentNode: 'cardType' {originalText=cardType}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@5bb51241}

[DEBUG] 2019-11-11 19:14:00.506 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:14:00.506 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.cardType like :param0
[DEBUG] 2019-11-11 19:14:00.506 [main] QueryTranslatorImpl - SQL: select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.card_type like ?
[DEBUG] 2019-11-11 19:14:00.506 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:14:00.506 [main] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.card_type like ?
[DEBUG] 2019-11-11 19:14:00.513 [main] Loader - Result set row: 0
[DEBUG] 2019-11-11 19:14:00.514 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:00.514 [main] Loader - Result set row: 1
[DEBUG] 2019-11-11 19:14:00.514 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:00.516 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:00.516 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-11 19:14:00.516 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.516 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-11 19:14:00.516 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.516 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-11 19:14:00.516 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.516 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-11 19:14:00.516 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.516 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:00.517 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.517 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:00.517 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.517 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:00.517 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.517 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-11 19:14:00.517 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.517 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-11 19:14:00.517 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.517 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:00.517 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.517 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:00.517 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.518 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-11 19:14:00.522 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:00.523 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:00.523 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:00.523 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.523 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:00.523 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:00.523 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:00.523 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.524 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-11 19:14:00.524 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:00.524 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:00.524 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.528 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:00.529 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:00.529 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.529 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-11 19:14:00.529 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.529 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:14:00.529 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.529 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-11 19:14:00.529 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.532 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:00.533 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:00.533 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-11 19:14:00.533 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.533 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:00.0
[DEBUG] 2019-11-11 19:14:00.533 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.533 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:00.533 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.533 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:00.533 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:00.533 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-11 19:14:00.533 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.536 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:00.0
[DEBUG] 2019-11-11 19:14:00.537 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.538 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:00.538 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.538 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:00.538 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:00.538 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-11 19:14:00.538 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.538 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:00.0
[DEBUG] 2019-11-11 19:14:00.538 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.538 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-11 19:14:00.538 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.538 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:00.538 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:00.538 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:00.540 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:00.540 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:00.540 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:00.540 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.540 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:00.541 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:00.541 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.541 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:00.542 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:00.699 [main] SQL - select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:14:00.701 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:00.702 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:00.704 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:00.705 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:00.705 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:00.706 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:00.706 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:00.706 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-11 19:14:00.706 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.706 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-11 19:14:00.706 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.706 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-11 19:14:00.706 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.706 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-11 19:14:00.706 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.706 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:00.706 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.706 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:00.706 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.707 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:00.707 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.707 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-11 19:14:00.707 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.707 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-11 19:14:00.707 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.707 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:00.707 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.707 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:00.707 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.707 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:00.707 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:00.707 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-11 19:14:00.707 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.707 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:00.0
[DEBUG] 2019-11-11 19:14:00.707 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.707 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:00.707 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.711 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:00.711 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:00.711 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:00.711 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.711 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-11 19:14:00.711 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.711 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:14:00.711 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.711 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-11 19:14:00.711 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.711 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:00.711 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:00.712 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-11 19:14:00.712 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.712 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:00.0
[DEBUG] 2019-11-11 19:14:00.712 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.712 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:00.712 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.712 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:00.712 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:00.712 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:00.712 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:00.712 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:00.714 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.714 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-11 19:14:00.718 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.718 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:00.718 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.718 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:00.719 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.719 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:00.719 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-11 19:14:00.719 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.719 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-11 19:14:00.719 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.719 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-11 19:14:00.719 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.719 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-11 19:14:00.719 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.719 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:00.719 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.719 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:00.719 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.719 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:00.720 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.720 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-11 19:14:00.720 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.720 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-11 19:14:00.720 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.720 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:00.720 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.720 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:00.720 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.720 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:00.720 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:00.720 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.720 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:00.720 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:00.720 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:14:00.721 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:00.721 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-11 19:14:00.724 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:00.724 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:00.724 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:00.725 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:00.725 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-11 19:14:00.725 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.725 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:00.0
[DEBUG] 2019-11-11 19:14:00.725 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.725 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-11 19:14:00.725 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.725 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:00.725 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:00.725 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:00.725 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:00.725 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:00.726 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:14:00.726 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCard#1
[DEBUG] 2019-11-11 19:14:00.726 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:00.826 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-11 19:14:00.829 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:00.829 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:00.830 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:00.830 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.831 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:00.831 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:00.831 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:00.831 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.831 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-11 19:14:00.831 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:00.832 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:00.832 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.832 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:00.832 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:00.832 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.832 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-11 19:14:00.835 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:00.0
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:00.836 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.837 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:00.837 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:00.837 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-11 19:14:00.837 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.837 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:00.0
[DEBUG] 2019-11-11 19:14:00.837 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.837 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:00.837 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.837 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:00.837 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:00.837 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-11 19:14:00.837 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.837 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-11 19:14:00.837 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.837 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-11 19:14:00.837 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.837 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-11 19:14:00.837 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.837 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:00.837 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.838 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:00.838 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.838 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:00.838 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.838 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-11 19:14:00.838 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.838 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-11 19:14:00.838 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.838 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:00.838 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.838 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:00.838 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.838 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:00.838 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:00.838 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-11 19:14:00.838 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.838 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:00.0
[DEBUG] 2019-11-11 19:14:00.838 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.838 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-11 19:14:00.838 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:00.838 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:00.838 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:00.840 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:00.840 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:00.840 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:00.840 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:00.840 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:00.840 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:00.840 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:00.840 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-11-11 19:14:00.840 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:00.847 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-11 19:14:00.847 [main] TransactionImpl - begin
[DEBUG] 2019-11-11 19:14:00.866 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-11 19:14:00.871 [main] SQL - insert into yugioh_card (card_index, card_name, card_rarity, card_set, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-11-11 19:14:00.883 [main] IdentifierGeneratorHelper - Natively generated identity: 3
[DEBUG] 2019-11-11 19:14:00.883 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:00.887 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-11 19:14:00.887 [main] SQL - insert into yugioh_card_history (price, update_date, yugiohCard_id) values (?, ?, ?)
[DEBUG] 2019-11-11 19:14:00.899 [main] IdentifierGeneratorHelper - Natively generated identity: 4
[DEBUG] 2019-11-11 19:14:00.899 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:00.900 [main] TransactionImpl - committing
[DEBUG] 2019-11-11 19:14:00.907 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-11 19:14:00.907 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-11 19:14:00.913 [main] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#3], was: [<unreferenced>] (initialized)
[DEBUG] 2019-11-11 19:14:00.916 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2019-11-11 19:14:00.916 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-11-11 19:14:00.917 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-11-11 19:14:00.917 [main] EntityPrinter - edu.yang.entity.YugiohCard{image=hello, entries=[edu.yang.entity.YugiohCardHistory#4], quantity=1, cardName=Buster Blader, cardSet=PSV, price=52.0, cardRarity=Ultra, cardType=Monster, id=3, user=edu.yang.entity.User#1, cardIndex=EN035, status=not sold}
[DEBUG] 2019-11-11 19:14:00.919 [main] EntityPrinter - edu.yang.entity.YugiohCardHistory{yugiohCard=edu.yang.entity.YugiohCard#3, price=80.0, id=4, ts=2019-11-11 19:14:00.887}
[DEBUG] 2019-11-11 19:14:00.923 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:00.924 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:00.924 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-11 19:14:00.924 [main] TransactionImpl - begin
[DEBUG] 2019-11-11 19:14:00.925 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-11 19:14:00.927 [main] SQL - insert into yugioh_card_history (price, update_date, yugiohCard_id) values (?, ?, ?)
[DEBUG] 2019-11-11 19:14:00.930 [main] IdentifierGeneratorHelper - Natively generated identity: 5
[DEBUG] 2019-11-11 19:14:00.930 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:00.930 [main] TransactionImpl - committing
[DEBUG] 2019-11-11 19:14:00.931 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-11 19:14:00.931 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-11 19:14:00.931 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-11-11 19:14:00.931 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-11-11 19:14:00.931 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-11-11 19:14:00.931 [main] EntityPrinter - edu.yang.entity.YugiohCardHistory{yugiohCard=edu.yang.entity.YugiohCard#3, price=80.0, id=5, ts=2019-11-11 19:14:00.926}
[DEBUG] 2019-11-11 19:14:00.934 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:00.936 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:01.116 [main] SQL - select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:14:01.118 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:01.119 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:01.120 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.120 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:01.120 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-11 19:14:01.120 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.120 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-11 19:14:01.120 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.120 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-11 19:14:01.120 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.120 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-11 19:14:01.120 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.120 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:01.120 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.120 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.120 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.120 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:01.120 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.120 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-11 19:14:01.120 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.120 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-11 19:14:01.120 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.120 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:01.120 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.120 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:01.120 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.121 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:01.121 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:01.121 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-11 19:14:01.121 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.121 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.121 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.121 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-11 19:14:01.121 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.121 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:01.124 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:01.124 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.124 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.124 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-11 19:14:01.124 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.124 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:14:01.124 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.124 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-11 19:14:01.124 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.124 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:01.124 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.124 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.124 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.125 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.125 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.125 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-11 19:14:01.126 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.126 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:01.127 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.128 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:01.128 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.128 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:01.128 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-11 19:14:01.128 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.128 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-11 19:14:01.128 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.128 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-11 19:14:01.128 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.128 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-11 19:14:01.128 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.128 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:01.128 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.128 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.128 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.128 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:01.128 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.128 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-11 19:14:01.128 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.128 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-11 19:14:01.128 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.128 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:01.128 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.128 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:01.128 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.130 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:01.130 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:01.130 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.130 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:01.130 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.130 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:14:01.130 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.130 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-11 19:14:01.131 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.132 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:01.133 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.133 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:01.133 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.133 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:01.133 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-11 19:14:01.133 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.133 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.133 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.133 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:01.133 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.134 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:01.134 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:01.134 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-11 19:14:01.134 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.134 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.134 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.134 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:01.134 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.134 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:01.134 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.134 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.134 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.134 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.134 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:14:01.134 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCard#2
[DEBUG] 2019-11-11 19:14:01.134 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:01.137 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-11 19:14:01.137 [main] TransactionImpl - begin
[DEBUG] 2019-11-11 19:14:01.145 [main] TransactionImpl - committing
[DEBUG] 2019-11-11 19:14:01.145 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-11 19:14:01.145 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-11 19:14:01.145 [main] Collections - Collection dereferenced: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.145 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 2 deletions to 2 objects
[DEBUG] 2019-11-11 19:14:01.145 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2019-11-11 19:14:01.145 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-11-11 19:14:01.146 [main] EntityPrinter - edu.yang.entity.YugiohCard{image=null, entries=[edu.yang.entity.YugiohCardHistory#3], quantity=1, cardName=Dark Magician Girl, cardSet=MFC, price=100.0, cardRarity=Secret, cardType=Monster, id=2, user=edu.yang.entity.User#1, cardIndex=EN000, status=unsold}
[DEBUG] 2019-11-11 19:14:01.146 [main] EntityPrinter - edu.yang.entity.YugiohCardHistory{yugiohCard=edu.yang.entity.YugiohCard#2, price=150.0, id=3, ts=2019-11-11 19:14:01.0}
[DEBUG] 2019-11-11 19:14:01.155 [main] SQL - delete from yugioh_card_history where id=?
[DEBUG] 2019-11-11 19:14:01.160 [main] SQL - delete from yugioh_card where id=?
[DEBUG] 2019-11-11 19:14:01.163 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:01.166 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:01.166 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2019-11-11 19:14:01.245 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where generatedAlias0.cardRarity like :param0
[DEBUG] 2019-11-11 19:14:01.245 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.cardRarity like :param0
[DEBUG] 2019-11-11 19:14:01.246 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:14:01.246 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'yang'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'YugiohCard'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'cardRarity'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-11-11 19:14:01.246 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-11-11 19:14:01.247 [main] FromElement - FromClause{level=1} : edu.yang.entity.YugiohCard (generatedAlias0) -> yugiohcard0_
[DEBUG] 2019-11-11 19:14:01.247 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-11 19:14:01.248 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-11 19:14:01.248 [main] DotNode - getDataType() : cardRarity -> org.hibernate.type.StringType@5bb51241
[DEBUG] 2019-11-11 19:14:01.248 [main] FromReferenceNode - Resolved : generatedAlias0.cardRarity -> yugiohcard0_.card_rarity
[DEBUG] 2019-11-11 19:14:01.248 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-11-11 19:14:01.248 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} yugiohcard0_.id ) ( FromClause{level=1} yugioh_card yugiohcard0_ ) ( where ( like ( yugiohcard0_.card_rarity yugiohcard0_.id cardRarity ) ? ) ) )
[DEBUG] 2019-11-11 19:14:01.249 [main] JoinProcessor - Using FROM fragment [yugioh_card yugiohcard0_]
[DEBUG] 2019-11-11 19:14:01.249 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-11-11 19:14:01.249 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (yugioh_card)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id as id1_1_' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
    |  \-[SQL_TOKEN] SqlFragment: 'yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[yugiohcard0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'yugioh_card yugiohcard0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=yugioh_card,tableAlias=yugiohcard0_,origin=null,columns={,className=edu.yang.entity.YugiohCard}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'yugiohcard0_.card_rarity' {propertyName=cardRarity,dereferenceType=PRIMITIVE,getPropertyPath=cardRarity,path=generatedAlias0.cardRarity,tableAlias=yugiohcard0_,className=edu.yang.entity.YugiohCard,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
          |  \-[IDENT] IdentNode: 'cardRarity' {originalText=cardRarity}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@5bb51241}

[DEBUG] 2019-11-11 19:14:01.249 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:14:01.249 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.cardRarity like :param0
[DEBUG] 2019-11-11 19:14:01.249 [main] QueryTranslatorImpl - SQL: select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.card_rarity like ?
[DEBUG] 2019-11-11 19:14:01.249 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:14:01.249 [main] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_index as card_ind2_1_, yugiohcard0_.card_name as card_nam3_1_, yugiohcard0_.card_rarity as card_rar4_1_, yugiohcard0_.card_set as card_set5_1_, yugiohcard0_.card_type as card_typ6_1_, yugiohcard0_.image as image7_1_, yugiohcard0_.price as price8_1_, yugiohcard0_.qty as qty9_1_, yugiohcard0_.status as status10_1_, yugiohcard0_.user_id as user_id11_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.card_rarity like ?
[DEBUG] 2019-11-11 19:14:01.254 [main] Loader - Result set row: 0
[DEBUG] 2019-11-11 19:14:01.254 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:01.254 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:01.254 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-11 19:14:01.254 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.254 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-11 19:14:01.254 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.255 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-11 19:14:01.255 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.255 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-11 19:14:01.255 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.255 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:01.255 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.255 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.255 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.255 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:01.255 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.255 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-11 19:14:01.255 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.255 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-11 19:14:01.255 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.255 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:01.255 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.255 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:01.255 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.255 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-11 19:14:01.259 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:01.259 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:01.261 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.261 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.261 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:01.261 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:01.261 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.262 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.263 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-11 19:14:01.263 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:01.263 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.263 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.263 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:01.263 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.263 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.264 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-11 19:14:01.264 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.264 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:14:01.264 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.264 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-11 19:14:01.264 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.264 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:01.264 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:01.264 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-11 19:14:01.264 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.264 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-11 19:14:01.264 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.264 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-11 19:14:01.264 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.264 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-11 19:14:01.264 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.264 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:01.264 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.264 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.264 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.264 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:01.264 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.264 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-11 19:14:01.264 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.265 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-11 19:14:01.265 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.265 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:01.265 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.265 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:01.265 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.265 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:01.265 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:01.265 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-11 19:14:01.265 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.265 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.265 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.265 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:01.265 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.267 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:01.267 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:01.267 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-11 19:14:01.267 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.267 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.267 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.267 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:01.267 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.267 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:01.267 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:01.267 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-11 19:14:01.267 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.267 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.268 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.268 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-11 19:14:01.269 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.269 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:01.269 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.269 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.269 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.269 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.269 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:01.269 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.269 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:01.269 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.269 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-11-11 19:14:01.269 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:01.270 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:01.400 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-11 19:14:01.402 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:01.402 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:01.403 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.403 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.403 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:01.403 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:01.403 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.405 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.405 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-11 19:14:01.405 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:01.405 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.405 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.405 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:01.405 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.405 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.406 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-11 19:14:01.406 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.406 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:14:01.406 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.406 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-11 19:14:01.406 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.406 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:01.406 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:01.406 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-11 19:14:01.406 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:01.407 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.409 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:01.409 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:01.409 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-11 19:14:01.409 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.409 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.409 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.409 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:01.409 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.410 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:01.410 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:01.410 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-11 19:14:01.410 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.410 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-11 19:14:01.410 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.410 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-11 19:14:01.410 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.410 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-11 19:14:01.410 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.410 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:01.410 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.410 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.410 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.410 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:01.410 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.410 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-11 19:14:01.410 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.410 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-11 19:14:01.410 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.410 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:01.410 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.410 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:01.410 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.411 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:01.412 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:01.412 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-11 19:14:01.412 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.412 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.412 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.412 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-11 19:14:01.412 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.412 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:01.412 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.412 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.413 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.413 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.413 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:01.413 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.413 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:01.413 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.413 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-11-11 19:14:01.413 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:01.416 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-11 19:14:01.416 [main] TransactionImpl - begin
[DEBUG] 2019-11-11 19:14:01.419 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-11 19:14:01.419 [main] SQL - insert into yugioh_card (card_index, card_name, card_rarity, card_set, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-11-11 19:14:01.423 [main] IdentifierGeneratorHelper - Natively generated identity: 3
[DEBUG] 2019-11-11 19:14:01.423 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.425 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-11 19:14:01.425 [main] SQL - insert into yugioh_card_history (price, update_date, yugiohCard_id) values (?, ?, ?)
[DEBUG] 2019-11-11 19:14:01.427 [main] IdentifierGeneratorHelper - Natively generated identity: 4
[DEBUG] 2019-11-11 19:14:01.427 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.427 [main] TransactionImpl - committing
[DEBUG] 2019-11-11 19:14:01.427 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-11 19:14:01.427 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-11 19:14:01.429 [main] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#3], was: [<unreferenced>] (initialized)
[DEBUG] 2019-11-11 19:14:01.430 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2019-11-11 19:14:01.430 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-11-11 19:14:01.430 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-11-11 19:14:01.432 [main] EntityPrinter - edu.yang.entity.YugiohCard{image=null, entries=[edu.yang.entity.YugiohCardHistory#4], quantity=0, cardName=Dark Magician of Chaos, cardSet=null, price=0.0, cardRarity=null, cardType=Monster, id=3, user=edu.yang.entity.User#1, cardIndex=null, status=null}
[DEBUG] 2019-11-11 19:14:01.432 [main] EntityPrinter - edu.yang.entity.YugiohCardHistory{yugiohCard=edu.yang.entity.YugiohCard#3, price=35.0, id=4, ts=2019-11-11 19:14:01.425}
[DEBUG] 2019-11-11 19:14:01.433 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:01.434 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:01.436 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-11 19:14:01.436 [main] TransactionImpl - begin
[DEBUG] 2019-11-11 19:14:01.437 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-11 19:14:01.440 [main] SQL - insert into yugioh_card_history (price, update_date, yugiohCard_id) values (?, ?, ?)
[DEBUG] 2019-11-11 19:14:01.441 [main] IdentifierGeneratorHelper - Natively generated identity: 5
[DEBUG] 2019-11-11 19:14:01.441 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.441 [main] TransactionImpl - committing
[DEBUG] 2019-11-11 19:14:01.441 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-11 19:14:01.442 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-11 19:14:01.442 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-11-11 19:14:01.442 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-11-11 19:14:01.442 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-11-11 19:14:01.443 [main] EntityPrinter - edu.yang.entity.YugiohCardHistory{yugiohCard=edu.yang.entity.YugiohCard#3, price=35.0, id=5, ts=2019-11-11 19:14:01.437}
[DEBUG] 2019-11-11 19:14:01.445 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:01.447 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:01.549 [main] SQL - select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_, yugiohcard1_.id as id1_1_1_, yugiohcard1_.card_index as card_ind2_1_1_, yugiohcard1_.card_name as card_nam3_1_1_, yugiohcard1_.card_rarity as card_rar4_1_1_, yugiohcard1_.card_set as card_set5_1_1_, yugiohcard1_.card_type as card_typ6_1_1_, yugiohcard1_.image as image7_1_1_, yugiohcard1_.price as price8_1_1_, yugiohcard1_.qty as qty9_1_1_, yugiohcard1_.status as status10_1_1_, yugiohcard1_.user_id as user_id11_1_1_, user2_.id as id1_0_2_, user2_.user_password as user_pas2_0_2_, user2_.user_role as user_rol3_0_2_, user2_.user_name as user_nam4_0_2_ from yugioh_card_history yugiohcard0_ left outer join yugioh_card yugiohcard1_ on yugiohcard0_.yugiohCard_id=yugiohcard1_.id left outer join user user2_ on yugiohcard1_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:14:01.552 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:01.555 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:01.555 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:01.555 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-11 19:14:01.555 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.555 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.555 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.555 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-11 19:14:01.557 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.559 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:01.559 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.559 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.560 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-11 19:14:01.562 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.562 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:01.562 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.562 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:01.562 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.562 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:01.562 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-11 19:14:01.562 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.562 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-11 19:14:01.562 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.562 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-11 19:14:01.562 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.562 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-11 19:14:01.562 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.562 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:01.562 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.562 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.562 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.562 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:01.562 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.562 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-11 19:14:01.562 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.562 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-11 19:14:01.562 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.562 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:01.562 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.562 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:01.562 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.562 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:01.562 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:01.562 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.562 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:01.562 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.566 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:14:01.567 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.567 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-11 19:14:01.567 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.567 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:01.568 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.568 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:01.568 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-11 19:14:01.568 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.568 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.571 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.571 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-11 19:14:01.571 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.571 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:01.571 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.572 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.572 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.572 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.572 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:14:01.572 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.572 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-11 19:14:01.573 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.573 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:01.573 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.574 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:01.575 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.575 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:01.575 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-11 19:14:01.575 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.575 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.575 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.575 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:01.575 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.577 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:01.577 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.577 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.577 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.577 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.577 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:14:01.577 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCardHistory#1
[DEBUG] 2019-11-11 19:14:01.577 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:01.578 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-11 19:14:01.578 [main] TransactionImpl - begin
[DEBUG] 2019-11-11 19:14:01.580 [main] TransactionImpl - committing
[DEBUG] 2019-11-11 19:14:01.580 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-11 19:14:01.580 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-11 19:14:01.580 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2019-11-11 19:14:01.580 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-11-11 19:14:01.580 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-11-11 19:14:01.580 [main] EntityPrinter - edu.yang.entity.YugiohCardHistory{yugiohCard=null, price=50.0, id=1, ts=2019-11-11 19:14:01.0}
[DEBUG] 2019-11-11 19:14:01.580 [main] SQL - delete from yugioh_card_history where id=?
[DEBUG] 2019-11-11 19:14:01.582 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:01.583 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:01.583 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2019-11-11 19:14:01.584 [main] SQL - select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:14:01.588 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:01.588 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:01.588 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.588 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:01.588 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-11 19:14:01.588 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.588 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-11 19:14:01.588 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.588 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-11 19:14:01.588 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.588 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-11 19:14:01.588 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.588 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:01.588 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.588 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.589 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.589 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:01.589 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.589 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-11 19:14:01.589 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.589 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-11 19:14:01.589 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.589 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:01.589 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.589 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:01.589 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.590 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:01.590 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:01.590 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-11 19:14:01.590 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.590 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.590 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.590 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:01.590 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.590 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:01.590 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:01.590 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.590 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.590 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-11 19:14:01.590 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.590 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:14:01.590 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.590 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-11 19:14:01.590 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.590 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:01.590 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.590 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.590 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.590 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.591 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.591 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-11 19:14:01.593 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.593 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:01.593 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.593 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:01.593 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.593 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:01.593 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-11 19:14:01.593 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.593 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-11 19:14:01.593 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.593 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-11 19:14:01.593 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.593 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-11 19:14:01.593 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.593 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:01.594 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.594 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.594 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.594 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:01.594 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.594 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-11 19:14:01.594 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.594 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-11 19:14:01.594 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.594 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:01.594 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.594 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:01.594 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.594 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:01.594 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:01.594 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.594 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:01.594 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.594 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:14:01.594 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.594 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-11 19:14:01.596 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.596 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:01.596 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.596 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:01.596 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-11 19:14:01.596 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.596 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.596 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.596 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-11 19:14:01.596 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.598 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:01.598 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.598 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.598 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.598 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.598 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:14:01.598 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCard#1
[DEBUG] 2019-11-11 19:14:01.598 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:01.599 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCardHistory as generatedAlias0
[DEBUG] 2019-11-11 19:14:01.599 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.YugiohCardHistory as generatedAlias0
[DEBUG] 2019-11-11 19:14:01.601 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:14:01.602 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'edu'
       |     |  |  |  \-[IDENT] Node: 'yang'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'YugiohCardHistory'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2019-11-11 19:14:01.602 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-11-11 19:14:01.602 [main] FromElement - FromClause{level=1} : edu.yang.entity.YugiohCardHistory (generatedAlias0) -> yugiohcard0_
[DEBUG] 2019-11-11 19:14:01.603 [main] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-11-11 19:14:01.603 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-11-11 19:14:01.603 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} yugiohcard0_.id ) ( FromClause{level=1} yugioh_card_history yugiohcard0_ ) )
[DEBUG] 2019-11-11 19:14:01.603 [main] JoinProcessor - Using FROM fragment [yugioh_card_history yugiohcard0_]
[DEBUG] 2019-11-11 19:14:01.603 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-11-11 19:14:01.606 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (yugioh_card_history)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id as id1_2_' {alias=generatedAlias0, className=edu.yang.entity.YugiohCardHistory, tableAlias=yugiohcard0_}
    |  \-[SQL_TOKEN] SqlFragment: 'yugiohcard0_.price as price2_2_, yugiohcard0_.update_date as update_d3_2_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[yugiohcard0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'yugioh_card_history yugiohcard0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=yugioh_card_history,tableAlias=yugiohcard0_,origin=null,columns={,className=edu.yang.entity.YugiohCardHistory}}

[DEBUG] 2019-11-11 19:14:01.606 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:14:01.606 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.YugiohCardHistory as generatedAlias0
[DEBUG] 2019-11-11 19:14:01.606 [main] QueryTranslatorImpl - SQL: select yugiohcard0_.id as id1_2_, yugiohcard0_.price as price2_2_, yugiohcard0_.update_date as update_d3_2_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_ from yugioh_card_history yugiohcard0_
[DEBUG] 2019-11-11 19:14:01.606 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:14:01.606 [main] SQL - select yugiohcard0_.id as id1_2_, yugiohcard0_.price as price2_2_, yugiohcard0_.update_date as update_d3_2_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_ from yugioh_card_history yugiohcard0_
[DEBUG] 2019-11-11 19:14:01.607 [main] Loader - Result set row: 0
[DEBUG] 2019-11-11 19:14:01.607 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:01.607 [main] Loader - Result set row: 1
[DEBUG] 2019-11-11 19:14:01.607 [main] Loader - Result row: EntityKey[edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:01.609 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:01.609 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-11 19:14:01.609 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.609 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.609 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.609 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:01.609 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.609 [main] SQL - select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:14:01.612 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:01.612 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:01.613 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.613 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:01.613 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-11 19:14:01.613 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.613 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-11 19:14:01.613 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.613 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-11 19:14:01.613 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.613 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-11 19:14:01.613 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.613 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:01.613 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.613 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.613 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.613 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:01.613 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.613 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-11 19:14:01.613 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.613 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-11 19:14:01.613 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.613 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:01.613 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.613 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:01.613 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.615 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:01.615 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:01.615 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.615 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.615 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-11 19:14:01.615 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.615 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:14:01.615 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.615 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-11 19:14:01.615 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.615 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:01.615 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.615 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.615 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.615 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.615 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCard#1
[DEBUG] 2019-11-11 19:14:01.616 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:01.616 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:01.616 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-11 19:14:01.616 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.616 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.616 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.616 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-11 19:14:01.616 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.616 [main] SQL - select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:14:01.620 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:01.620 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:01.621 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:01.621 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.621 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.621 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.621 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.621 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCard#2
[DEBUG] 2019-11-11 19:14:01.621 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:01.621 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.621 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-11 19:14:01.622 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.622 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:01.622 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.622 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:01.623 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.623 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:01.623 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.623 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:01.623 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.624 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:14:01.624 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:01.702 [main] SQL - select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_, yugiohcard1_.id as id1_1_1_, yugiohcard1_.card_index as card_ind2_1_1_, yugiohcard1_.card_name as card_nam3_1_1_, yugiohcard1_.card_rarity as card_rar4_1_1_, yugiohcard1_.card_set as card_set5_1_1_, yugiohcard1_.card_type as card_typ6_1_1_, yugiohcard1_.image as image7_1_1_, yugiohcard1_.price as price8_1_1_, yugiohcard1_.qty as qty9_1_1_, yugiohcard1_.status as status10_1_1_, yugiohcard1_.user_id as user_id11_1_1_, user2_.id as id1_0_2_, user2_.user_password as user_pas2_0_2_, user2_.user_role as user_rol3_0_2_, user2_.user_name as user_nam4_0_2_ from yugioh_card_history yugiohcard0_ left outer join yugioh_card yugiohcard1_ on yugiohcard0_.yugiohCard_id=yugiohcard1_.id left outer join user user2_ on yugiohcard1_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:14:01.705 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:01.705 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:01.705 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:01.705 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-11 19:14:01.705 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.705 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.705 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.705 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:01.705 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.705 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:01.705 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:01.705 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-11 19:14:01.706 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.706 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-11 19:14:01.706 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.706 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-11 19:14:01.706 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.706 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-11 19:14:01.706 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.706 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:01.706 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.706 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.706 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.706 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:01.706 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.706 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-11 19:14:01.706 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.706 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-11 19:14:01.706 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.706 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:01.706 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.706 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:01.706 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.707 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:01.707 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:01.707 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.707 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.707 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-11 19:14:01.707 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.707 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:14:01.707 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.707 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-11 19:14:01.707 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.707 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:01.707 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.707 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.709 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-11 19:14:01.711 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.711 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:01.712 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.712 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:01.712 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.712 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:01.712 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-11 19:14:01.712 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.712 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-11 19:14:01.712 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.712 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-11 19:14:01.712 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.712 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-11 19:14:01.712 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.712 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:01.712 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.712 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.712 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.712 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:01.712 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.712 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-11 19:14:01.712 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.712 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-11 19:14:01.712 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.712 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:01.712 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.712 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:01.712 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.712 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:01.712 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:01.712 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.712 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:01.712 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.712 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:14:01.712 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.712 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-11 19:14:01.715 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.715 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:01.716 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.717 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:01.717 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-11 19:14:01.717 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.717 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.717 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.717 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-11 19:14:01.717 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.717 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:01.717 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.717 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.717 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.717 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.717 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:14:01.717 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.717 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-11 19:14:01.720 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.720 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:01.720 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.720 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:01.720 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.721 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:01.721 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-11 19:14:01.721 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.721 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.721 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.721 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:01.721 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.721 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:01.721 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.721 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.721 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.721 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.721 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:14:01.721 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCardHistory#1
[DEBUG] 2019-11-11 19:14:01.721 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:01.831 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-11 19:14:01.832 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:01.833 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:01.833 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.User.cards#2]
[DEBUG] 2019-11-11 19:14:01.833 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#2]
[DEBUG] 2019-11-11 19:14:01.833 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.833 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.833 [main] TwoPhaseLoad - Processing attribute `password` : value = greenMantaRays
[DEBUG] 2019-11-11 19:14:01.833 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.833 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:14:01.833 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.833 [main] TwoPhaseLoad - Processing attribute `userName` : value = johnBones2019
[DEBUG] 2019-11-11 19:14:01.833 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.833 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#2]
[DEBUG] 2019-11-11 19:14:01.833 [main] CollectionLoadContext - No collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.833 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:01.833 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#2]
[DEBUG] 2019-11-11 19:14:01.833 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:01.833 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.833 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#2
[DEBUG] 2019-11-11 19:14:01.833 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:01.834 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-11 19:14:01.834 [main] TransactionImpl - begin
[DEBUG] 2019-11-11 19:14:01.836 [main] TransactionImpl - committing
[DEBUG] 2019-11-11 19:14:01.836 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-11 19:14:01.836 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-11 19:14:01.836 [main] Collections - Collection dereferenced: [edu.yang.entity.User.cards#2]
[DEBUG] 2019-11-11 19:14:01.836 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2019-11-11 19:14:01.836 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2019-11-11 19:14:01.836 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-11-11 19:14:01.836 [main] EntityPrinter - edu.yang.entity.User{password=greenMantaRays, cards=[], role=general, id=2, userName=johnBones2019}
[DEBUG] 2019-11-11 19:14:01.836 [main] SQL - delete from user where id=?
[DEBUG] 2019-11-11 19:14:01.839 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:01.839 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:01.839 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2019-11-11 19:14:01.840 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2019-11-11 19:14:01.840 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.User as generatedAlias0
[DEBUG] 2019-11-11 19:14:01.840 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:14:01.841 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'edu'
       |     |  |  |  \-[IDENT] Node: 'yang'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2019-11-11 19:14:01.841 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-11-11 19:14:01.841 [main] FromElement - FromClause{level=1} : edu.yang.entity.User (generatedAlias0) -> user0_
[DEBUG] 2019-11-11 19:14:01.842 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2019-11-11 19:14:01.842 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-11-11 19:14:01.842 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) )
[DEBUG] 2019-11-11 19:14:01.842 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2019-11-11 19:14:01.842 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-11-11 19:14:01.842 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_0_' {alias=generatedAlias0, className=edu.yang.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=edu.yang.entity.User}}

[DEBUG] 2019-11-11 19:14:01.842 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:14:01.844 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.User as generatedAlias0
[DEBUG] 2019-11-11 19:14:01.844 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_0_, user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_ from user user0_
[DEBUG] 2019-11-11 19:14:01.844 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:14:01.844 [main] SQL - select user0_.id as id1_0_, user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_ from user user0_
[DEBUG] 2019-11-11 19:14:01.846 [main] Loader - Result set row: 0
[DEBUG] 2019-11-11 19:14:01.846 [main] Loader - Result row: EntityKey[edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:01.847 [main] Loader - Result set row: 1
[DEBUG] 2019-11-11 19:14:01.847 [main] Loader - Result row: EntityKey[edu.yang.entity.User#3]
[DEBUG] 2019-11-11 19:14:01.847 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:01.847 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.847 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.847 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-11 19:14:01.847 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.847 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:14:01.847 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.847 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-11 19:14:01.847 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.847 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:01.847 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#3]
[DEBUG] 2019-11-11 19:14:01.847 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.847 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.847 [main] TwoPhaseLoad - Processing attribute `password` : value = greenMantaRays
[DEBUG] 2019-11-11 19:14:01.847 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.847 [main] TwoPhaseLoad - Processing attribute `role` : value = admin
[DEBUG] 2019-11-11 19:14:01.847 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.847 [main] TwoPhaseLoad - Processing attribute `userName` : value = terryBones2019
[DEBUG] 2019-11-11 19:14:01.847 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.847 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#3]
[DEBUG] 2019-11-11 19:14:01.848 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#3]
[DEBUG] 2019-11-11 19:14:01.848 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-11 19:14:01.849 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#3]
[DEBUG] 2019-11-11 19:14:01.849 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:01.849 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#3]
[DEBUG] 2019-11-11 19:14:01.849 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:01.849 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.849 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:14:01.849 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.849 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-11 19:14:01.852 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.852 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:01.852 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.852 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:01.852 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.853 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:01.853 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-11 19:14:01.853 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.853 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-11 19:14:01.853 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.853 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-11 19:14:01.853 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.853 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-11 19:14:01.853 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.853 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:01.853 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.853 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.854 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:01.854 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:01.854 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.854 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:01.854 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.854 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:14:01.854 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.855 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-11 19:14:01.857 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.857 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:01.858 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.858 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:01.858 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-11 19:14:01.858 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.858 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.858 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.858 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-11 19:14:01.858 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.858 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:01.858 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.858 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.858 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.858 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.859 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:14:01.859 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.859 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-11 19:14:01.860 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.860 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:01.860 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.860 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:01.862 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.862 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:01.862 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-11 19:14:01.862 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.862 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.862 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.862 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:01.862 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.862 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:01.862 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:01.862 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-11 19:14:01.862 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.862 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.862 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.862 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:01.862 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.862 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:01.862 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.862 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.862 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.862 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.862 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:14:01.862 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:01.949 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-11 19:14:01.953 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:01.953 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:01.954 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.955 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.955 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:01.955 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:01.959 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.959 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.959 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-11 19:14:01.959 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:01.961 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.961 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.961 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:01.961 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.961 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.961 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-11 19:14:01.961 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.961 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:14:01.961 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.961 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-11 19:14:01.961 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.961 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:01.961 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:01.961 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-11 19:14:01.961 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.961 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-11 19:14:01.961 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.961 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-11 19:14:01.961 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.961 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-11 19:14:01.961 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.961 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:01.961 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.961 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.961 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.963 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:01.963 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.963 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-11 19:14:01.963 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.963 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-11 19:14:01.963 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.963 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:01.963 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.963 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:01.963 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.963 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:01.963 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:01.963 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-11 19:14:01.963 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.963 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.963 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.963 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:01.963 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.963 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:01.963 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:01.963 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-11 19:14:01.963 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.963 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.963 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.964 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:01.964 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.964 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:01.964 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:01.964 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-11 19:14:01.964 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.964 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-11 19:14:01.964 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.964 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-11 19:14:01.964 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.964 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-11 19:14:01.965 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.965 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:01.965 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.965 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:01.965 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.965 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:01.965 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.965 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-11 19:14:01.965 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.965 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-11 19:14:01.965 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.965 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:01.965 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.965 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:01.965 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.965 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:01.965 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:01.965 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-11 19:14:01.965 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.965 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:01.0
[DEBUG] 2019-11-11 19:14:01.966 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.966 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-11 19:14:01.966 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:01.966 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:01.966 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.966 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:01.966 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:01.966 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:01.966 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:01.966 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:01.966 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:01.967 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:01.967 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-11-11 19:14:01.967 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:02.079 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-11 19:14:02.082 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:02.082 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:02.082 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:02.082 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:02.082 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:02.083 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:02.083 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:02.083 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:02.083 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-11 19:14:02.083 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:02.083 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:02.083 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:02.083 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:02.083 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:02.083 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.083 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-11 19:14:02.083 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.083 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:14:02.083 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.083 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-11 19:14:02.083 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.083 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:02.084 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:02.084 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-11 19:14:02.084 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.084 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-11 19:14:02.084 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.084 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-11 19:14:02.084 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.084 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-11 19:14:02.084 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.084 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:02.084 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.084 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:02.084 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.084 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:02.084 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.084 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:02.0
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:02.0
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.085 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:02.086 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.086 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:02.086 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.086 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-11 19:14:02.086 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.086 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-11 19:14:02.086 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.086 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:02.086 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.086 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:02.086 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.086 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:02.086 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:02.086 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-11 19:14:02.086 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.086 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:02.0
[DEBUG] 2019-11-11 19:14:02.086 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.086 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-11 19:14:02.086 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.086 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:02.086 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:02.087 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:02.087 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:02.087 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:02.087 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:02.087 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:02.087 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:02.087 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:02.087 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-11-11 19:14:02.087 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:02.250 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-11 19:14:02.250 [main] TransactionImpl - begin
[DEBUG] 2019-11-11 19:14:02.251 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-11 19:14:02.251 [main] SQL - insert into user (user_password, user_role, user_name) values (?, ?, ?)
[DEBUG] 2019-11-11 19:14:02.252 [main] IdentifierGeneratorHelper - Natively generated identity: 4
[DEBUG] 2019-11-11 19:14:02.252 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:02.253 [main] TransactionImpl - committing
[DEBUG] 2019-11-11 19:14:02.253 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-11 19:14:02.253 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-11 19:14:02.253 [main] Collections - Collection found: [edu.yang.entity.User.cards#4], was: [<unreferenced>] (initialized)
[DEBUG] 2019-11-11 19:14:02.253 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-11-11 19:14:02.253 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-11-11 19:14:02.253 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-11-11 19:14:02.253 [main] EntityPrinter - edu.yang.entity.User{password=brownTurnip, cards=[], role=general, id=4, userName=redRainbow19}
[DEBUG] 2019-11-11 19:14:02.254 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:02.254 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:02.255 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-11 19:14:02.257 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:02.257 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:02.258 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.User.cards#4]
[DEBUG] 2019-11-11 19:14:02.258 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#4]
[DEBUG] 2019-11-11 19:14:02.258 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:02.258 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.258 [main] TwoPhaseLoad - Processing attribute `password` : value = brownTurnip
[DEBUG] 2019-11-11 19:14:02.258 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.258 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:14:02.258 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.258 [main] TwoPhaseLoad - Processing attribute `userName` : value = redRainbow19
[DEBUG] 2019-11-11 19:14:02.258 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.258 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#4]
[DEBUG] 2019-11-11 19:14:02.258 [main] CollectionLoadContext - No collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:02.258 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:02.258 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#4]
[DEBUG] 2019-11-11 19:14:02.286 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:02.286 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:02.286 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#4
[DEBUG] 2019-11-11 19:14:02.286 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:02.360 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.role like :param0
[DEBUG] 2019-11-11 19:14:02.361 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.User as generatedAlias0 where generatedAlias0.role like :param0
[DEBUG] 2019-11-11 19:14:02.361 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:14:02.361 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'yang'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'role'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-11-11 19:14:02.361 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-11-11 19:14:02.362 [main] FromElement - FromClause{level=1} : edu.yang.entity.User (generatedAlias0) -> user0_
[DEBUG] 2019-11-11 19:14:02.362 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2019-11-11 19:14:02.362 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2019-11-11 19:14:02.362 [main] DotNode - getDataType() : role -> org.hibernate.type.StringType@5bb51241
[DEBUG] 2019-11-11 19:14:02.362 [main] FromReferenceNode - Resolved : generatedAlias0.role -> user0_.user_role
[DEBUG] 2019-11-11 19:14:02.363 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-11-11 19:14:02.363 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.user_role user0_.id role ) ? ) ) )
[DEBUG] 2019-11-11 19:14:02.363 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2019-11-11 19:14:02.363 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-11-11 19:14:02.363 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_0_' {alias=generatedAlias0, className=edu.yang.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=edu.yang.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.user_role' {propertyName=role,dereferenceType=PRIMITIVE,getPropertyPath=role,path=generatedAlias0.role,tableAlias=user0_,className=edu.yang.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=edu.yang.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'role' {originalText=role}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@5bb51241}

[DEBUG] 2019-11-11 19:14:02.363 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:14:02.363 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.User as generatedAlias0 where generatedAlias0.role like :param0
[DEBUG] 2019-11-11 19:14:02.363 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_0_, user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_ from user user0_ where user0_.user_role like ?
[DEBUG] 2019-11-11 19:14:02.363 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:14:02.364 [main] SQL - select user0_.id as id1_0_, user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_ from user user0_ where user0_.user_role like ?
[DEBUG] 2019-11-11 19:14:02.365 [main] Loader - Result set row: 0
[DEBUG] 2019-11-11 19:14:02.366 [main] Loader - Result row: EntityKey[edu.yang.entity.User#3]
[DEBUG] 2019-11-11 19:14:02.366 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#3]
[DEBUG] 2019-11-11 19:14:02.366 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:02.366 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.367 [main] TwoPhaseLoad - Processing attribute `password` : value = greenMantaRays
[DEBUG] 2019-11-11 19:14:02.367 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.367 [main] TwoPhaseLoad - Processing attribute `role` : value = admin
[DEBUG] 2019-11-11 19:14:02.367 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.367 [main] TwoPhaseLoad - Processing attribute `userName` : value = terryBones2019
[DEBUG] 2019-11-11 19:14:02.367 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.367 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#3]
[DEBUG] 2019-11-11 19:14:02.367 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#3]
[DEBUG] 2019-11-11 19:14:02.367 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-11 19:14:02.368 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#3]
[DEBUG] 2019-11-11 19:14:02.368 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:02.368 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#3]
[DEBUG] 2019-11-11 19:14:02.369 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:02.369 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:02.369 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:14:02.369 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:02.497 [main] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-11 19:14:02.500 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:02.500 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:02.501 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:02.504 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:02.504 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:02.504 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:02.504 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:02.505 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:02.505 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-11-11 19:14:02.505 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:14:02.505 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:02.505 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:02.505 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:02.505 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:02.505 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.505 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-11 19:14:02.505 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.505 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:14:02.505 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.505 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-11 19:14:02.505 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:02.507 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:02.0
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:02.0
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.508 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:02.510 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.510 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-11 19:14:02.510 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.510 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-11 19:14:02.510 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.510 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:02.510 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.510 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:02.510 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.510 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:02.510 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:02.510 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-11 19:14:02.510 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.510 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:02.0
[DEBUG] 2019-11-11 19:14:02.510 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.510 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-11 19:14:02.510 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.510 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:02.510 [main] CollectionLoadContext - 2 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:02.510 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:02.510 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:02.510 [main] CollectionLoadContext - 2 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:02.510 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:02.510 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:02.510 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:02.511 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:02.511 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#1
[DEBUG] 2019-11-11 19:14:02.511 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:14:02.592 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.role like :param0
[DEBUG] 2019-11-11 19:14:02.592 [main] SQL - select user0_.id as id1_0_, user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_ from user user0_ where user0_.user_role like ?
[DEBUG] 2019-11-11 19:14:02.594 [main] Loader - Result set row: 0
[DEBUG] 2019-11-11 19:14:02.594 [main] Loader - Result row: EntityKey[edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:02.594 [main] Loader - Result set row: 1
[DEBUG] 2019-11-11 19:14:02.594 [main] Loader - Result row: EntityKey[edu.yang.entity.User#2]
[DEBUG] 2019-11-11 19:14:02.594 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:02.594 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:02.594 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.594 [main] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-11-11 19:14:02.594 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.594 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:14:02.594 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.594 [main] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-11-11 19:14:02.594 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.594 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-11-11 19:14:02.594 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#2]
[DEBUG] 2019-11-11 19:14:02.594 [main] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:02.594 [main] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.594 [main] TwoPhaseLoad - Processing attribute `password` : value = greenMantaRays
[DEBUG] 2019-11-11 19:14:02.594 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.594 [main] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:14:02.594 [main] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.594 [main] TwoPhaseLoad - Processing attribute `userName` : value = johnBones2019
[DEBUG] 2019-11-11 19:14:02.594 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.594 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#2]
[DEBUG] 2019-11-11 19:14:02.595 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#2]
[DEBUG] 2019-11-11 19:14:02.595 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-11 19:14:02.595 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#2]
[DEBUG] 2019-11-11 19:14:02.596 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:02.596 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#2]
[DEBUG] 2019-11-11 19:14:02.596 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:02.596 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:02.596 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:14:02.596 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:02.596 [main] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-11 19:14:02.600 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:02.600 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:02.600 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:02.600 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:02.600 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:02.600 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:02.600 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN035
[DEBUG] 2019-11-11 19:14:02.600 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.600 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician
[DEBUG] 2019-11-11 19:14:02.601 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.601 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-11-11 19:14:02.601 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.601 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-11-11 19:14:02.601 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.601 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:02.601 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.601 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:02.601 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.601 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:02.601 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.601 [main] TwoPhaseLoad - Processing attribute `price` : value = 35.0
[DEBUG] 2019-11-11 19:14:02.601 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.601 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-11-11 19:14:02.601 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.602 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:02.602 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.602 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:02.602 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.602 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#1]
[DEBUG] 2019-11-11 19:14:02.602 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:02.602 [main] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN000
[DEBUG] 2019-11-11 19:14:02.602 [main] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.602 [main] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Magician Girl
[DEBUG] 2019-11-11 19:14:02.602 [main] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.603 [main] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-11 19:14:02.603 [main] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.603 [main] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-11-11 19:14:02.603 [main] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.603 [main] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-11-11 19:14:02.603 [main] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.603 [main] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:14:02.603 [main] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.603 [main] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:14:02.603 [main] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.603 [main] TwoPhaseLoad - Processing attribute `price` : value = 100.0
[DEBUG] 2019-11-11 19:14:02.603 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.603 [main] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-11 19:14:02.603 [main] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.603 [main] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:14:02.603 [main] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.603 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-11-11 19:14:02.603 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.603 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#2]
[DEBUG] 2019-11-11 19:14:02.603 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:02.603 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-11-11 19:14:02.603 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:14:02.603 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:02.603 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:14:02.603 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:02.603 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-11 19:14:02.605 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:02.605 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:02.605 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:02.606 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:02.606 [main] TwoPhaseLoad - Processing attribute `price` : value = 150.0
[DEBUG] 2019-11-11 19:14:02.606 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.606 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:02.0
[DEBUG] 2019-11-11 19:14:02.606 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.606 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 2
[DEBUG] 2019-11-11 19:14:02.606 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.606 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#3]
[DEBUG] 2019-11-11 19:14:02.606 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:02.606 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#2]
[DEBUG] 2019-11-11 19:14:02.606 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:02.606 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:02.607 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:14:02.607 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:02.607 [main] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-11 19:14:02.608 [main] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:02.609 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:14:02.610 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:02.610 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:14:02.610 [main] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:02.610 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:02.610 [main] TwoPhaseLoad - Processing attribute `price` : value = 50.0
[DEBUG] 2019-11-11 19:14:02.610 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.610 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:02.0
[DEBUG] 2019-11-11 19:14:02.610 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.610 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:02.611 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.611 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#1]
[DEBUG] 2019-11-11 19:14:02.611 [main] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:02.612 [main] TwoPhaseLoad - Processing attribute `price` : value = 70.0
[DEBUG] 2019-11-11 19:14:02.612 [main] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.612 [main] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:14:02.0
[DEBUG] 2019-11-11 19:14:02.612 [main] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.612 [main] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 1
[DEBUG] 2019-11-11 19:14:02.612 [main] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:14:02.612 [main] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#2]
[DEBUG] 2019-11-11 19:14:02.612 [main] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:02.612 [main] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#1]
[DEBUG] 2019-11-11 19:14:02.612 [main] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:14:02.612 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:14:02.612 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:14:02.612 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:16:29.537 [http-nio-8080-exec-16] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-11-11 19:16:29.546 [http-nio-8080-exec-16] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-11-11 19:16:29.580 [http-nio-8080-exec-16] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-11-11 19:16:29.839 [http-nio-8080-exec-16] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-11-11 19:16:29.842 [http-nio-8080-exec-16] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-11-11 19:16:30.024 [http-nio-8080-exec-16] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-11-11 19:16:30.025 [http-nio-8080-exec-16] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-11-11 19:16:30.083 [http-nio-8080-exec-16] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-11-11 19:16:30.752 [http-nio-8080-exec-16] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-11-11 19:16:30.808 [http-nio-8080-exec-16] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-11-11 19:16:30.812 [http-nio-8080-exec-16] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-11-11 19:16:30.882 [http-nio-8080-exec-16] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-11-11 19:16:30.961 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@491315bb
[DEBUG] 2019-11-11 19:16:30.962 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@491315bb
[DEBUG] 2019-11-11 19:16:30.962 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@491315bb
[DEBUG] 2019-11-11 19:16:30.963 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3a224726
[DEBUG] 2019-11-11 19:16:30.966 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5ac4a96b
[DEBUG] 2019-11-11 19:16:30.966 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@577a92b3
[DEBUG] 2019-11-11 19:16:30.967 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1983382a
[DEBUG] 2019-11-11 19:16:30.968 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1983382a
[DEBUG] 2019-11-11 19:16:30.968 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1983382a
[DEBUG] 2019-11-11 19:16:30.969 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@fe65eb3
[DEBUG] 2019-11-11 19:16:30.969 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@fe65eb3
[DEBUG] 2019-11-11 19:16:30.969 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@fe65eb3
[DEBUG] 2019-11-11 19:16:30.970 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7668f058
[DEBUG] 2019-11-11 19:16:30.970 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7668f058
[DEBUG] 2019-11-11 19:16:30.971 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7668f058
[DEBUG] 2019-11-11 19:16:30.974 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@a83a4d3
[DEBUG] 2019-11-11 19:16:30.975 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@a83a4d3
[DEBUG] 2019-11-11 19:16:30.975 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@a83a4d3
[DEBUG] 2019-11-11 19:16:30.976 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7b6823cc
[DEBUG] 2019-11-11 19:16:30.976 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7b6823cc
[DEBUG] 2019-11-11 19:16:30.976 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7b6823cc
[DEBUG] 2019-11-11 19:16:30.978 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@60d98734
[DEBUG] 2019-11-11 19:16:30.978 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@60d98734
[DEBUG] 2019-11-11 19:16:30.978 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@60d98734
[DEBUG] 2019-11-11 19:16:30.981 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6592b9f2
[DEBUG] 2019-11-11 19:16:30.981 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6592b9f2
[DEBUG] 2019-11-11 19:16:30.981 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6592b9f2
[DEBUG] 2019-11-11 19:16:30.982 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5a33ab2f
[DEBUG] 2019-11-11 19:16:30.985 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5a33ab2f
[DEBUG] 2019-11-11 19:16:30.986 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@335b77a4
[DEBUG] 2019-11-11 19:16:30.986 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@335b77a4
[DEBUG] 2019-11-11 19:16:30.987 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4dfd3554
[DEBUG] 2019-11-11 19:16:30.988 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4dfd3554
[DEBUG] 2019-11-11 19:16:30.991 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@71e6d041
[DEBUG] 2019-11-11 19:16:30.992 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@276a672c
[DEBUG] 2019-11-11 19:16:30.993 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5ce61a65
[DEBUG] 2019-11-11 19:16:30.993 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5ce61a65
[DEBUG] 2019-11-11 19:16:30.994 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@3f16fb53
[DEBUG] 2019-11-11 19:16:30.994 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3f16fb53
[DEBUG] 2019-11-11 19:16:30.998 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1944e0f0
[DEBUG] 2019-11-11 19:16:30.998 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1944e0f0
[DEBUG] 2019-11-11 19:16:30.999 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3d564e6
[DEBUG] 2019-11-11 19:16:30.999 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3d564e6
[DEBUG] 2019-11-11 19:16:31.000 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@238c2cb
[DEBUG] 2019-11-11 19:16:31.000 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@238c2cb
[DEBUG] 2019-11-11 19:16:31.001 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@38e8d2f9
[DEBUG] 2019-11-11 19:16:31.001 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@38e8d2f9
[DEBUG] 2019-11-11 19:16:31.002 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@167cf352
[DEBUG] 2019-11-11 19:16:31.003 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@167cf352
[DEBUG] 2019-11-11 19:16:31.004 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@61e3200c
[DEBUG] 2019-11-11 19:16:31.004 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@61e3200c
[DEBUG] 2019-11-11 19:16:31.009 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@21d49a71
[DEBUG] 2019-11-11 19:16:31.009 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@21d49a71
[DEBUG] 2019-11-11 19:16:31.016 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@32bbba8f
[DEBUG] 2019-11-11 19:16:31.017 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@32bbba8f
[DEBUG] 2019-11-11 19:16:31.019 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@342a55e9
[DEBUG] 2019-11-11 19:16:31.019 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@342a55e9
[DEBUG] 2019-11-11 19:16:31.021 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@19b4b203
[DEBUG] 2019-11-11 19:16:31.021 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@19b4b203
[DEBUG] 2019-11-11 19:16:31.024 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@19b4b203
[DEBUG] 2019-11-11 19:16:31.029 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@c50f296
[DEBUG] 2019-11-11 19:16:31.030 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1a4cf8e5
[DEBUG] 2019-11-11 19:16:31.030 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1a4cf8e5
[DEBUG] 2019-11-11 19:16:31.030 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1a4cf8e5
[DEBUG] 2019-11-11 19:16:31.033 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@fad662b
[DEBUG] 2019-11-11 19:16:31.034 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@f8736b
[DEBUG] 2019-11-11 19:16:31.034 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@f8736b
[DEBUG] 2019-11-11 19:16:31.036 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@8568dc0
[DEBUG] 2019-11-11 19:16:31.036 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@8568dc0
[DEBUG] 2019-11-11 19:16:31.038 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5f11a950
[DEBUG] 2019-11-11 19:16:31.040 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5f11a950
[DEBUG] 2019-11-11 19:16:31.041 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@55ad963d
[DEBUG] 2019-11-11 19:16:31.042 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@55ad963d
[DEBUG] 2019-11-11 19:16:31.044 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@53c602a7
[DEBUG] 2019-11-11 19:16:31.044 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@53c602a7
[DEBUG] 2019-11-11 19:16:31.047 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@647b83e4
[DEBUG] 2019-11-11 19:16:31.072 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@36c8f9dc
[DEBUG] 2019-11-11 19:16:31.072 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@36c8f9dc
[DEBUG] 2019-11-11 19:16:31.072 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@36c8f9dc
[DEBUG] 2019-11-11 19:16:31.073 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e9513fd
[DEBUG] 2019-11-11 19:16:31.073 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e9513fd
[DEBUG] 2019-11-11 19:16:31.073 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e9513fd
[DEBUG] 2019-11-11 19:16:31.074 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@ef79e30
[DEBUG] 2019-11-11 19:16:31.075 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2b2ddfd1
[DEBUG] 2019-11-11 19:16:31.077 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6df03798
[DEBUG] 2019-11-11 19:16:31.078 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6df03798
[DEBUG] 2019-11-11 19:16:31.079 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6df03798
[DEBUG] 2019-11-11 19:16:31.080 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@77f0c2a4
[DEBUG] 2019-11-11 19:16:31.080 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@77f0c2a4
[DEBUG] 2019-11-11 19:16:31.080 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@77f0c2a4
[DEBUG] 2019-11-11 19:16:31.080 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@34f14eab
[DEBUG] 2019-11-11 19:16:31.084 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5a13f962
[DEBUG] 2019-11-11 19:16:31.085 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@765d9c35
[DEBUG] 2019-11-11 19:16:31.085 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@765d9c35
[DEBUG] 2019-11-11 19:16:31.085 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7f672b7b
[DEBUG] 2019-11-11 19:16:31.089 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7ee86d34
[DEBUG] 2019-11-11 19:16:31.091 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7ee86d34
[DEBUG] 2019-11-11 19:16:31.096 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5dcdc09a
[DEBUG] 2019-11-11 19:16:31.096 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5dcdc09a
[DEBUG] 2019-11-11 19:16:31.096 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@237e679b
[DEBUG] 2019-11-11 19:16:31.097 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1cc7fd13
[DEBUG] 2019-11-11 19:16:31.098 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@407f95d3
[DEBUG] 2019-11-11 19:16:31.102 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2a2d3dfa
[DEBUG] 2019-11-11 19:16:31.103 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2a2d3dfa
[DEBUG] 2019-11-11 19:16:31.103 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1311e62c
[DEBUG] 2019-11-11 19:16:31.103 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@28eb18c7
[DEBUG] 2019-11-11 19:16:31.103 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@753db6bf
[DEBUG] 2019-11-11 19:16:31.103 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@23623aaa
[DEBUG] 2019-11-11 19:16:31.103 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3f5e886c
[DEBUG] 2019-11-11 19:16:31.109 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4f839260
[DEBUG] 2019-11-11 19:16:31.109 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@57135d61
[DEBUG] 2019-11-11 19:16:31.109 [http-nio-8080-exec-16] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@65168a43
[DEBUG] 2019-11-11 19:16:31.150 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-11-11 19:16:31.152 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-11-11 19:16:31.153 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-11-11 19:16:31.153 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-11-11 19:16:31.154 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-11-11 19:16:31.155 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-11-11 19:16:31.155 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-11-11 19:16:31.156 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-11-11 19:16:31.157 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-11-11 19:16:31.157 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-11-11 19:16:31.158 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-11-11 19:16:31.158 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-11-11 19:16:31.158 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-11-11 19:16:31.159 [http-nio-8080-exec-16] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-11-11 19:16:31.171 [http-nio-8080-exec-16] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/yugioh_card_db
[INFO ] 2019-11-11 19:16:31.171 [http-nio-8080-exec-16] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-11-11 19:16:31.171 [http-nio-8080-exec-16] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-11-11 19:16:31.559 [http-nio-8080-exec-16] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-11-11 19:16:32.168 [http-nio-8080-exec-16] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-11-11 19:16:32.173 [http-nio-8080-exec-16] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-11-11 19:16:32.173 [http-nio-8080-exec-16] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-11-11 19:16:32.294 [http-nio-8080-exec-16] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-11-11 19:16:32.339 [http-nio-8080-exec-16] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-11-11 19:16:32.409 [http-nio-8080-exec-16] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-11-11 19:16:32.511 [http-nio-8080-exec-16] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-11-11 19:16:32.514 [http-nio-8080-exec-16] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@73de58cf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1d948fee]
[DEBUG] 2019-11-11 19:16:32.628 [http-nio-8080-exec-16] AnnotationBinder - Binding entity from annotated class: edu.yang.entity.YugiohCard
[DEBUG] 2019-11-11 19:16:32.698 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-11-11 19:16:32.712 [http-nio-8080-exec-16] EntityBinder - Import with entity name YugiohCard
[DEBUG] 2019-11-11 19:16:32.722 [http-nio-8080-exec-16] EntityBinder - Bind entity edu.yang.entity.YugiohCard on table yugioh_card
[DEBUG] 2019-11-11 19:16:32.799 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.803 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-11-11 19:16:32.805 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:id]
[DEBUG] 2019-11-11 19:16:32.809 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-11-11 19:16:32.812 [http-nio-8080-exec-16] PropertyBinder - Building property id
[DEBUG] 2019-11-11 19:16:32.825 [http-nio-8080-exec-16] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-11-11 19:16:32.826 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_index, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.826 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property cardIndex with lazy=false
[DEBUG] 2019-11-11 19:16:32.827 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardIndex]
[DEBUG] 2019-11-11 19:16:32.827 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for cardIndex
[DEBUG] 2019-11-11 19:16:32.827 [http-nio-8080-exec-16] PropertyBinder - Building property cardIndex
[DEBUG] 2019-11-11 19:16:32.827 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.827 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property cardName with lazy=false
[DEBUG] 2019-11-11 19:16:32.827 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardName]
[DEBUG] 2019-11-11 19:16:32.828 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for cardName
[DEBUG] 2019-11-11 19:16:32.828 [http-nio-8080-exec-16] PropertyBinder - Building property cardName
[DEBUG] 2019-11-11 19:16:32.828 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_rarity, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.829 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property cardRarity with lazy=false
[DEBUG] 2019-11-11 19:16:32.829 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardRarity]
[DEBUG] 2019-11-11 19:16:32.829 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for cardRarity
[DEBUG] 2019-11-11 19:16:32.829 [http-nio-8080-exec-16] PropertyBinder - Building property cardRarity
[DEBUG] 2019-11-11 19:16:32.829 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_set, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.830 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property cardSet with lazy=false
[DEBUG] 2019-11-11 19:16:32.830 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardSet]
[DEBUG] 2019-11-11 19:16:32.830 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for cardSet
[DEBUG] 2019-11-11 19:16:32.830 [http-nio-8080-exec-16] PropertyBinder - Building property cardSet
[DEBUG] 2019-11-11 19:16:32.830 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_type, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.830 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property cardType with lazy=false
[DEBUG] 2019-11-11 19:16:32.830 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardType]
[DEBUG] 2019-11-11 19:16:32.830 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for cardType
[DEBUG] 2019-11-11 19:16:32.830 [http-nio-8080-exec-16] PropertyBinder - Building property cardType
[DEBUG] 2019-11-11 19:16:32.832 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='yugiohCard'}
[DEBUG] 2019-11-11 19:16:32.832 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=entries, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.834 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.844 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.844 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=entries_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.846 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='entries_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-11-11 19:16:32.851 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='yugiohCard'}
[DEBUG] 2019-11-11 19:16:32.851 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='yugiohCard'}
[DEBUG] 2019-11-11 19:16:32.852 [http-nio-8080-exec-16] CollectionBinder - Collection role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:16:32.856 [http-nio-8080-exec-16] PropertyBinder - Building property entries
[DEBUG] 2019-11-11 19:16:32.858 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=image, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.864 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property image with lazy=false
[DEBUG] 2019-11-11 19:16:32.864 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:image]
[DEBUG] 2019-11-11 19:16:32.864 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for image
[DEBUG] 2019-11-11 19:16:32.864 [http-nio-8080-exec-16] PropertyBinder - Building property image
[DEBUG] 2019-11-11 19:16:32.864 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.864 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2019-11-11 19:16:32.864 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:price]
[DEBUG] 2019-11-11 19:16:32.864 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2019-11-11 19:16:32.864 [http-nio-8080-exec-16] PropertyBinder - Building property price
[DEBUG] 2019-11-11 19:16:32.864 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=qty, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.864 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property quantity with lazy=false
[DEBUG] 2019-11-11 19:16:32.864 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:quantity]
[DEBUG] 2019-11-11 19:16:32.864 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for quantity
[DEBUG] 2019-11-11 19:16:32.865 [http-nio-8080-exec-16] PropertyBinder - Building property quantity
[DEBUG] 2019-11-11 19:16:32.865 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=status, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.866 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[DEBUG] 2019-11-11 19:16:32.866 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:status]
[DEBUG] 2019-11-11 19:16:32.866 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for status
[DEBUG] 2019-11-11 19:16:32.866 [http-nio-8080-exec-16] PropertyBinder - Building property status
[DEBUG] 2019-11-11 19:16:32.867 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-11-11 19:16:32.867 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.870 [http-nio-8080-exec-16] PropertyBinder - Building property user
[DEBUG] 2019-11-11 19:16:32.871 [http-nio-8080-exec-16] AnnotationBinder - Binding entity from annotated class: edu.yang.entity.User
[DEBUG] 2019-11-11 19:16:32.871 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-11-11 19:16:32.872 [http-nio-8080-exec-16] EntityBinder - Import with entity name User
[DEBUG] 2019-11-11 19:16:32.872 [http-nio-8080-exec-16] EntityBinder - Bind entity edu.yang.entity.User on table user
[DEBUG] 2019-11-11 19:16:32.873 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.873 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-11-11 19:16:32.873 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:id]
[DEBUG] 2019-11-11 19:16:32.873 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-11-11 19:16:32.873 [http-nio-8080-exec-16] PropertyBinder - Building property id
[DEBUG] 2019-11-11 19:16:32.874 [http-nio-8080-exec-16] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-11-11 19:16:32.874 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-11-11 19:16:32.874 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=cards, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.874 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.874 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.875 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=cards_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.875 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='cards_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-11-11 19:16:32.875 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-11-11 19:16:32.875 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-11-11 19:16:32.875 [http-nio-8080-exec-16] CollectionBinder - Collection role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:16:32.875 [http-nio-8080-exec-16] PropertyBinder - Building property cards
[DEBUG] 2019-11-11 19:16:32.875 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_password, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.875 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2019-11-11 19:16:32.875 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:password]
[DEBUG] 2019-11-11 19:16:32.875 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2019-11-11 19:16:32.875 [http-nio-8080-exec-16] PropertyBinder - Building property password
[DEBUG] 2019-11-11 19:16:32.875 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.875 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property role with lazy=false
[DEBUG] 2019-11-11 19:16:32.875 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:role]
[DEBUG] 2019-11-11 19:16:32.875 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for role
[DEBUG] 2019-11-11 19:16:32.875 [http-nio-8080-exec-16] PropertyBinder - Building property role
[DEBUG] 2019-11-11 19:16:32.876 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.876 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-11-11 19:16:32.876 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:userName]
[DEBUG] 2019-11-11 19:16:32.877 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-11-11 19:16:32.879 [http-nio-8080-exec-16] PropertyBinder - Building property userName
[DEBUG] 2019-11-11 19:16:32.880 [http-nio-8080-exec-16] AnnotationBinder - Binding entity from annotated class: edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-11-11 19:16:32.881 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-11-11 19:16:32.881 [http-nio-8080-exec-16] EntityBinder - Import with entity name YugiohCardHistory
[DEBUG] 2019-11-11 19:16:32.881 [http-nio-8080-exec-16] EntityBinder - Bind entity edu.yang.entity.YugiohCardHistory on table yugioh_card_history
[DEBUG] 2019-11-11 19:16:32.885 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.886 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-11-11 19:16:32.886 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCardHistory:id]
[DEBUG] 2019-11-11 19:16:32.887 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-11-11 19:16:32.887 [http-nio-8080-exec-16] PropertyBinder - Building property id
[DEBUG] 2019-11-11 19:16:32.887 [http-nio-8080-exec-16] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-11-11 19:16:32.887 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.888 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2019-11-11 19:16:32.888 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCardHistory:price]
[DEBUG] 2019-11-11 19:16:32.888 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2019-11-11 19:16:32.888 [http-nio-8080-exec-16] PropertyBinder - Building property price
[DEBUG] 2019-11-11 19:16:32.888 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=update_date, insertable=true, updatable=false, unique=false}
[DEBUG] 2019-11-11 19:16:32.888 [http-nio-8080-exec-16] PropertyBinder - MetadataSourceProcessor property ts with lazy=false
[DEBUG] 2019-11-11 19:16:32.888 [http-nio-8080-exec-16] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCardHistory:ts]
[DEBUG] 2019-11-11 19:16:32.888 [http-nio-8080-exec-16] SimpleValueBinder - building SimpleValue for ts
[DEBUG] 2019-11-11 19:16:32.888 [http-nio-8080-exec-16] PropertyBinder - Building property ts
[DEBUG] 2019-11-11 19:16:32.905 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-11-11 19:16:32.906 [http-nio-8080-exec-16] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=yugiohCard, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-11-11 19:16:32.907 [http-nio-8080-exec-16] PropertyBinder - Building property yugiohCard
[DEBUG] 2019-11-11 19:16:32.909 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-11-11 19:16:32.909 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for cardIndex
[DEBUG] 2019-11-11 19:16:32.909 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for cardName
[DEBUG] 2019-11-11 19:16:32.909 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for cardRarity
[DEBUG] 2019-11-11 19:16:32.909 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for cardSet
[DEBUG] 2019-11-11 19:16:32.912 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for cardType
[DEBUG] 2019-11-11 19:16:32.912 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for image
[DEBUG] 2019-11-11 19:16:32.912 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2019-11-11 19:16:32.912 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for quantity
[DEBUG] 2019-11-11 19:16:32.912 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for status
[DEBUG] 2019-11-11 19:16:32.912 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-11-11 19:16:32.912 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2019-11-11 19:16:32.912 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for role
[DEBUG] 2019-11-11 19:16:32.912 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-11-11 19:16:32.912 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-11-11 19:16:32.913 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2019-11-11 19:16:32.913 [http-nio-8080-exec-16] SimpleValueBinder - Starting fillSimpleValue for ts
[DEBUG] 2019-11-11 19:16:32.918 [http-nio-8080-exec-16] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [yugioh_card]
[DEBUG] 2019-11-11 19:16:32.918 [http-nio-8080-exec-16] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2019-11-11 19:16:32.918 [http-nio-8080-exec-16] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [yugioh_card_history]
[DEBUG] 2019-11-11 19:16:32.918 [http-nio-8080-exec-16] CollectionSecondPass - Second pass for collection: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:16:32.919 [http-nio-8080-exec-16] CollectionBinder - Binding a OneToMany: edu.yang.entity.YugiohCard.entries through a foreign key
[DEBUG] 2019-11-11 19:16:32.919 [http-nio-8080-exec-16] CollectionBinder - Mapping collection: edu.yang.entity.YugiohCard.entries -> yugioh_card_history
[DEBUG] 2019-11-11 19:16:32.921 [http-nio-8080-exec-16] TableBinder - Retrieving property edu.yang.entity.YugiohCardHistory.yugiohCard
[DEBUG] 2019-11-11 19:16:32.921 [http-nio-8080-exec-16] CollectionSecondPass - Mapped collection key: yugiohCard_id, one-to-many: edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-11-11 19:16:32.921 [http-nio-8080-exec-16] CollectionSecondPass - Second pass for collection: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:16:32.921 [http-nio-8080-exec-16] CollectionBinder - Binding a OneToMany: edu.yang.entity.User.cards through a foreign key
[DEBUG] 2019-11-11 19:16:32.921 [http-nio-8080-exec-16] CollectionBinder - Mapping collection: edu.yang.entity.User.cards -> yugioh_card
[DEBUG] 2019-11-11 19:16:32.922 [http-nio-8080-exec-16] TableBinder - Retrieving property edu.yang.entity.YugiohCard.user
[DEBUG] 2019-11-11 19:16:32.922 [http-nio-8080-exec-16] CollectionSecondPass - Mapped collection key: user_id, one-to-many: edu.yang.entity.YugiohCard
[DEBUG] 2019-11-11 19:16:32.922 [http-nio-8080-exec-16] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.User
[DEBUG] 2019-11-11 19:16:32.924 [http-nio-8080-exec-16] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.YugiohCard
[DEBUG] 2019-11-11 19:16:32.930 [http-nio-8080-exec-16] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.User
[DEBUG] 2019-11-11 19:16:32.930 [http-nio-8080-exec-16] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.YugiohCard
[DEBUG] 2019-11-11 19:16:32.968 [http-nio-8080-exec-16] SessionFactoryImpl - Building session factory
[DEBUG] 2019-11-11 19:16:32.969 [http-nio-8080-exec-16] Settings - SessionFactory name : null
[DEBUG] 2019-11-11 19:16:32.969 [http-nio-8080-exec-16] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-11-11 19:16:32.969 [http-nio-8080-exec-16] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-11-11 19:16:32.969 [http-nio-8080-exec-16] Settings - Statistics: disabled
[DEBUG] 2019-11-11 19:16:32.969 [http-nio-8080-exec-16] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-11-11 19:16:32.969 [http-nio-8080-exec-16] Settings - Default entity-mode: pojo
[DEBUG] 2019-11-11 19:16:32.969 [http-nio-8080-exec-16] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-11-11 19:16:32.969 [http-nio-8080-exec-16] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-11-11 19:16:32.969 [http-nio-8080-exec-16] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-11-11 19:16:32.969 [http-nio-8080-exec-16] Settings - Default batch fetch size: -1
[DEBUG] 2019-11-11 19:16:32.969 [http-nio-8080-exec-16] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-11-11 19:16:32.969 [http-nio-8080-exec-16] Settings - Default null ordering: NONE
[DEBUG] 2019-11-11 19:16:32.969 [http-nio-8080-exec-16] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-11-11 19:16:32.969 [http-nio-8080-exec-16] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-11-11 19:16:32.969 [http-nio-8080-exec-16] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-11-11 19:16:32.969 [http-nio-8080-exec-16] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-11-11 19:16:32.969 [http-nio-8080-exec-16] Settings - Query language substitutions: {}
[DEBUG] 2019-11-11 19:16:32.969 [http-nio-8080-exec-16] Settings - Named query checking : enabled
[DEBUG] 2019-11-11 19:16:32.969 [http-nio-8080-exec-16] Settings - Second-level cache: disabled
[DEBUG] 2019-11-11 19:16:32.969 [http-nio-8080-exec-16] Settings - Second-level query cache: disabled
[DEBUG] 2019-11-11 19:16:32.969 [http-nio-8080-exec-16] Settings - Second-level query cache factory: null
[DEBUG] 2019-11-11 19:16:32.970 [http-nio-8080-exec-16] Settings - Second-level cache region prefix: null
[DEBUG] 2019-11-11 19:16:32.970 [http-nio-8080-exec-16] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-11-11 19:16:32.970 [http-nio-8080-exec-16] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-11-11 19:16:32.970 [http-nio-8080-exec-16] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-11-11 19:16:32.970 [http-nio-8080-exec-16] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-11-11 19:16:32.970 [http-nio-8080-exec-16] Settings - JDBC batch size: 15
[DEBUG] 2019-11-11 19:16:32.970 [http-nio-8080-exec-16] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-11-11 19:16:32.970 [http-nio-8080-exec-16] Settings - Scrollable result sets: enabled
[DEBUG] 2019-11-11 19:16:32.970 [http-nio-8080-exec-16] Settings - Wrap result sets: disabled
[DEBUG] 2019-11-11 19:16:32.970 [http-nio-8080-exec-16] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-11-11 19:16:32.970 [http-nio-8080-exec-16] Settings - JDBC result set fetch size: null
[DEBUG] 2019-11-11 19:16:32.970 [http-nio-8080-exec-16] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-11-11 19:16:32.970 [http-nio-8080-exec-16] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-11-11 19:16:32.970 [http-nio-8080-exec-16] Settings - JPA compliance - query : 
[DEBUG] 2019-11-11 19:16:32.970 [http-nio-8080-exec-16] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-11-11 19:16:32.970 [http-nio-8080-exec-16] Settings - JPA compliance - lists : 
[DEBUG] 2019-11-11 19:16:32.970 [http-nio-8080-exec-16] Settings - JPA compliance - transactions : 
[INFO ] 2019-11-11 19:16:33.100 [http-nio-8080-exec-16] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-11-11 19:16:33.152 [http-nio-8080-exec-16] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-11-11 19:16:33.154 [http-nio-8080-exec-16] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=https://ubuntu.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-07-16, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.4, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Ubuntu, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.0.0-32-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/yugioh_card_db, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5a25de13, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.4+11-post-Ubuntu-1ubuntu218.04.3, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/yugioh_card_db, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2019-11-11 19:16:33.207 [http-nio-8080-exec-16] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.User] is safe
[DEBUG] 2019-11-11 19:16:33.208 [http-nio-8080-exec-16] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.User
[DEBUG] 2019-11-11 19:16:33.237 [http-nio-8080-exec-16] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCard] is safe
[DEBUG] 2019-11-11 19:16:33.237 [http-nio-8080-exec-16] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCard
[DEBUG] 2019-11-11 19:16:33.245 [http-nio-8080-exec-16] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCardHistory] is safe
[DEBUG] 2019-11-11 19:16:33.246 [http-nio-8080-exec-16] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-11-11 19:16:33.255 [http-nio-8080-exec-16] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-11-11 19:16:33.257 [http-nio-8080-exec-16] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-11-11 19:16:33.257 [http-nio-8080-exec-16] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@73de58cf] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7ca687ea]
[DEBUG] 2019-11-11 19:16:33.347 [http-nio-8080-exec-16] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.User] is safe
[DEBUG] 2019-11-11 19:16:33.347 [http-nio-8080-exec-16] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.User
[DEBUG] 2019-11-11 19:16:33.377 [http-nio-8080-exec-16] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.User] is safe
[DEBUG] 2019-11-11 19:16:33.377 [http-nio-8080-exec-16] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.User
[DEBUG] 2019-11-11 19:16:33.669 [http-nio-8080-exec-16] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCard] is safe
[DEBUG] 2019-11-11 19:16:33.670 [http-nio-8080-exec-16] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCard
[DEBUG] 2019-11-11 19:16:33.670 [http-nio-8080-exec-16] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCard] is safe
[DEBUG] 2019-11-11 19:16:33.670 [http-nio-8080-exec-16] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCard
[DEBUG] 2019-11-11 19:16:33.780 [http-nio-8080-exec-16] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCardHistory] is safe
[DEBUG] 2019-11-11 19:16:33.780 [http-nio-8080-exec-16] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-11-11 19:16:33.781 [http-nio-8080-exec-16] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCardHistory] is safe
[DEBUG] 2019-11-11 19:16:33.781 [http-nio-8080-exec-16] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-11-11 19:16:33.864 [http-nio-8080-exec-16] AbstractCollectionPersister - Static SQL for collection: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:16:33.864 [http-nio-8080-exec-16] AbstractCollectionPersister -  Row insert: update yugioh_card set user_id=? where id=?
[DEBUG] 2019-11-11 19:16:33.864 [http-nio-8080-exec-16] AbstractCollectionPersister -  Row update: update yugioh_card set  where id=?
[DEBUG] 2019-11-11 19:16:33.864 [http-nio-8080-exec-16] AbstractCollectionPersister -  Row delete: update yugioh_card set user_id=null where user_id=? and id=?
[DEBUG] 2019-11-11 19:16:33.864 [http-nio-8080-exec-16] AbstractCollectionPersister -  One-shot delete: update yugioh_card set user_id=null where user_id=?
[DEBUG] 2019-11-11 19:16:33.865 [http-nio-8080-exec-16] AbstractCollectionPersister - Static SQL for collection: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:16:33.868 [http-nio-8080-exec-16] AbstractCollectionPersister -  Row insert: update yugioh_card_history set yugiohCard_id=? where id=?
[DEBUG] 2019-11-11 19:16:33.869 [http-nio-8080-exec-16] AbstractCollectionPersister -  Row update: update yugioh_card_history set  where id=?
[DEBUG] 2019-11-11 19:16:33.869 [http-nio-8080-exec-16] AbstractCollectionPersister -  Row delete: update yugioh_card_history set yugiohCard_id=null where yugiohCard_id=? and id=?
[DEBUG] 2019-11-11 19:16:33.869 [http-nio-8080-exec-16] AbstractCollectionPersister -  One-shot delete: update yugioh_card_history set yugiohCard_id=null where yugiohCard_id=?
[DEBUG] 2019-11-11 19:16:33.879 [http-nio-8080-exec-16] AbstractEntityPersister - Static SQL for entity: edu.yang.entity.User
[DEBUG] 2019-11-11 19:16:33.880 [http-nio-8080-exec-16] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2019-11-11 19:16:33.880 [http-nio-8080-exec-16] AbstractEntityPersister -  Snapshot select: select user_.id, user_.user_password as user_pas2_0_, user_.user_role as user_rol3_0_, user_.user_name as user_nam4_0_ from user user_ where user_.id=?
[DEBUG] 2019-11-11 19:16:33.880 [http-nio-8080-exec-16] AbstractEntityPersister -  Insert 0: insert into user (user_password, user_role, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2019-11-11 19:16:33.880 [http-nio-8080-exec-16] AbstractEntityPersister -  Update 0: update user set user_password=?, user_role=?, user_name=? where id=?
[DEBUG] 2019-11-11 19:16:33.880 [http-nio-8080-exec-16] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2019-11-11 19:16:33.880 [http-nio-8080-exec-16] AbstractEntityPersister -  Identity insert: insert into user (user_password, user_role, user_name) values (?, ?, ?)
[DEBUG] 2019-11-11 19:16:33.914 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c8878bd]
[DEBUG] 2019-11-11 19:16:33.918 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards
[DEBUG] 2019-11-11 19:16:33.923 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c33c0c]
[DEBUG] 2019-11-11 19:16:33.927 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e52ef57]
[DEBUG] 2019-11-11 19:16:33.928 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.cardIndex
[DEBUG] 2019-11-11 19:16:33.928 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.cardName
[DEBUG] 2019-11-11 19:16:33.928 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.cardRarity
[DEBUG] 2019-11-11 19:16:33.930 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.cardSet
[DEBUG] 2019-11-11 19:16:33.931 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.cardType
[DEBUG] 2019-11-11 19:16:33.931 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.entries
[DEBUG] 2019-11-11 19:16:33.931 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@604e3a7e]
[DEBUG] 2019-11-11 19:16:33.931 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@212779c7]
[DEBUG] 2019-11-11 19:16:33.931 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.entries.price
[DEBUG] 2019-11-11 19:16:33.932 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.entries.ts
[DEBUG] 2019-11-11 19:16:33.933 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.entries.yugiohCard
[DEBUG] 2019-11-11 19:16:33.933 [http-nio-8080-exec-16] MetamodelGraphWalker - Property path deemed to be circular : cards.entries.yugiohCard
[DEBUG] 2019-11-11 19:16:33.937 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.image
[DEBUG] 2019-11-11 19:16:33.937 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.price
[DEBUG] 2019-11-11 19:16:33.937 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.quantity
[DEBUG] 2019-11-11 19:16:33.937 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.status
[DEBUG] 2019-11-11 19:16:33.937 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.user
[DEBUG] 2019-11-11 19:16:33.937 [http-nio-8080-exec-16] MetamodelGraphWalker - Property path deemed to be circular : cards.user
[DEBUG] 2019-11-11 19:16:33.937 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-11-11 19:16:33.937 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2019-11-11 19:16:33.938 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-11-11 19:16:33.938 [http-nio-8080-exec-16] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-11 19:16:33.952 [http-nio-8080-exec-16] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-11 19:16:33.959 [http-nio-8080-exec-16] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:0>, path=edu.yang.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.User.cards, querySpaceUid=<gen:1>, path=edu.yang.entity.User.cards)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:2>, path=edu.yang.entity.User.cards.<elements>)
                - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:3>, path=edu.yang.entity.User.cards.<elements>.entries)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:4>, path=edu.yang.entity.User.cards.<elements>.entries.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(cards)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.User.cards)
                - SQL table alias mapping - cards1_
                - alias suffix - 1_
                - suffixed key columns - {user_id11_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCard)
                      - SQL table alias mapping - cards1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(entries)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=edu.yang.entity.YugiohCard.entries)
                            - SQL table alias mapping - entries2_
                            - alias suffix - 3_
                            - suffixed key columns - {yugiohCa4_2_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_2_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=edu.yang.entity.YugiohCardHistory)
                                  - SQL table alias mapping - entries2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_2_4_}

[DEBUG] 2019-11-11 19:16:33.961 [http-nio-8080-exec-16] EntityLoader - Static select for entity edu.yang.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-11 19:16:33.961 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55f9243]
[DEBUG] 2019-11-11 19:16:33.961 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards
[DEBUG] 2019-11-11 19:16:33.962 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@304393ba]
[DEBUG] 2019-11-11 19:16:33.962 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e671d53]
[DEBUG] 2019-11-11 19:16:33.962 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.cardIndex
[DEBUG] 2019-11-11 19:16:33.962 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.cardName
[DEBUG] 2019-11-11 19:16:33.962 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.cardRarity
[DEBUG] 2019-11-11 19:16:33.962 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.cardSet
[DEBUG] 2019-11-11 19:16:33.962 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.cardType
[DEBUG] 2019-11-11 19:16:33.962 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.entries
[DEBUG] 2019-11-11 19:16:33.962 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@180d4c88]
[DEBUG] 2019-11-11 19:16:33.962 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2eb6475f]
[DEBUG] 2019-11-11 19:16:33.962 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.entries.price
[DEBUG] 2019-11-11 19:16:33.962 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.entries.ts
[DEBUG] 2019-11-11 19:16:33.962 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.entries.yugiohCard
[DEBUG] 2019-11-11 19:16:33.962 [http-nio-8080-exec-16] MetamodelGraphWalker - Property path deemed to be circular : cards.entries.yugiohCard
[DEBUG] 2019-11-11 19:16:33.963 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.image
[DEBUG] 2019-11-11 19:16:33.963 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.price
[DEBUG] 2019-11-11 19:16:33.963 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.quantity
[DEBUG] 2019-11-11 19:16:33.963 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.status
[DEBUG] 2019-11-11 19:16:33.963 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cards.user
[DEBUG] 2019-11-11 19:16:33.963 [http-nio-8080-exec-16] MetamodelGraphWalker - Property path deemed to be circular : cards.user
[DEBUG] 2019-11-11 19:16:33.963 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-11-11 19:16:33.963 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2019-11-11 19:16:33.963 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-11-11 19:16:33.963 [http-nio-8080-exec-16] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-11 19:16:33.963 [http-nio-8080-exec-16] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-11 19:16:33.965 [http-nio-8080-exec-16] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:0>, path=edu.yang.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.User.cards, querySpaceUid=<gen:1>, path=edu.yang.entity.User.cards)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:2>, path=edu.yang.entity.User.cards.<elements>)
                - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:3>, path=edu.yang.entity.User.cards.<elements>.entries)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:4>, path=edu.yang.entity.User.cards.<elements>.entries.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(cards)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.User.cards)
                - SQL table alias mapping - cards1_
                - alias suffix - 1_
                - suffixed key columns - {user_id11_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCard)
                      - SQL table alias mapping - cards1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(entries)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=edu.yang.entity.YugiohCard.entries)
                            - SQL table alias mapping - entries2_
                            - alias suffix - 3_
                            - suffixed key columns - {yugiohCa4_2_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_2_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=edu.yang.entity.YugiohCardHistory)
                                  - SQL table alias mapping - entries2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_2_4_}

[DEBUG] 2019-11-11 19:16:33.965 [http-nio-8080-exec-16] EntityLoader - Static select for entity edu.yang.entity.User [READ]: select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id11_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_index as card_ind2_1_2_, cards1_.card_name as card_nam3_1_2_, cards1_.card_rarity as card_rar4_1_2_, cards1_.card_set as card_set5_1_2_, cards1_.card_type as card_typ6_1_2_, cards1_.image as image7_1_2_, cards1_.price as price8_1_2_, cards1_.qty as qty9_1_2_, cards1_.status as status10_1_2_, cards1_.user_id as user_id11_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-11-11 19:16:33.993 [http-nio-8080-exec-16] Loader - Static select for action ACTION_MERGE on entity edu.yang.entity.User: select user0_.id as id1_0_1_, user0_.user_password as user_pas2_0_1_, user0_.user_role as user_rol3_0_1_, user0_.user_name as user_nam4_0_1_, cards1_.user_id as user_id11_1_3_, cards1_.id as id1_1_3_, cards1_.id as id1_1_0_, cards1_.card_index as card_ind2_1_0_, cards1_.card_name as card_nam3_1_0_, cards1_.card_rarity as card_rar4_1_0_, cards1_.card_set as card_set5_1_0_, cards1_.card_type as card_typ6_1_0_, cards1_.image as image7_1_0_, cards1_.price as price8_1_0_, cards1_.qty as qty9_1_0_, cards1_.status as status10_1_0_, cards1_.user_id as user_id11_1_0_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id where user0_.id=?
[DEBUG] 2019-11-11 19:16:33.993 [http-nio-8080-exec-16] Loader - Static select for action ACTION_REFRESH on entity edu.yang.entity.User: select user0_.id as id1_0_1_, user0_.user_password as user_pas2_0_1_, user0_.user_role as user_rol3_0_1_, user0_.user_name as user_nam4_0_1_, cards1_.user_id as user_id11_1_3_, cards1_.id as id1_1_3_, cards1_.id as id1_1_0_, cards1_.card_index as card_ind2_1_0_, cards1_.card_name as card_nam3_1_0_, cards1_.card_rarity as card_rar4_1_0_, cards1_.card_set as card_set5_1_0_, cards1_.card_type as card_typ6_1_0_, cards1_.image as image7_1_0_, cards1_.price as price8_1_0_, cards1_.qty as qty9_1_0_, cards1_.status as status10_1_0_, cards1_.user_id as user_id11_1_0_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id where user0_.id=?
[DEBUG] 2019-11-11 19:16:33.993 [http-nio-8080-exec-16] AbstractEntityPersister - Static SQL for entity: edu.yang.entity.YugiohCard
[DEBUG] 2019-11-11 19:16:33.993 [http-nio-8080-exec-16] AbstractEntityPersister -  Version select: select id from yugioh_card where id =?
[DEBUG] 2019-11-11 19:16:33.993 [http-nio-8080-exec-16] AbstractEntityPersister -  Snapshot select: select yugiohcard_.id, yugiohcard_.card_index as card_ind2_1_, yugiohcard_.card_name as card_nam3_1_, yugiohcard_.card_rarity as card_rar4_1_, yugiohcard_.card_set as card_set5_1_, yugiohcard_.card_type as card_typ6_1_, yugiohcard_.image as image7_1_, yugiohcard_.price as price8_1_, yugiohcard_.qty as qty9_1_, yugiohcard_.status as status10_1_, yugiohcard_.user_id as user_id11_1_ from yugioh_card yugiohcard_ where yugiohcard_.id=?
[DEBUG] 2019-11-11 19:16:33.993 [http-nio-8080-exec-16] AbstractEntityPersister -  Insert 0: insert into yugioh_card (card_index, card_name, card_rarity, card_set, card_type, image, price, qty, status, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-11-11 19:16:33.993 [http-nio-8080-exec-16] AbstractEntityPersister -  Update 0: update yugioh_card set card_index=?, card_name=?, card_rarity=?, card_set=?, card_type=?, image=?, price=?, qty=?, status=?, user_id=? where id=?
[DEBUG] 2019-11-11 19:16:33.993 [http-nio-8080-exec-16] AbstractEntityPersister -  Delete 0: delete from yugioh_card where id=?
[DEBUG] 2019-11-11 19:16:33.993 [http-nio-8080-exec-16] AbstractEntityPersister -  Identity insert: insert into yugioh_card (card_index, card_name, card_rarity, card_set, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-11-11 19:16:33.993 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36bf124c]
[DEBUG] 2019-11-11 19:16:33.993 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cardIndex
[DEBUG] 2019-11-11 19:16:33.994 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cardName
[DEBUG] 2019-11-11 19:16:33.994 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cardRarity
[DEBUG] 2019-11-11 19:16:33.994 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cardSet
[DEBUG] 2019-11-11 19:16:33.994 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cardType
[DEBUG] 2019-11-11 19:16:33.994 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : entries
[DEBUG] 2019-11-11 19:16:33.994 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10080b19]
[DEBUG] 2019-11-11 19:16:33.994 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1239f560]
[DEBUG] 2019-11-11 19:16:33.998 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : entries.price
[DEBUG] 2019-11-11 19:16:33.998 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : entries.ts
[DEBUG] 2019-11-11 19:16:33.998 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : entries.yugiohCard
[DEBUG] 2019-11-11 19:16:33.998 [http-nio-8080-exec-16] MetamodelGraphWalker - Property path deemed to be circular : entries.yugiohCard
[DEBUG] 2019-11-11 19:16:34.001 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2019-11-11 19:16:34.001 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-11-11 19:16:34.001 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : quantity
[DEBUG] 2019-11-11 19:16:34.001 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2019-11-11 19:16:34.001 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-11-11 19:16:34.002 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b70db0c]
[DEBUG] 2019-11-11 19:16:34.002 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.cards
[DEBUG] 2019-11-11 19:16:34.002 [http-nio-8080-exec-16] MetamodelGraphWalker - Property path deemed to be circular : user.cards
[DEBUG] 2019-11-11 19:16:34.002 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2019-11-11 19:16:34.002 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.role
[DEBUG] 2019-11-11 19:16:34.003 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-11-11 19:16:34.003 [http-nio-8080-exec-16] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-11 19:16:34.003 [http-nio-8080-exec-16] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-11 19:16:34.004 [http-nio-8080-exec-16] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCard)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCard)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCard.entries)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCard.entries.<elements>)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:3>, path=edu.yang.entity.YugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCard)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(entries)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.YugiohCard.entries)
                - SQL table alias mapping - entries1_
                - alias suffix - 1_
                - suffixed key columns - {yugiohCa4_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_2_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCardHistory)
                      - SQL table alias mapping - entries1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.yang.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 3_
                - suffixed key columns - {id1_0_3_}

[DEBUG] 2019-11-11 19:16:34.004 [http-nio-8080-exec-16] EntityLoader - Static select for entity edu.yang.entity.YugiohCard [NONE]: select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:16:34.004 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dbdb8b2]
[DEBUG] 2019-11-11 19:16:34.004 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cardIndex
[DEBUG] 2019-11-11 19:16:34.005 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cardName
[DEBUG] 2019-11-11 19:16:34.005 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cardRarity
[DEBUG] 2019-11-11 19:16:34.005 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cardSet
[DEBUG] 2019-11-11 19:16:34.005 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cardType
[DEBUG] 2019-11-11 19:16:34.005 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : entries
[DEBUG] 2019-11-11 19:16:34.006 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38266dd6]
[DEBUG] 2019-11-11 19:16:34.006 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fc88c33]
[DEBUG] 2019-11-11 19:16:34.006 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : entries.price
[DEBUG] 2019-11-11 19:16:34.006 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : entries.ts
[DEBUG] 2019-11-11 19:16:34.006 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : entries.yugiohCard
[DEBUG] 2019-11-11 19:16:34.006 [http-nio-8080-exec-16] MetamodelGraphWalker - Property path deemed to be circular : entries.yugiohCard
[DEBUG] 2019-11-11 19:16:34.006 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2019-11-11 19:16:34.006 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-11-11 19:16:34.006 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : quantity
[DEBUG] 2019-11-11 19:16:34.006 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2019-11-11 19:16:34.006 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-11-11 19:16:34.006 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f848c02]
[DEBUG] 2019-11-11 19:16:34.006 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.cards
[DEBUG] 2019-11-11 19:16:34.006 [http-nio-8080-exec-16] MetamodelGraphWalker - Property path deemed to be circular : user.cards
[DEBUG] 2019-11-11 19:16:34.006 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2019-11-11 19:16:34.009 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.role
[DEBUG] 2019-11-11 19:16:34.009 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-11-11 19:16:34.011 [http-nio-8080-exec-16] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-11 19:16:34.011 [http-nio-8080-exec-16] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-11 19:16:34.012 [http-nio-8080-exec-16] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCard)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCard)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCard.entries)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCard.entries.<elements>)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:3>, path=edu.yang.entity.YugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCard)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(entries)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.YugiohCard.entries)
                - SQL table alias mapping - entries1_
                - alias suffix - 1_
                - suffixed key columns - {yugiohCa4_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_2_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCardHistory)
                      - SQL table alias mapping - entries1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.yang.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 3_
                - suffixed key columns - {id1_0_3_}

[DEBUG] 2019-11-11 19:16:34.012 [http-nio-8080-exec-16] EntityLoader - Static select for entity edu.yang.entity.YugiohCard [READ]: select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:16:34.012 [http-nio-8080-exec-16] Loader - Static select for action ACTION_MERGE on entity edu.yang.entity.YugiohCard: select yugiohcard0_.id as id1_1_1_, yugiohcard0_.card_index as card_ind2_1_1_, yugiohcard0_.card_name as card_nam3_1_1_, yugiohcard0_.card_rarity as card_rar4_1_1_, yugiohcard0_.card_set as card_set5_1_1_, yugiohcard0_.card_type as card_typ6_1_1_, yugiohcard0_.image as image7_1_1_, yugiohcard0_.price as price8_1_1_, yugiohcard0_.qty as qty9_1_1_, yugiohcard0_.status as status10_1_1_, yugiohcard0_.user_id as user_id11_1_1_, entries1_.yugiohCard_id as yugiohCa4_2_3_, entries1_.id as id1_2_3_, entries1_.id as id1_2_0_, entries1_.price as price2_2_0_, entries1_.update_date as update_d3_2_0_, entries1_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:16:34.012 [http-nio-8080-exec-16] Loader - Static select for action ACTION_REFRESH on entity edu.yang.entity.YugiohCard: select yugiohcard0_.id as id1_1_1_, yugiohcard0_.card_index as card_ind2_1_1_, yugiohcard0_.card_name as card_nam3_1_1_, yugiohcard0_.card_rarity as card_rar4_1_1_, yugiohcard0_.card_set as card_set5_1_1_, yugiohcard0_.card_type as card_typ6_1_1_, yugiohcard0_.image as image7_1_1_, yugiohcard0_.price as price8_1_1_, yugiohcard0_.qty as qty9_1_1_, yugiohcard0_.status as status10_1_1_, yugiohcard0_.user_id as user_id11_1_1_, entries1_.yugiohCard_id as yugiohCa4_2_3_, entries1_.id as id1_2_3_, entries1_.id as id1_2_0_, entries1_.price as price2_2_0_, entries1_.update_date as update_d3_2_0_, entries1_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:16:34.020 [http-nio-8080-exec-16] AbstractEntityPersister - Static SQL for entity: edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-11-11 19:16:34.020 [http-nio-8080-exec-16] AbstractEntityPersister -  Version select: select id from yugioh_card_history where id =?
[DEBUG] 2019-11-11 19:16:34.020 [http-nio-8080-exec-16] AbstractEntityPersister -  Snapshot select: select yugiohcard_.id, yugiohcard_.price as price2_2_, yugiohcard_.yugiohCard_id as yugiohCa4_2_ from yugioh_card_history yugiohcard_ where yugiohcard_.id=?
[DEBUG] 2019-11-11 19:16:34.020 [http-nio-8080-exec-16] AbstractEntityPersister -  Insert 0: insert into yugioh_card_history (price, update_date, yugiohCard_id, id) values (?, ?, ?, ?)
[DEBUG] 2019-11-11 19:16:34.020 [http-nio-8080-exec-16] AbstractEntityPersister -  Update 0: update yugioh_card_history set price=?, yugiohCard_id=? where id=?
[DEBUG] 2019-11-11 19:16:34.020 [http-nio-8080-exec-16] AbstractEntityPersister -  Delete 0: delete from yugioh_card_history where id=?
[DEBUG] 2019-11-11 19:16:34.020 [http-nio-8080-exec-16] AbstractEntityPersister -  Identity insert: insert into yugioh_card_history (price, update_date, yugiohCard_id) values (?, ?, ?)
[DEBUG] 2019-11-11 19:16:34.020 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d15af54]
[DEBUG] 2019-11-11 19:16:34.020 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-11-11 19:16:34.020 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : ts
[DEBUG] 2019-11-11 19:16:34.020 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard
[DEBUG] 2019-11-11 19:16:34.020 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a4dea58]
[DEBUG] 2019-11-11 19:16:34.020 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardIndex
[DEBUG] 2019-11-11 19:16:34.020 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardName
[DEBUG] 2019-11-11 19:16:34.020 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardRarity
[DEBUG] 2019-11-11 19:16:34.020 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardSet
[DEBUG] 2019-11-11 19:16:34.020 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardType
[DEBUG] 2019-11-11 19:16:34.020 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.entries
[DEBUG] 2019-11-11 19:16:34.020 [http-nio-8080-exec-16] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.entries
[DEBUG] 2019-11-11 19:16:34.020 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.image
[DEBUG] 2019-11-11 19:16:34.021 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.price
[DEBUG] 2019-11-11 19:16:34.021 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.quantity
[DEBUG] 2019-11-11 19:16:34.021 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.status
[DEBUG] 2019-11-11 19:16:34.021 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user
[DEBUG] 2019-11-11 19:16:34.021 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f4778e8]
[DEBUG] 2019-11-11 19:16:34.021 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.cards
[DEBUG] 2019-11-11 19:16:34.021 [http-nio-8080-exec-16] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.user.cards
[DEBUG] 2019-11-11 19:16:34.021 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.password
[DEBUG] 2019-11-11 19:16:34.021 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.role
[DEBUG] 2019-11-11 19:16:34.021 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.userName
[DEBUG] 2019-11-11 19:16:34.021 [http-nio-8080-exec-16] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-11 19:16:34.021 [http-nio-8080-exec-16] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-11 19:16:34.024 [http-nio-8080-exec-16] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCardHistory)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCardHistory)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCardHistory.yugiohCard)
             - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCardHistory.yugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCardHistory)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(yugiohCard)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCard)
                - SQL table alias mapping - yugiohcard1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-11-11 19:16:34.024 [http-nio-8080-exec-16] EntityLoader - Static select for entity edu.yang.entity.YugiohCardHistory [NONE]: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_, yugiohcard1_.id as id1_1_1_, yugiohcard1_.card_index as card_ind2_1_1_, yugiohcard1_.card_name as card_nam3_1_1_, yugiohcard1_.card_rarity as card_rar4_1_1_, yugiohcard1_.card_set as card_set5_1_1_, yugiohcard1_.card_type as card_typ6_1_1_, yugiohcard1_.image as image7_1_1_, yugiohcard1_.price as price8_1_1_, yugiohcard1_.qty as qty9_1_1_, yugiohcard1_.status as status10_1_1_, yugiohcard1_.user_id as user_id11_1_1_, user2_.id as id1_0_2_, user2_.user_password as user_pas2_0_2_, user2_.user_role as user_rol3_0_2_, user2_.user_name as user_nam4_0_2_ from yugioh_card_history yugiohcard0_ left outer join yugioh_card yugiohcard1_ on yugiohcard0_.yugiohCard_id=yugiohcard1_.id left outer join user user2_ on yugiohcard1_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:16:34.024 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fddb856]
[DEBUG] 2019-11-11 19:16:34.024 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-11-11 19:16:34.024 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : ts
[DEBUG] 2019-11-11 19:16:34.025 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard
[DEBUG] 2019-11-11 19:16:34.025 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34f4e27a]
[DEBUG] 2019-11-11 19:16:34.025 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardIndex
[DEBUG] 2019-11-11 19:16:34.025 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardName
[DEBUG] 2019-11-11 19:16:34.025 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardRarity
[DEBUG] 2019-11-11 19:16:34.025 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardSet
[DEBUG] 2019-11-11 19:16:34.025 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardType
[DEBUG] 2019-11-11 19:16:34.025 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.entries
[DEBUG] 2019-11-11 19:16:34.025 [http-nio-8080-exec-16] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.entries
[DEBUG] 2019-11-11 19:16:34.025 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.image
[DEBUG] 2019-11-11 19:16:34.026 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.price
[DEBUG] 2019-11-11 19:16:34.027 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.quantity
[DEBUG] 2019-11-11 19:16:34.027 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.status
[DEBUG] 2019-11-11 19:16:34.027 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user
[DEBUG] 2019-11-11 19:16:34.027 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@400babd4]
[DEBUG] 2019-11-11 19:16:34.027 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.cards
[DEBUG] 2019-11-11 19:16:34.027 [http-nio-8080-exec-16] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.user.cards
[DEBUG] 2019-11-11 19:16:34.027 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.password
[DEBUG] 2019-11-11 19:16:34.027 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.role
[DEBUG] 2019-11-11 19:16:34.027 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.userName
[DEBUG] 2019-11-11 19:16:34.027 [http-nio-8080-exec-16] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-11 19:16:34.027 [http-nio-8080-exec-16] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-11 19:16:34.029 [http-nio-8080-exec-16] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCardHistory)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCardHistory)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCardHistory.yugiohCard)
             - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCardHistory.yugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCardHistory)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(yugiohCard)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCard)
                - SQL table alias mapping - yugiohcard1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-11-11 19:16:34.029 [http-nio-8080-exec-16] EntityLoader - Static select for entity edu.yang.entity.YugiohCardHistory [READ]: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_, yugiohcard1_.id as id1_1_1_, yugiohcard1_.card_index as card_ind2_1_1_, yugiohcard1_.card_name as card_nam3_1_1_, yugiohcard1_.card_rarity as card_rar4_1_1_, yugiohcard1_.card_set as card_set5_1_1_, yugiohcard1_.card_type as card_typ6_1_1_, yugiohcard1_.image as image7_1_1_, yugiohcard1_.price as price8_1_1_, yugiohcard1_.qty as qty9_1_1_, yugiohcard1_.status as status10_1_1_, yugiohcard1_.user_id as user_id11_1_1_, user2_.id as id1_0_2_, user2_.user_password as user_pas2_0_2_, user2_.user_role as user_rol3_0_2_, user2_.user_name as user_nam4_0_2_ from yugioh_card_history yugiohcard0_ left outer join yugioh_card yugiohcard1_ on yugiohcard0_.yugiohCard_id=yugiohcard1_.id left outer join user user2_ on yugiohcard1_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:16:34.030 [http-nio-8080-exec-16] Loader - Static select for action ACTION_MERGE on entity edu.yang.entity.YugiohCardHistory: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card_history yugiohcard0_ where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:16:34.030 [http-nio-8080-exec-16] Loader - Static select for action ACTION_REFRESH on entity edu.yang.entity.YugiohCardHistory: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card_history yugiohcard0_ where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:16:34.041 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@773609ab]
[DEBUG] 2019-11-11 19:16:34.041 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13289357]
[DEBUG] 2019-11-11 19:16:34.042 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cardIndex
[DEBUG] 2019-11-11 19:16:34.042 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cardName
[DEBUG] 2019-11-11 19:16:34.042 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cardRarity
[DEBUG] 2019-11-11 19:16:34.042 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cardSet
[DEBUG] 2019-11-11 19:16:34.042 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : cardType
[DEBUG] 2019-11-11 19:16:34.042 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : entries
[DEBUG] 2019-11-11 19:16:34.042 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ecd9649]
[DEBUG] 2019-11-11 19:16:34.042 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9a814ec]
[DEBUG] 2019-11-11 19:16:34.042 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2019-11-11 19:16:34.042 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-11-11 19:16:34.042 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : quantity
[DEBUG] 2019-11-11 19:16:34.042 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2019-11-11 19:16:34.042 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-11-11 19:16:34.042 [http-nio-8080-exec-16] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-11-11 19:16:34.043 [http-nio-8080-exec-16] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-11 19:16:34.051 [http-nio-8080-exec-16] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-11 19:16:34.051 [http-nio-8080-exec-16] LoadPlanTreePrinter - LoadPlan(collection=edu.yang.entity.User.cards)
    - Returns
       - CollectionReturnImpl(collection=edu.yang.entity.User.cards, querySpaceUid=<gen:0>, path=[edu.yang.entity.User.cards])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:1>, path=[edu.yang.entity.User.cards].<elements>)
             - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:2>, path=[edu.yang.entity.User.cards].<elements>.entries)
                - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:3>, path=[edu.yang.entity.User.cards].<elements>.entries.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.yang.entity.User.cards)
          - SQL table alias mapping - cards0_
          - alias suffix - 0_
          - suffixed key columns - {user_id11_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCard)
                - SQL table alias mapping - cards0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-11-11 19:16:34.052 [http-nio-8080-exec-16] CollectionLoader - Static select for collection edu.yang.entity.User.cards: select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-11 19:16:34.052 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5289b7a7]
[DEBUG] 2019-11-11 19:16:34.052 [http-nio-8080-exec-16] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6935326f]
[DEBUG] 2019-11-11 19:16:34.052 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-11-11 19:16:34.052 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : ts
[DEBUG] 2019-11-11 19:16:34.052 [http-nio-8080-exec-16] MetamodelGraphWalker - Visiting attribute path : yugiohCard
[DEBUG] 2019-11-11 19:16:34.052 [http-nio-8080-exec-16] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard
[DEBUG] 2019-11-11 19:16:34.052 [http-nio-8080-exec-16] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-11-11 19:16:34.054 [http-nio-8080-exec-16] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-11-11 19:16:34.054 [http-nio-8080-exec-16] LoadPlanTreePrinter - LoadPlan(collection=edu.yang.entity.YugiohCard.entries)
    - Returns
       - CollectionReturnImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:0>, path=[edu.yang.entity.YugiohCard.entries])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:1>, path=[edu.yang.entity.YugiohCard.entries].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.yang.entity.YugiohCard.entries)
          - SQL table alias mapping - entries0_
          - alias suffix - 0_
          - suffixed key columns - {yugiohCa4_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCardHistory)
                - SQL table alias mapping - entries0_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

[DEBUG] 2019-11-11 19:16:34.054 [http-nio-8080-exec-16] CollectionLoader - Static select for collection edu.yang.entity.YugiohCard.entries: select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-11 19:16:34.113 [http-nio-8080-exec-16] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-11-11 19:16:34.114 [http-nio-8080-exec-16] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-11-11 19:16:34.114 [http-nio-8080-exec-16] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-11-11 19:16:34.125 [http-nio-8080-exec-16] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-11-11 19:16:34.125 [http-nio-8080-exec-16] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-11-11 19:16:34.126 [http-nio-8080-exec-16] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-11-11 19:16:34.126 [http-nio-8080-exec-16] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-11-11 19:16:34.127 [http-nio-8080-exec-16] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6d78b1f2
[DEBUG] 2019-11-11 19:16:34.129 [http-nio-8080-exec-16] SessionFactoryRegistry - Registering SessionFactory: a56a6641-8ee9-4622-bd2c-2379905d8381 (<unnamed>)
[DEBUG] 2019-11-11 19:16:34.129 [http-nio-8080-exec-16] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-11-11 19:16:34.304 [http-nio-8080-exec-16] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-11-11 19:16:34.327 [http-nio-8080-exec-16] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-11 19:16:34.331 [http-nio-8080-exec-16] TransactionImpl - begin
[DEBUG] 2019-11-11 19:16:34.373 [http-nio-8080-exec-16] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-11 19:16:34.394 [http-nio-8080-exec-16] SQL - insert into user (user_password, user_role, user_name) values (?, ?, ?)
[DEBUG] 2019-11-11 19:16:34.424 [http-nio-8080-exec-16] IdentifierGeneratorHelper - Natively generated identity: 10
[DEBUG] 2019-11-11 19:16:34.424 [http-nio-8080-exec-16] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:16:34.428 [http-nio-8080-exec-16] TransactionImpl - committing
[DEBUG] 2019-11-11 19:16:34.429 [http-nio-8080-exec-16] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-11 19:16:34.429 [http-nio-8080-exec-16] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-11 19:16:34.433 [http-nio-8080-exec-16] Collections - Collection found: [edu.yang.entity.User.cards#10], was: [<unreferenced>] (initialized)
[DEBUG] 2019-11-11 19:16:34.434 [http-nio-8080-exec-16] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-11-11 19:16:34.434 [http-nio-8080-exec-16] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-11-11 19:16:34.435 [http-nio-8080-exec-16] EntityPrinter - Listing entities:
[DEBUG] 2019-11-11 19:16:34.435 [http-nio-8080-exec-16] EntityPrinter - edu.yang.entity.User{password=thompson, cards=[], role=general, id=10, userName=tessa}
[DEBUG] 2019-11-11 19:16:34.441 [http-nio-8080-exec-16] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:16:34.441 [http-nio-8080-exec-16] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:17:29.208 [http-nio-8080-exec-17] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName like :param0
[DEBUG] 2019-11-11 19:17:29.262 [http-nio-8080-exec-17] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7a9d48f2
[DEBUG] 2019-11-11 19:17:29.325 [http-nio-8080-exec-17] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.User as generatedAlias0 where generatedAlias0.userName like :param0
[DEBUG] 2019-11-11 19:17:29.343 [http-nio-8080-exec-17] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:17:29.358 [http-nio-8080-exec-17] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'yang'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'userName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-11-11 19:17:29.401 [http-nio-8080-exec-17] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-11-11 19:17:29.423 [http-nio-8080-exec-17] FromElement - FromClause{level=1} : edu.yang.entity.User (generatedAlias0) -> user0_
[DEBUG] 2019-11-11 19:17:29.425 [http-nio-8080-exec-17] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2019-11-11 19:17:29.428 [http-nio-8080-exec-17] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2019-11-11 19:17:29.429 [http-nio-8080-exec-17] DotNode - getDataType() : userName -> org.hibernate.type.StringType@4dfd3554
[DEBUG] 2019-11-11 19:17:29.430 [http-nio-8080-exec-17] FromReferenceNode - Resolved : generatedAlias0.userName -> user0_.user_name
[DEBUG] 2019-11-11 19:17:29.433 [http-nio-8080-exec-17] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-11-11 19:17:29.437 [http-nio-8080-exec-17] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.user_name user0_.id userName ) ? ) ) )
[DEBUG] 2019-11-11 19:17:29.458 [http-nio-8080-exec-17] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2019-11-11 19:17:29.459 [http-nio-8080-exec-17] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-11-11 19:17:29.459 [http-nio-8080-exec-17] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_0_' {alias=generatedAlias0, className=edu.yang.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=edu.yang.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.user_name' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path=generatedAlias0.userName,tableAlias=user0_,className=edu.yang.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=edu.yang.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@4dfd3554}

[DEBUG] 2019-11-11 19:17:29.459 [http-nio-8080-exec-17] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:17:29.466 [http-nio-8080-exec-17] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.User as generatedAlias0 where generatedAlias0.userName like :param0
[DEBUG] 2019-11-11 19:17:29.466 [http-nio-8080-exec-17] QueryTranslatorImpl - SQL: select user0_.id as id1_0_, user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_ from user user0_ where user0_.user_name like ?
[DEBUG] 2019-11-11 19:17:29.466 [http-nio-8080-exec-17] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-11-11 19:17:29.492 [http-nio-8080-exec-17] SQL - select user0_.id as id1_0_, user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_ from user user0_ where user0_.user_name like ?
[DEBUG] 2019-11-11 19:17:29.503 [http-nio-8080-exec-17] Loader - Result set row: 0
[DEBUG] 2019-11-11 19:17:29.509 [http-nio-8080-exec-17] Loader - Result row: EntityKey[edu.yang.entity.User#10]
[DEBUG] 2019-11-11 19:17:29.525 [http-nio-8080-exec-17] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#10]
[DEBUG] 2019-11-11 19:17:29.525 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:17:29.525 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:17:29.528 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `password` : value = thompson
[DEBUG] 2019-11-11 19:17:29.528 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:17:29.528 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:17:29.530 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:17:29.530 [http-nio-8080-exec-17] TwoPhaseLoad - Processing attribute `userName` : value = tessa
[DEBUG] 2019-11-11 19:17:29.530 [http-nio-8080-exec-17] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:17:29.530 [http-nio-8080-exec-17] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#10]
[DEBUG] 2019-11-11 19:17:29.539 [http-nio-8080-exec-17] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#10]
[DEBUG] 2019-11-11 19:17:29.540 [http-nio-8080-exec-17] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-11 19:17:29.557 [http-nio-8080-exec-17] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#10]
[DEBUG] 2019-11-11 19:17:29.562 [http-nio-8080-exec-17] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:17:29.563 [http-nio-8080-exec-17] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#10]
[DEBUG] 2019-11-11 19:17:29.564 [http-nio-8080-exec-17] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:17:29.568 [http-nio-8080-exec-17] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:17:29.568 [http-nio-8080-exec-17] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:17:29.570 [http-nio-8080-exec-17] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:17:58.249 [http-nio-8080-exec-20] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName like :param0
[DEBUG] 2019-11-11 19:17:58.251 [http-nio-8080-exec-20] SQL - select user0_.id as id1_0_, user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_ from user user0_ where user0_.user_name like ?
[DEBUG] 2019-11-11 19:17:58.261 [http-nio-8080-exec-20] Loader - Result set row: 0
[DEBUG] 2019-11-11 19:17:58.261 [http-nio-8080-exec-20] Loader - Result row: EntityKey[edu.yang.entity.User#10]
[DEBUG] 2019-11-11 19:17:58.262 [http-nio-8080-exec-20] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#10]
[DEBUG] 2019-11-11 19:17:58.262 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:17:58.263 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:17:58.263 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `password` : value = thompson
[DEBUG] 2019-11-11 19:17:58.263 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:17:58.263 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:17:58.263 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:17:58.263 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `userName` : value = tessa
[DEBUG] 2019-11-11 19:17:58.263 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:17:58.263 [http-nio-8080-exec-20] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#10]
[DEBUG] 2019-11-11 19:17:58.263 [http-nio-8080-exec-20] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#10]
[DEBUG] 2019-11-11 19:17:58.263 [http-nio-8080-exec-20] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-11 19:17:58.279 [http-nio-8080-exec-20] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#10]
[DEBUG] 2019-11-11 19:17:58.280 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:17:58.280 [http-nio-8080-exec-20] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#10]
[DEBUG] 2019-11-11 19:17:58.280 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:17:58.280 [http-nio-8080-exec-20] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:17:58.280 [http-nio-8080-exec-20] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:17:58.280 [http-nio-8080-exec-20] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:17:58.290 [http-nio-8080-exec-20] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-11 19:17:58.290 [http-nio-8080-exec-20] TransactionImpl - begin
[DEBUG] 2019-11-11 19:17:58.292 [http-nio-8080-exec-20] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-11 19:17:58.293 [http-nio-8080-exec-20] SQL - insert into yugioh_card (card_index, card_name, card_rarity, card_set, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-11-11 19:17:58.320 [http-nio-8080-exec-20] IdentifierGeneratorHelper - Natively generated identity: 10
[DEBUG] 2019-11-11 19:17:58.321 [http-nio-8080-exec-20] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:17:58.330 [http-nio-8080-exec-20] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-11 19:17:58.333 [http-nio-8080-exec-20] SQL - insert into yugioh_card_history (price, update_date, yugiohCard_id) values (?, ?, ?)
[DEBUG] 2019-11-11 19:17:58.339 [http-nio-8080-exec-20] IdentifierGeneratorHelper - Natively generated identity: 18
[DEBUG] 2019-11-11 19:17:58.340 [http-nio-8080-exec-20] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:17:58.342 [http-nio-8080-exec-20] TransactionImpl - committing
[DEBUG] 2019-11-11 19:17:58.342 [http-nio-8080-exec-20] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-11 19:17:58.342 [http-nio-8080-exec-20] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-11 19:17:58.343 [http-nio-8080-exec-20] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#10], was: [<unreferenced>] (initialized)
[DEBUG] 2019-11-11 19:17:58.343 [http-nio-8080-exec-20] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2019-11-11 19:17:58.343 [http-nio-8080-exec-20] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-11-11 19:17:58.343 [http-nio-8080-exec-20] EntityPrinter - Listing entities:
[DEBUG] 2019-11-11 19:17:58.344 [http-nio-8080-exec-20] EntityPrinter - edu.yang.entity.YugiohCard{image=null, entries=[edu.yang.entity.YugiohCardHistory#18], quantity=1, cardName=Harpie's Feather Duster, cardSet=DDS, price=65.0, cardRarity=Secret, cardType=Spell, id=10, user=edu.yang.entity.User#10, cardIndex=EN025, status=unsold}
[DEBUG] 2019-11-11 19:17:58.344 [http-nio-8080-exec-20] EntityPrinter - edu.yang.entity.YugiohCardHistory{yugiohCard=edu.yang.entity.YugiohCard#10, price=65.0, id=18, ts=2019-11-11 19:17:58.333}
[DEBUG] 2019-11-11 19:17:58.346 [http-nio-8080-exec-20] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:17:58.353 [http-nio-8080-exec-20] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:17:58.353 [http-nio-8080-exec-20] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-11-11 19:17:58.353 [http-nio-8080-exec-20] TransactionImpl - begin
[DEBUG] 2019-11-11 19:17:58.355 [http-nio-8080-exec-20] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-11-11 19:17:58.355 [http-nio-8080-exec-20] SQL - insert into yugioh_card_history (price, update_date, yugiohCard_id) values (?, ?, ?)
[DEBUG] 2019-11-11 19:17:58.359 [http-nio-8080-exec-20] IdentifierGeneratorHelper - Natively generated identity: 19
[DEBUG] 2019-11-11 19:17:58.359 [http-nio-8080-exec-20] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:17:58.359 [http-nio-8080-exec-20] TransactionImpl - committing
[DEBUG] 2019-11-11 19:17:58.359 [http-nio-8080-exec-20] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-11-11 19:17:58.361 [http-nio-8080-exec-20] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-11-11 19:17:58.361 [http-nio-8080-exec-20] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-11-11 19:17:58.361 [http-nio-8080-exec-20] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-11-11 19:17:58.361 [http-nio-8080-exec-20] EntityPrinter - Listing entities:
[DEBUG] 2019-11-11 19:17:58.362 [http-nio-8080-exec-20] EntityPrinter - edu.yang.entity.YugiohCardHistory{yugiohCard=edu.yang.entity.YugiohCard#10, price=65.0, id=19, ts=2019-11-11 19:17:58.355}
[DEBUG] 2019-11-11 19:17:58.364 [http-nio-8080-exec-20] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:17:58.373 [http-nio-8080-exec-20] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:18:00.908 [http-nio-8080-exec-13] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName like :param0
[DEBUG] 2019-11-11 19:18:00.910 [http-nio-8080-exec-13] SQL - select user0_.id as id1_0_, user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_ from user user0_ where user0_.user_name like ?
[DEBUG] 2019-11-11 19:18:00.916 [http-nio-8080-exec-13] Loader - Result set row: 0
[DEBUG] 2019-11-11 19:18:00.919 [http-nio-8080-exec-13] Loader - Result row: EntityKey[edu.yang.entity.User#10]
[DEBUG] 2019-11-11 19:18:00.921 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#10]
[DEBUG] 2019-11-11 19:18:00.921 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:18:00.922 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:00.922 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `password` : value = thompson
[DEBUG] 2019-11-11 19:18:00.922 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:00.922 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:18:00.922 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:00.922 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `userName` : value = tessa
[DEBUG] 2019-11-11 19:18:00.922 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:00.922 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#10]
[DEBUG] 2019-11-11 19:18:00.922 [http-nio-8080-exec-13] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#10]
[DEBUG] 2019-11-11 19:18:00.922 [http-nio-8080-exec-13] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-11 19:18:00.926 [http-nio-8080-exec-13] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#10]
[DEBUG] 2019-11-11 19:18:00.926 [http-nio-8080-exec-13] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:18:00.940 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#10]
[DEBUG] 2019-11-11 19:18:00.946 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#10]
[DEBUG] 2019-11-11 19:18:00.946 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-11 19:18:00.946 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:00.946 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardName` : value = Harpie's Feather Duster
[DEBUG] 2019-11-11 19:18:00.946 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:00.947 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-11 19:18:00.947 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:00.947 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardSet` : value = DDS
[DEBUG] 2019-11-11 19:18:00.947 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:00.947 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-11 19:18:00.947 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:00.947 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:18:00.947 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:00.947 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:18:00.947 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:00.947 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `price` : value = 65.0
[DEBUG] 2019-11-11 19:18:00.947 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:00.947 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-11 19:18:00.947 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:00.947 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:18:00.947 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:00.947 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `user` : value = 10
[DEBUG] 2019-11-11 19:18:00.947 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:00.947 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#10]
[DEBUG] 2019-11-11 19:18:00.948 [http-nio-8080-exec-13] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:18:00.948 [http-nio-8080-exec-13] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#10]
[DEBUG] 2019-11-11 19:18:00.948 [http-nio-8080-exec-13] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:18:00.949 [http-nio-8080-exec-13] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:18:00.949 [http-nio-8080-exec-13] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:18:00.950 [http-nio-8080-exec-13] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#10]
[DEBUG] 2019-11-11 19:18:00.950 [http-nio-8080-exec-13] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-11 19:18:00.958 [http-nio-8080-exec-13] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#10]
[DEBUG] 2019-11-11 19:18:00.958 [http-nio-8080-exec-13] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:18:00.960 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#10]
[DEBUG] 2019-11-11 19:18:00.960 [http-nio-8080-exec-13] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:18:00.960 [http-nio-8080-exec-13] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#10]
[DEBUG] 2019-11-11 19:18:00.960 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#18]
[DEBUG] 2019-11-11 19:18:00.960 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `price` : value = 65.0
[DEBUG] 2019-11-11 19:18:00.960 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:00.960 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:17:58.0
[DEBUG] 2019-11-11 19:18:00.960 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:00.964 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 10
[DEBUG] 2019-11-11 19:18:00.964 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:00.965 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#18]
[DEBUG] 2019-11-11 19:18:00.965 [http-nio-8080-exec-13] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#19]
[DEBUG] 2019-11-11 19:18:00.965 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `price` : value = 65.0
[DEBUG] 2019-11-11 19:18:00.965 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:00.965 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:17:58.0
[DEBUG] 2019-11-11 19:18:00.965 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:00.965 [http-nio-8080-exec-13] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 10
[DEBUG] 2019-11-11 19:18:00.965 [http-nio-8080-exec-13] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:00.965 [http-nio-8080-exec-13] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#19]
[DEBUG] 2019-11-11 19:18:00.965 [http-nio-8080-exec-13] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:18:00.972 [http-nio-8080-exec-13] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#10]
[DEBUG] 2019-11-11 19:18:00.972 [http-nio-8080-exec-13] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:18:00.973 [http-nio-8080-exec-13] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:18:00.973 [http-nio-8080-exec-13] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:18:00.973 [http-nio-8080-exec-13] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:18:14.151 [http-nio-8080-exec-21] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName like :param0
[DEBUG] 2019-11-11 19:18:14.154 [http-nio-8080-exec-21] SQL - select user0_.id as id1_0_, user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_ from user user0_ where user0_.user_name like ?
[DEBUG] 2019-11-11 19:18:14.161 [http-nio-8080-exec-21] Loader - Result set row: 0
[DEBUG] 2019-11-11 19:18:14.162 [http-nio-8080-exec-21] Loader - Result row: EntityKey[edu.yang.entity.User#10]
[DEBUG] 2019-11-11 19:18:14.163 [http-nio-8080-exec-21] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#10]
[DEBUG] 2019-11-11 19:18:14.163 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:18:14.163 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:14.163 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `password` : value = thompson
[DEBUG] 2019-11-11 19:18:14.163 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:14.163 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:18:14.163 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:14.163 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `userName` : value = tessa
[DEBUG] 2019-11-11 19:18:14.163 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:14.163 [http-nio-8080-exec-21] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#10]
[DEBUG] 2019-11-11 19:18:14.163 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#10]
[DEBUG] 2019-11-11 19:18:14.163 [http-nio-8080-exec-21] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-11 19:18:14.179 [http-nio-8080-exec-21] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#10]
[DEBUG] 2019-11-11 19:18:14.179 [http-nio-8080-exec-21] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:18:14.180 [http-nio-8080-exec-21] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#10]
[DEBUG] 2019-11-11 19:18:14.181 [http-nio-8080-exec-21] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#10]
[DEBUG] 2019-11-11 19:18:14.181 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-11 19:18:14.181 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:14.181 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardName` : value = Harpie's Feather Duster
[DEBUG] 2019-11-11 19:18:14.181 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:14.181 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-11 19:18:14.181 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:14.181 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardSet` : value = DDS
[DEBUG] 2019-11-11 19:18:14.181 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:14.181 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-11 19:18:14.181 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:14.181 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:18:14.181 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:14.181 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:18:14.181 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:14.181 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `price` : value = 65.0
[DEBUG] 2019-11-11 19:18:14.181 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:14.181 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-11 19:18:14.184 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:14.184 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:18:14.184 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:14.185 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `user` : value = 10
[DEBUG] 2019-11-11 19:18:14.185 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:14.185 [http-nio-8080-exec-21] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#10]
[DEBUG] 2019-11-11 19:18:14.185 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:18:14.186 [http-nio-8080-exec-21] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#10]
[DEBUG] 2019-11-11 19:18:14.186 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:18:14.186 [http-nio-8080-exec-21] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:18:14.186 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:18:14.186 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.YugiohCard.entries#10]
[DEBUG] 2019-11-11 19:18:14.186 [http-nio-8080-exec-21] SQL - select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-11-11 19:18:14.192 [http-nio-8080-exec-21] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.YugiohCard.entries#10]
[DEBUG] 2019-11-11 19:18:14.192 [http-nio-8080-exec-21] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:18:14.193 [http-nio-8080-exec-21] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#10]
[DEBUG] 2019-11-11 19:18:14.197 [http-nio-8080-exec-21] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:18:14.198 [http-nio-8080-exec-21] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#10]
[DEBUG] 2019-11-11 19:18:14.200 [http-nio-8080-exec-21] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#18]
[DEBUG] 2019-11-11 19:18:14.200 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `price` : value = 65.0
[DEBUG] 2019-11-11 19:18:14.201 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:14.201 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:17:58.0
[DEBUG] 2019-11-11 19:18:14.201 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:14.201 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 10
[DEBUG] 2019-11-11 19:18:14.201 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:14.202 [http-nio-8080-exec-21] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#18]
[DEBUG] 2019-11-11 19:18:14.202 [http-nio-8080-exec-21] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#19]
[DEBUG] 2019-11-11 19:18:14.202 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `price` : value = 65.0
[DEBUG] 2019-11-11 19:18:14.202 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:14.205 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:17:58.0
[DEBUG] 2019-11-11 19:18:14.205 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:14.205 [http-nio-8080-exec-21] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 10
[DEBUG] 2019-11-11 19:18:14.205 [http-nio-8080-exec-21] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:14.212 [http-nio-8080-exec-21] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#19]
[DEBUG] 2019-11-11 19:18:14.213 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:18:14.213 [http-nio-8080-exec-21] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#10]
[DEBUG] 2019-11-11 19:18:14.213 [http-nio-8080-exec-21] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:18:14.213 [http-nio-8080-exec-21] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:18:14.214 [http-nio-8080-exec-21] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:18:14.214 [http-nio-8080-exec-21] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-11-11 19:18:15.547 [http-nio-8080-exec-20] SQL - select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_index as card_ind2_1_0_, yugiohcard0_.card_name as card_nam3_1_0_, yugiohcard0_.card_rarity as card_rar4_1_0_, yugiohcard0_.card_set as card_set5_1_0_, yugiohcard0_.card_type as card_typ6_1_0_, yugiohcard0_.image as image7_1_0_, yugiohcard0_.price as price8_1_0_, yugiohcard0_.qty as qty9_1_0_, yugiohcard0_.status as status10_1_0_, yugiohcard0_.user_id as user_id11_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-11-11 19:18:15.568 [http-nio-8080-exec-20] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:18:15.572 [http-nio-8080-exec-20] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:18:15.573 [http-nio-8080-exec-20] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#10]
[DEBUG] 2019-11-11 19:18:15.574 [http-nio-8080-exec-20] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-11-11 19:18:15.574 [http-nio-8080-exec-20] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-11-11 19:18:15.576 [http-nio-8080-exec-20] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.YugiohCard.entries#10]
[DEBUG] 2019-11-11 19:18:15.577 [http-nio-8080-exec-20] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#10]
[DEBUG] 2019-11-11 19:18:15.577 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardIndex` : value = EN025
[DEBUG] 2019-11-11 19:18:15.577 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:15.577 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardName` : value = Harpie's Feather Duster
[DEBUG] 2019-11-11 19:18:15.577 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:15.577 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-11-11 19:18:15.577 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:15.577 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardSet` : value = DDS
[DEBUG] 2019-11-11 19:18:15.577 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:15.577 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-11-11 19:18:15.577 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:15.577 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:18:15.577 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:15.577 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `image` : value = null
[DEBUG] 2019-11-11 19:18:15.577 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:15.577 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `price` : value = 65.0
[DEBUG] 2019-11-11 19:18:15.578 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:15.578 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-11-11 19:18:15.578 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:15.578 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-11-11 19:18:15.578 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:15.578 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `user` : value = 10
[DEBUG] 2019-11-11 19:18:15.578 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#10]
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#18]
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `price` : value = 65.0
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:17:58.0
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 10
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#18]
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#10]
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `password` : value = thompson
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `userName` : value = tessa
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#10]
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCardHistory#19]
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `price` : value = 65.0
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `ts` : value = 2019-11-11 19:17:58.0
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`ts`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Processing attribute `yugiohCard` : value = 10
[DEBUG] 2019-11-11 19:18:15.579 [http-nio-8080-exec-20] TwoPhaseLoad - Attribute (`yugiohCard`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-11-11 19:18:15.580 [http-nio-8080-exec-20] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCardHistory#19]
[DEBUG] 2019-11-11 19:18:15.580 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:18:15.580 [http-nio-8080-exec-20] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#10]
[DEBUG] 2019-11-11 19:18:15.580 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-11-11 19:18:15.585 [http-nio-8080-exec-20] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:18:15.585 [http-nio-8080-exec-20] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#10]
[DEBUG] 2019-11-11 19:18:15.585 [http-nio-8080-exec-20] SQL - select cards0_.user_id as user_id11_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_index as card_ind2_1_1_, cards0_.card_name as card_nam3_1_1_, cards0_.card_rarity as card_rar4_1_1_, cards0_.card_set as card_set5_1_1_, cards0_.card_type as card_typ6_1_1_, cards0_.image as image7_1_1_, cards0_.price as price8_1_1_, cards0_.qty as qty9_1_1_, cards0_.status as status10_1_1_, cards0_.user_id as user_id11_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-11-11 19:18:15.588 [http-nio-8080-exec-20] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#10]
[DEBUG] 2019-11-11 19:18:15.589 [http-nio-8080-exec-20] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-11-11 19:18:15.590 [http-nio-8080-exec-20] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#10]
[DEBUG] 2019-11-11 19:18:15.590 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:18:15.590 [http-nio-8080-exec-20] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#10]
[DEBUG] 2019-11-11 19:18:15.590 [http-nio-8080-exec-20] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-11-11 19:18:15.592 [http-nio-8080-exec-20] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-11-11 19:18:15.593 [http-nio-8080-exec-20] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-11-11 19:18:15.593 [http-nio-8080-exec-20] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.YugiohCard#10
[DEBUG] 2019-11-11 19:18:15.593 [http-nio-8080-exec-20] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
