[DEBUG] 2019-12-19 10:22:18.651 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-12-19 10:22:18.658 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-12-19 10:22:18.672 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-12-19 10:22:18.835 [http-nio-8080-exec-9] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-12-19 10:22:18.908 [http-nio-8080-exec-9] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-12-19 10:22:19.450 [http-nio-8080-exec-9] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-12-19 10:22:19.454 [http-nio-8080-exec-9] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-12-19 10:22:19.534 [http-nio-8080-exec-9] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-12-19 10:22:20.551 [http-nio-8080-exec-9] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-12-19 10:22:20.590 [http-nio-8080-exec-9] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-12-19 10:22:20.602 [http-nio-8080-exec-9] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-12-19 10:22:20.696 [http-nio-8080-exec-9] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-12-19 10:22:20.829 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4f263090
[DEBUG] 2019-12-19 10:22:20.829 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4f263090
[DEBUG] 2019-12-19 10:22:20.829 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4f263090
[DEBUG] 2019-12-19 10:22:20.831 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@26375022
[DEBUG] 2019-12-19 10:22:20.832 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@f0fa8d2
[DEBUG] 2019-12-19 10:22:20.832 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@53a02591
[DEBUG] 2019-12-19 10:22:20.834 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7acd81d3
[DEBUG] 2019-12-19 10:22:20.834 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7acd81d3
[DEBUG] 2019-12-19 10:22:20.834 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7acd81d3
[DEBUG] 2019-12-19 10:22:20.842 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@4fb1363d
[DEBUG] 2019-12-19 10:22:20.843 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@4fb1363d
[DEBUG] 2019-12-19 10:22:20.844 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4fb1363d
[DEBUG] 2019-12-19 10:22:20.845 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@211bf68e
[DEBUG] 2019-12-19 10:22:20.845 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@211bf68e
[DEBUG] 2019-12-19 10:22:20.850 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@211bf68e
[DEBUG] 2019-12-19 10:22:20.851 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@574470f2
[DEBUG] 2019-12-19 10:22:20.851 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@574470f2
[DEBUG] 2019-12-19 10:22:20.852 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@574470f2
[DEBUG] 2019-12-19 10:22:20.859 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@578a8d88
[DEBUG] 2019-12-19 10:22:20.859 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@578a8d88
[DEBUG] 2019-12-19 10:22:20.860 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@578a8d88
[DEBUG] 2019-12-19 10:22:20.861 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@508a4242
[DEBUG] 2019-12-19 10:22:20.861 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@508a4242
[DEBUG] 2019-12-19 10:22:20.861 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@508a4242
[DEBUG] 2019-12-19 10:22:20.862 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@396316b5
[DEBUG] 2019-12-19 10:22:20.862 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@396316b5
[DEBUG] 2019-12-19 10:22:20.863 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@396316b5
[DEBUG] 2019-12-19 10:22:20.865 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7db02510
[DEBUG] 2019-12-19 10:22:20.865 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7db02510
[DEBUG] 2019-12-19 10:22:20.866 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@32e99a6c
[DEBUG] 2019-12-19 10:22:20.866 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@32e99a6c
[DEBUG] 2019-12-19 10:22:20.873 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@66498900
[DEBUG] 2019-12-19 10:22:20.873 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@66498900
[DEBUG] 2019-12-19 10:22:20.876 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@dd27ca3
[DEBUG] 2019-12-19 10:22:20.877 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@30ee8d7a
[DEBUG] 2019-12-19 10:22:20.878 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@fb16e8e
[DEBUG] 2019-12-19 10:22:20.878 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@fb16e8e
[DEBUG] 2019-12-19 10:22:20.880 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@40285248
[DEBUG] 2019-12-19 10:22:20.881 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@40285248
[DEBUG] 2019-12-19 10:22:20.968 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@791ecfc8
[DEBUG] 2019-12-19 10:22:20.969 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@791ecfc8
[DEBUG] 2019-12-19 10:22:20.971 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3a4dbbb3
[DEBUG] 2019-12-19 10:22:20.971 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3a4dbbb3
[DEBUG] 2019-12-19 10:22:20.973 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3f7e920f
[DEBUG] 2019-12-19 10:22:20.973 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3f7e920f
[DEBUG] 2019-12-19 10:22:20.978 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@653d148f
[DEBUG] 2019-12-19 10:22:20.978 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@653d148f
[DEBUG] 2019-12-19 10:22:20.983 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4621d361
[DEBUG] 2019-12-19 10:22:20.983 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4621d361
[DEBUG] 2019-12-19 10:22:20.985 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5fe5d9fe
[DEBUG] 2019-12-19 10:22:20.985 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5fe5d9fe
[DEBUG] 2019-12-19 10:22:20.987 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7469aa71
[DEBUG] 2019-12-19 10:22:20.987 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7469aa71
[DEBUG] 2019-12-19 10:22:20.989 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1c744561
[DEBUG] 2019-12-19 10:22:20.989 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c744561
[DEBUG] 2019-12-19 10:22:20.993 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@64af72e0
[DEBUG] 2019-12-19 10:22:20.993 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@64af72e0
[DEBUG] 2019-12-19 10:22:20.995 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@798959d8
[DEBUG] 2019-12-19 10:22:20.997 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@798959d8
[DEBUG] 2019-12-19 10:22:20.997 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@798959d8
[DEBUG] 2019-12-19 10:22:20.999 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@62faae1c
[DEBUG] 2019-12-19 10:22:21.006 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4dd12593
[DEBUG] 2019-12-19 10:22:21.006 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4dd12593
[DEBUG] 2019-12-19 10:22:21.006 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4dd12593
[DEBUG] 2019-12-19 10:22:21.009 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5d011cd7
[DEBUG] 2019-12-19 10:22:21.011 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@13fb5551
[DEBUG] 2019-12-19 10:22:21.011 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13fb5551
[DEBUG] 2019-12-19 10:22:21.016 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7dff19b7
[DEBUG] 2019-12-19 10:22:21.017 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7dff19b7
[DEBUG] 2019-12-19 10:22:21.017 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7e828292
[DEBUG] 2019-12-19 10:22:21.018 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7e828292
[DEBUG] 2019-12-19 10:22:21.018 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7f21376b
[DEBUG] 2019-12-19 10:22:21.018 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7f21376b
[DEBUG] 2019-12-19 10:22:21.023 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@38bf1153
[DEBUG] 2019-12-19 10:22:21.023 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@38bf1153
[DEBUG] 2019-12-19 10:22:21.025 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1418a2d4
[DEBUG] 2019-12-19 10:22:21.027 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@dfc22c0
[DEBUG] 2019-12-19 10:22:21.027 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@dfc22c0
[DEBUG] 2019-12-19 10:22:21.027 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@dfc22c0
[DEBUG] 2019-12-19 10:22:21.028 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5d34dda9
[DEBUG] 2019-12-19 10:22:21.029 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5d34dda9
[DEBUG] 2019-12-19 10:22:21.029 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5d34dda9
[DEBUG] 2019-12-19 10:22:21.030 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@277d049c
[DEBUG] 2019-12-19 10:22:21.031 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7814f50
[DEBUG] 2019-12-19 10:22:21.033 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@18205422
[DEBUG] 2019-12-19 10:22:21.033 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@18205422
[DEBUG] 2019-12-19 10:22:21.033 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@18205422
[DEBUG] 2019-12-19 10:22:21.039 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@56806c5
[DEBUG] 2019-12-19 10:22:21.040 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@56806c5
[DEBUG] 2019-12-19 10:22:21.040 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@56806c5
[DEBUG] 2019-12-19 10:22:21.040 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6b2c27dc
[DEBUG] 2019-12-19 10:22:21.041 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5414187c
[DEBUG] 2019-12-19 10:22:21.042 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5a344e0b
[DEBUG] 2019-12-19 10:22:21.042 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5a344e0b
[DEBUG] 2019-12-19 10:22:21.043 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4c07b24b
[DEBUG] 2019-12-19 10:22:21.045 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@76d63760
[DEBUG] 2019-12-19 10:22:21.045 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@76d63760
[DEBUG] 2019-12-19 10:22:21.046 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7513d675
[DEBUG] 2019-12-19 10:22:21.046 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7513d675
[DEBUG] 2019-12-19 10:22:21.047 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f132ba
[DEBUG] 2019-12-19 10:22:21.047 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@249659da
[DEBUG] 2019-12-19 10:22:21.052 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1664f3f0
[DEBUG] 2019-12-19 10:22:21.059 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@27ce69ef
[DEBUG] 2019-12-19 10:22:21.060 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@27ce69ef
[DEBUG] 2019-12-19 10:22:21.060 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7713a741
[DEBUG] 2019-12-19 10:22:21.060 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@588f230f
[DEBUG] 2019-12-19 10:22:21.060 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@e35fe3d
[DEBUG] 2019-12-19 10:22:21.062 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1cff3cb7
[DEBUG] 2019-12-19 10:22:21.062 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@763ca9c6
[DEBUG] 2019-12-19 10:22:21.065 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@578a6b55
[DEBUG] 2019-12-19 10:22:21.065 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@76efb38f
[DEBUG] 2019-12-19 10:22:21.065 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@13903361
[DEBUG] 2019-12-19 10:22:21.168 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-12-19 10:22:21.169 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-12-19 10:22:21.170 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-12-19 10:22:21.170 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-12-19 10:22:21.172 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-12-19 10:22:21.173 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-12-19 10:22:21.174 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-12-19 10:22:21.176 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-12-19 10:22:21.177 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-12-19 10:22:21.177 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-12-19 10:22:21.178 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-12-19 10:22:21.178 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-12-19 10:22:21.178 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-12-19 10:22:21.179 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-12-19 10:22:21.186 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/yugioh_card_db
[INFO ] 2019-12-19 10:22:21.186 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-12-19 10:22:21.186 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-12-19 10:22:21.580 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-12-19 10:22:22.012 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-12-19 10:22:22.018 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-12-19 10:22:22.018 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-12-19 10:22:22.098 [http-nio-8080-exec-9] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-12-19 10:22:22.148 [http-nio-8080-exec-9] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-12-19 10:22:22.212 [http-nio-8080-exec-9] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-12-19 10:22:22.316 [http-nio-8080-exec-9] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-12-19 10:22:22.330 [http-nio-8080-exec-9] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1d064f41] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7fa7c114]
[DEBUG] 2019-12-19 10:22:22.445 [http-nio-8080-exec-9] AnnotationBinder - Binding entity from annotated class: edu.yang.entity.YugiohCard
[DEBUG] 2019-12-19 10:22:22.514 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-12-19 10:22:22.525 [http-nio-8080-exec-9] EntityBinder - Import with entity name YugiohCard
[DEBUG] 2019-12-19 10:22:22.537 [http-nio-8080-exec-9] EntityBinder - Bind entity edu.yang.entity.YugiohCard on table yugioh_card
[DEBUG] 2019-12-19 10:22:22.623 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.636 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-12-19 10:22:22.638 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:id]
[DEBUG] 2019-12-19 10:22:22.646 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-12-19 10:22:22.652 [http-nio-8080-exec-9] PropertyBinder - Building property id
[DEBUG] 2019-12-19 10:22:22.663 [http-nio-8080-exec-9] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-12-19 10:22:22.666 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_edition, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.666 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property cardEdition with lazy=false
[DEBUG] 2019-12-19 10:22:22.666 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardEdition]
[DEBUG] 2019-12-19 10:22:22.669 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for cardEdition
[DEBUG] 2019-12-19 10:22:22.669 [http-nio-8080-exec-9] PropertyBinder - Building property cardEdition
[DEBUG] 2019-12-19 10:22:22.669 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_index, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.669 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property cardIndex with lazy=false
[DEBUG] 2019-12-19 10:22:22.669 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardIndex]
[DEBUG] 2019-12-19 10:22:22.669 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for cardIndex
[DEBUG] 2019-12-19 10:22:22.669 [http-nio-8080-exec-9] PropertyBinder - Building property cardIndex
[DEBUG] 2019-12-19 10:22:22.671 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.672 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property cardName with lazy=false
[DEBUG] 2019-12-19 10:22:22.672 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardName]
[DEBUG] 2019-12-19 10:22:22.672 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for cardName
[DEBUG] 2019-12-19 10:22:22.672 [http-nio-8080-exec-9] PropertyBinder - Building property cardName
[DEBUG] 2019-12-19 10:22:22.673 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_rarity, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.673 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property cardRarity with lazy=false
[DEBUG] 2019-12-19 10:22:22.675 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardRarity]
[DEBUG] 2019-12-19 10:22:22.675 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for cardRarity
[DEBUG] 2019-12-19 10:22:22.675 [http-nio-8080-exec-9] PropertyBinder - Building property cardRarity
[DEBUG] 2019-12-19 10:22:22.676 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_set, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.678 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property cardSet with lazy=false
[DEBUG] 2019-12-19 10:22:22.678 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardSet]
[DEBUG] 2019-12-19 10:22:22.678 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for cardSet
[DEBUG] 2019-12-19 10:22:22.678 [http-nio-8080-exec-9] PropertyBinder - Building property cardSet
[DEBUG] 2019-12-19 10:22:22.680 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_set_full_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.680 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property cardSetFullName with lazy=false
[DEBUG] 2019-12-19 10:22:22.680 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardSetFullName]
[DEBUG] 2019-12-19 10:22:22.680 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for cardSetFullName
[DEBUG] 2019-12-19 10:22:22.681 [http-nio-8080-exec-9] PropertyBinder - Building property cardSetFullName
[DEBUG] 2019-12-19 10:22:22.681 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_type, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.681 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property cardType with lazy=false
[DEBUG] 2019-12-19 10:22:22.681 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardType]
[DEBUG] 2019-12-19 10:22:22.681 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for cardType
[DEBUG] 2019-12-19 10:22:22.681 [http-nio-8080-exec-9] PropertyBinder - Building property cardType
[DEBUG] 2019-12-19 10:22:22.683 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='yugiohCard'}
[DEBUG] 2019-12-19 10:22:22.684 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=entries, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.688 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.760 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.761 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=entries_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.762 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='entries_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-12-19 10:22:22.764 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='yugiohCard'}
[DEBUG] 2019-12-19 10:22:22.765 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='yugiohCard'}
[DEBUG] 2019-12-19 10:22:22.765 [http-nio-8080-exec-9] CollectionBinder - Collection role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-12-19 10:22:22.768 [http-nio-8080-exec-9] PropertyBinder - Building property entries
[DEBUG] 2019-12-19 10:22:22.769 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=image, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.769 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property image with lazy=false
[DEBUG] 2019-12-19 10:22:22.769 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:image]
[DEBUG] 2019-12-19 10:22:22.769 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for image
[DEBUG] 2019-12-19 10:22:22.769 [http-nio-8080-exec-9] PropertyBinder - Building property image
[DEBUG] 2019-12-19 10:22:22.769 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.770 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2019-12-19 10:22:22.772 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:price]
[DEBUG] 2019-12-19 10:22:22.773 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2019-12-19 10:22:22.775 [http-nio-8080-exec-9] PropertyBinder - Building property price
[DEBUG] 2019-12-19 10:22:22.775 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=qty, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.775 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property quantity with lazy=false
[DEBUG] 2019-12-19 10:22:22.775 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:quantity]
[DEBUG] 2019-12-19 10:22:22.776 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for quantity
[DEBUG] 2019-12-19 10:22:22.776 [http-nio-8080-exec-9] PropertyBinder - Building property quantity
[DEBUG] 2019-12-19 10:22:22.776 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=status, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.777 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[DEBUG] 2019-12-19 10:22:22.777 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:status]
[DEBUG] 2019-12-19 10:22:22.777 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for status
[DEBUG] 2019-12-19 10:22:22.777 [http-nio-8080-exec-9] PropertyBinder - Building property status
[DEBUG] 2019-12-19 10:22:22.777 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-12-19 10:22:22.777 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.779 [http-nio-8080-exec-9] PropertyBinder - Building property user
[DEBUG] 2019-12-19 10:22:22.781 [http-nio-8080-exec-9] AnnotationBinder - Binding entity from annotated class: edu.yang.entity.User
[DEBUG] 2019-12-19 10:22:22.781 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-12-19 10:22:22.781 [http-nio-8080-exec-9] EntityBinder - Import with entity name User
[DEBUG] 2019-12-19 10:22:22.781 [http-nio-8080-exec-9] EntityBinder - Bind entity edu.yang.entity.User on table user
[DEBUG] 2019-12-19 10:22:22.783 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.783 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-12-19 10:22:22.783 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:id]
[DEBUG] 2019-12-19 10:22:22.783 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-12-19 10:22:22.783 [http-nio-8080-exec-9] PropertyBinder - Building property id
[DEBUG] 2019-12-19 10:22:22.784 [http-nio-8080-exec-9] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-12-19 10:22:22.784 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-12-19 10:22:22.784 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=cards, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.784 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.784 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.785 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=cards_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.785 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='cards_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-12-19 10:22:22.786 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-12-19 10:22:22.786 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-12-19 10:22:22.786 [http-nio-8080-exec-9] CollectionBinder - Collection role: edu.yang.entity.User.cards
[DEBUG] 2019-12-19 10:22:22.786 [http-nio-8080-exec-9] PropertyBinder - Building property cards
[DEBUG] 2019-12-19 10:22:22.786 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_password, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.786 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2019-12-19 10:22:22.786 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:password]
[DEBUG] 2019-12-19 10:22:22.786 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2019-12-19 10:22:22.787 [http-nio-8080-exec-9] PropertyBinder - Building property password
[DEBUG] 2019-12-19 10:22:22.788 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.792 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property role with lazy=false
[DEBUG] 2019-12-19 10:22:22.793 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:role]
[DEBUG] 2019-12-19 10:22:22.793 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for role
[DEBUG] 2019-12-19 10:22:22.793 [http-nio-8080-exec-9] PropertyBinder - Building property role
[DEBUG] 2019-12-19 10:22:22.793 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.793 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-12-19 10:22:22.793 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:userName]
[DEBUG] 2019-12-19 10:22:22.793 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-12-19 10:22:22.793 [http-nio-8080-exec-9] PropertyBinder - Building property userName
[DEBUG] 2019-12-19 10:22:22.794 [http-nio-8080-exec-9] AnnotationBinder - Binding entity from annotated class: edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-12-19 10:22:22.794 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-12-19 10:22:22.794 [http-nio-8080-exec-9] EntityBinder - Import with entity name YugiohCardHistory
[DEBUG] 2019-12-19 10:22:22.794 [http-nio-8080-exec-9] EntityBinder - Bind entity edu.yang.entity.YugiohCardHistory on table yugioh_card_history
[DEBUG] 2019-12-19 10:22:22.799 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.800 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-12-19 10:22:22.800 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCardHistory:id]
[DEBUG] 2019-12-19 10:22:22.800 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-12-19 10:22:22.800 [http-nio-8080-exec-9] PropertyBinder - Building property id
[DEBUG] 2019-12-19 10:22:22.800 [http-nio-8080-exec-9] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-12-19 10:22:22.800 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.800 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2019-12-19 10:22:22.800 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCardHistory:price]
[DEBUG] 2019-12-19 10:22:22.800 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2019-12-19 10:22:22.800 [http-nio-8080-exec-9] PropertyBinder - Building property price
[DEBUG] 2019-12-19 10:22:22.802 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=update_date, insertable=true, updatable=false, unique=false}
[DEBUG] 2019-12-19 10:22:22.802 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property ts with lazy=false
[DEBUG] 2019-12-19 10:22:22.802 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCardHistory:ts]
[DEBUG] 2019-12-19 10:22:22.808 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for ts
[DEBUG] 2019-12-19 10:22:22.808 [http-nio-8080-exec-9] PropertyBinder - Building property ts
[DEBUG] 2019-12-19 10:22:22.840 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-12-19 10:22:22.840 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=yugiohCard, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-19 10:22:22.840 [http-nio-8080-exec-9] PropertyBinder - Building property yugiohCard
[DEBUG] 2019-12-19 10:22:22.847 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-12-19 10:22:22.848 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for cardEdition
[DEBUG] 2019-12-19 10:22:22.848 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for cardIndex
[DEBUG] 2019-12-19 10:22:22.848 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for cardName
[DEBUG] 2019-12-19 10:22:22.848 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for cardRarity
[DEBUG] 2019-12-19 10:22:22.848 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for cardSet
[DEBUG] 2019-12-19 10:22:22.848 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for cardSetFullName
[DEBUG] 2019-12-19 10:22:22.848 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for cardType
[DEBUG] 2019-12-19 10:22:22.848 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for image
[DEBUG] 2019-12-19 10:22:22.848 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2019-12-19 10:22:22.848 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for quantity
[DEBUG] 2019-12-19 10:22:22.848 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for status
[DEBUG] 2019-12-19 10:22:22.848 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-12-19 10:22:22.848 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2019-12-19 10:22:22.848 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for role
[DEBUG] 2019-12-19 10:22:22.848 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-12-19 10:22:22.848 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-12-19 10:22:22.848 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2019-12-19 10:22:22.848 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for ts
[DEBUG] 2019-12-19 10:22:22.857 [http-nio-8080-exec-9] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [yugioh_card]
[DEBUG] 2019-12-19 10:22:22.857 [http-nio-8080-exec-9] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2019-12-19 10:22:22.857 [http-nio-8080-exec-9] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [yugioh_card_history]
[DEBUG] 2019-12-19 10:22:22.857 [http-nio-8080-exec-9] CollectionSecondPass - Second pass for collection: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-12-19 10:22:22.857 [http-nio-8080-exec-9] CollectionBinder - Binding a OneToMany: edu.yang.entity.YugiohCard.entries through a foreign key
[DEBUG] 2019-12-19 10:22:22.858 [http-nio-8080-exec-9] CollectionBinder - Mapping collection: edu.yang.entity.YugiohCard.entries -> yugioh_card_history
[DEBUG] 2019-12-19 10:22:22.859 [http-nio-8080-exec-9] TableBinder - Retrieving property edu.yang.entity.YugiohCardHistory.yugiohCard
[DEBUG] 2019-12-19 10:22:22.859 [http-nio-8080-exec-9] CollectionSecondPass - Mapped collection key: yugiohCard_id, one-to-many: edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-12-19 10:22:22.859 [http-nio-8080-exec-9] CollectionSecondPass - Second pass for collection: edu.yang.entity.User.cards
[DEBUG] 2019-12-19 10:22:22.859 [http-nio-8080-exec-9] CollectionBinder - Binding a OneToMany: edu.yang.entity.User.cards through a foreign key
[DEBUG] 2019-12-19 10:22:22.859 [http-nio-8080-exec-9] CollectionBinder - Mapping collection: edu.yang.entity.User.cards -> yugioh_card
[DEBUG] 2019-12-19 10:22:22.860 [http-nio-8080-exec-9] TableBinder - Retrieving property edu.yang.entity.YugiohCard.user
[DEBUG] 2019-12-19 10:22:22.861 [http-nio-8080-exec-9] CollectionSecondPass - Mapped collection key: user_id, one-to-many: edu.yang.entity.YugiohCard
[DEBUG] 2019-12-19 10:22:22.861 [http-nio-8080-exec-9] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.User
[DEBUG] 2019-12-19 10:22:22.863 [http-nio-8080-exec-9] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.YugiohCard
[DEBUG] 2019-12-19 10:22:22.869 [http-nio-8080-exec-9] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.User
[DEBUG] 2019-12-19 10:22:22.870 [http-nio-8080-exec-9] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.YugiohCard
[DEBUG] 2019-12-19 10:22:22.966 [http-nio-8080-exec-9] SessionFactoryImpl - Building session factory
[DEBUG] 2019-12-19 10:22:22.967 [http-nio-8080-exec-9] Settings - SessionFactory name : null
[DEBUG] 2019-12-19 10:22:22.967 [http-nio-8080-exec-9] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-12-19 10:22:22.967 [http-nio-8080-exec-9] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-12-19 10:22:22.967 [http-nio-8080-exec-9] Settings - Statistics: disabled
[DEBUG] 2019-12-19 10:22:22.967 [http-nio-8080-exec-9] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-12-19 10:22:22.967 [http-nio-8080-exec-9] Settings - Default entity-mode: pojo
[DEBUG] 2019-12-19 10:22:22.967 [http-nio-8080-exec-9] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-12-19 10:22:22.967 [http-nio-8080-exec-9] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-12-19 10:22:22.967 [http-nio-8080-exec-9] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-12-19 10:22:22.967 [http-nio-8080-exec-9] Settings - Default batch fetch size: -1
[DEBUG] 2019-12-19 10:22:22.967 [http-nio-8080-exec-9] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-12-19 10:22:22.967 [http-nio-8080-exec-9] Settings - Default null ordering: NONE
[DEBUG] 2019-12-19 10:22:22.967 [http-nio-8080-exec-9] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-12-19 10:22:22.968 [http-nio-8080-exec-9] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-12-19 10:22:22.968 [http-nio-8080-exec-9] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-12-19 10:22:22.968 [http-nio-8080-exec-9] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-12-19 10:22:22.968 [http-nio-8080-exec-9] Settings - Query language substitutions: {}
[DEBUG] 2019-12-19 10:22:22.968 [http-nio-8080-exec-9] Settings - Named query checking : enabled
[DEBUG] 2019-12-19 10:22:22.968 [http-nio-8080-exec-9] Settings - Second-level cache: disabled
[DEBUG] 2019-12-19 10:22:22.968 [http-nio-8080-exec-9] Settings - Second-level query cache: disabled
[DEBUG] 2019-12-19 10:22:22.968 [http-nio-8080-exec-9] Settings - Second-level query cache factory: null
[DEBUG] 2019-12-19 10:22:22.968 [http-nio-8080-exec-9] Settings - Second-level cache region prefix: null
[DEBUG] 2019-12-19 10:22:22.968 [http-nio-8080-exec-9] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-12-19 10:22:22.968 [http-nio-8080-exec-9] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-12-19 10:22:22.968 [http-nio-8080-exec-9] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-12-19 10:22:22.968 [http-nio-8080-exec-9] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-12-19 10:22:22.968 [http-nio-8080-exec-9] Settings - JDBC batch size: 15
[DEBUG] 2019-12-19 10:22:22.968 [http-nio-8080-exec-9] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-12-19 10:22:22.968 [http-nio-8080-exec-9] Settings - Scrollable result sets: enabled
[DEBUG] 2019-12-19 10:22:22.968 [http-nio-8080-exec-9] Settings - Wrap result sets: disabled
[DEBUG] 2019-12-19 10:22:22.968 [http-nio-8080-exec-9] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-12-19 10:22:22.968 [http-nio-8080-exec-9] Settings - JDBC result set fetch size: null
[DEBUG] 2019-12-19 10:22:22.969 [http-nio-8080-exec-9] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-12-19 10:22:22.969 [http-nio-8080-exec-9] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-12-19 10:22:22.969 [http-nio-8080-exec-9] Settings - JPA compliance - query : 
[DEBUG] 2019-12-19 10:22:22.969 [http-nio-8080-exec-9] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-12-19 10:22:22.969 [http-nio-8080-exec-9] Settings - JPA compliance - lists : 
[DEBUG] 2019-12-19 10:22:22.969 [http-nio-8080-exec-9] Settings - JPA compliance - transactions : 
[INFO ] 2019-12-19 10:22:23.083 [http-nio-8080-exec-9] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-12-19 10:22:23.144 [http-nio-8080-exec-9] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-12-19 10:22:23.145 [http-nio-8080-exec-9] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=Unknown, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-10-15, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.5+10-post-Ubuntu-0ubuntu1.118.04, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.5, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Private Build, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Private Build, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.0.0-37-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/yugioh_card_db, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=Unknown, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6be7f76b, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.5+10-post-Ubuntu-0ubuntu1.118.04, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/yugioh_card_db, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2019-12-19 10:22:23.215 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.User] is safe
[DEBUG] 2019-12-19 10:22:23.215 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.User
[DEBUG] 2019-12-19 10:22:23.237 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCard] is safe
[DEBUG] 2019-12-19 10:22:23.238 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCard
[DEBUG] 2019-12-19 10:22:23.248 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCardHistory] is safe
[DEBUG] 2019-12-19 10:22:23.249 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-12-19 10:22:23.255 [http-nio-8080-exec-9] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-12-19 10:22:23.259 [http-nio-8080-exec-9] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-12-19 10:22:23.260 [http-nio-8080-exec-9] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1d064f41] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1b735e8e]
[DEBUG] 2019-12-19 10:22:23.360 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.User] is safe
[DEBUG] 2019-12-19 10:22:23.360 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.User
[DEBUG] 2019-12-19 10:22:23.388 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.User] is safe
[DEBUG] 2019-12-19 10:22:23.388 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.User
[DEBUG] 2019-12-19 10:22:23.846 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCard] is safe
[DEBUG] 2019-12-19 10:22:23.847 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCard
[DEBUG] 2019-12-19 10:22:23.848 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCard] is safe
[DEBUG] 2019-12-19 10:22:23.850 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCard
[DEBUG] 2019-12-19 10:22:23.987 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCardHistory] is safe
[DEBUG] 2019-12-19 10:22:23.988 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-12-19 10:22:23.994 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCardHistory] is safe
[DEBUG] 2019-12-19 10:22:23.994 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-12-19 10:22:24.038 [http-nio-8080-exec-9] AbstractCollectionPersister - Static SQL for collection: edu.yang.entity.User.cards
[DEBUG] 2019-12-19 10:22:24.038 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row insert: update yugioh_card set user_id=? where id=?
[DEBUG] 2019-12-19 10:22:24.038 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row update: update yugioh_card set  where id=?
[DEBUG] 2019-12-19 10:22:24.038 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row delete: update yugioh_card set user_id=null where user_id=? and id=?
[DEBUG] 2019-12-19 10:22:24.038 [http-nio-8080-exec-9] AbstractCollectionPersister -  One-shot delete: update yugioh_card set user_id=null where user_id=?
[DEBUG] 2019-12-19 10:22:24.039 [http-nio-8080-exec-9] AbstractCollectionPersister - Static SQL for collection: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-12-19 10:22:24.039 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row insert: update yugioh_card_history set yugiohCard_id=? where id=?
[DEBUG] 2019-12-19 10:22:24.039 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row update: update yugioh_card_history set  where id=?
[DEBUG] 2019-12-19 10:22:24.042 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row delete: update yugioh_card_history set yugiohCard_id=null where yugiohCard_id=? and id=?
[DEBUG] 2019-12-19 10:22:24.042 [http-nio-8080-exec-9] AbstractCollectionPersister -  One-shot delete: update yugioh_card_history set yugiohCard_id=null where yugiohCard_id=?
[DEBUG] 2019-12-19 10:22:24.047 [http-nio-8080-exec-9] AbstractEntityPersister - Static SQL for entity: edu.yang.entity.User
[DEBUG] 2019-12-19 10:22:24.047 [http-nio-8080-exec-9] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2019-12-19 10:22:24.047 [http-nio-8080-exec-9] AbstractEntityPersister -  Snapshot select: select user_.id, user_.user_password as user_pas2_0_, user_.user_role as user_rol3_0_, user_.user_name as user_nam4_0_ from user user_ where user_.id=?
[DEBUG] 2019-12-19 10:22:24.047 [http-nio-8080-exec-9] AbstractEntityPersister -  Insert 0: insert into user (user_password, user_role, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2019-12-19 10:22:24.048 [http-nio-8080-exec-9] AbstractEntityPersister -  Update 0: update user set user_password=?, user_role=?, user_name=? where id=?
[DEBUG] 2019-12-19 10:22:24.048 [http-nio-8080-exec-9] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2019-12-19 10:22:24.048 [http-nio-8080-exec-9] AbstractEntityPersister -  Identity insert: insert into user (user_password, user_role, user_name) values (?, ?, ?)
[DEBUG] 2019-12-19 10:22:24.137 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49cf2582]
[DEBUG] 2019-12-19 10:22:24.145 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards
[DEBUG] 2019-12-19 10:22:24.164 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f84e569]
[DEBUG] 2019-12-19 10:22:24.167 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46c79f33]
[DEBUG] 2019-12-19 10:22:24.180 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.cardEdition
[DEBUG] 2019-12-19 10:22:24.180 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.cardIndex
[DEBUG] 2019-12-19 10:22:24.180 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.cardName
[DEBUG] 2019-12-19 10:22:24.180 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.cardRarity
[DEBUG] 2019-12-19 10:22:24.180 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.cardSet
[DEBUG] 2019-12-19 10:22:24.180 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.cardSetFullName
[DEBUG] 2019-12-19 10:22:24.180 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.cardType
[DEBUG] 2019-12-19 10:22:24.180 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.entries
[DEBUG] 2019-12-19 10:22:24.184 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6432bfbb]
[DEBUG] 2019-12-19 10:22:24.184 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fed513c]
[DEBUG] 2019-12-19 10:22:24.184 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.entries.price
[DEBUG] 2019-12-19 10:22:24.184 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.entries.ts
[DEBUG] 2019-12-19 10:22:24.186 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.entries.yugiohCard
[DEBUG] 2019-12-19 10:22:24.186 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : cards.entries.yugiohCard
[DEBUG] 2019-12-19 10:22:24.187 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.image
[DEBUG] 2019-12-19 10:22:24.189 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.price
[DEBUG] 2019-12-19 10:22:24.189 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.quantity
[DEBUG] 2019-12-19 10:22:24.189 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.status
[DEBUG] 2019-12-19 10:22:24.189 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.user
[DEBUG] 2019-12-19 10:22:24.189 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : cards.user
[DEBUG] 2019-12-19 10:22:24.189 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-12-19 10:22:24.189 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2019-12-19 10:22:24.189 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-12-19 10:22:24.192 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-12-19 10:22:24.305 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-12-19 10:22:24.329 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:0>, path=edu.yang.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.User.cards, querySpaceUid=<gen:1>, path=edu.yang.entity.User.cards)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:2>, path=edu.yang.entity.User.cards.<elements>)
                - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:3>, path=edu.yang.entity.User.cards.<elements>.entries)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:4>, path=edu.yang.entity.User.cards.<elements>.entries.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(cards)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.User.cards)
                - SQL table alias mapping - cards1_
                - alias suffix - 1_
                - suffixed key columns - {user_id13_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCard)
                      - SQL table alias mapping - cards1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(entries)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=edu.yang.entity.YugiohCard.entries)
                            - SQL table alias mapping - entries2_
                            - alias suffix - 3_
                            - suffixed key columns - {yugiohCa4_2_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_2_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=edu.yang.entity.YugiohCardHistory)
                                  - SQL table alias mapping - entries2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_2_4_}

[DEBUG] 2019-12-19 10:22:24.341 [http-nio-8080-exec-9] EntityLoader - Static select for entity edu.yang.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id13_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_edition as card_edi2_1_2_, cards1_.card_index as card_ind3_1_2_, cards1_.card_name as card_nam4_1_2_, cards1_.card_rarity as card_rar5_1_2_, cards1_.card_set as card_set6_1_2_, cards1_.card_set_full_name as card_set7_1_2_, cards1_.card_type as card_typ8_1_2_, cards1_.image as image9_1_2_, cards1_.price as price10_1_2_, cards1_.qty as qty11_1_2_, cards1_.status as status12_1_2_, cards1_.user_id as user_id13_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-12-19 10:22:24.341 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2193c7fa]
[DEBUG] 2019-12-19 10:22:24.341 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards
[DEBUG] 2019-12-19 10:22:24.341 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5401a898]
[DEBUG] 2019-12-19 10:22:24.341 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64157d2b]
[DEBUG] 2019-12-19 10:22:24.341 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.cardEdition
[DEBUG] 2019-12-19 10:22:24.342 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.cardIndex
[DEBUG] 2019-12-19 10:22:24.342 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.cardName
[DEBUG] 2019-12-19 10:22:24.342 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.cardRarity
[DEBUG] 2019-12-19 10:22:24.342 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.cardSet
[DEBUG] 2019-12-19 10:22:24.342 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.cardSetFullName
[DEBUG] 2019-12-19 10:22:24.342 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.cardType
[DEBUG] 2019-12-19 10:22:24.342 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.entries
[DEBUG] 2019-12-19 10:22:24.342 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f919556]
[DEBUG] 2019-12-19 10:22:24.342 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a255aa]
[DEBUG] 2019-12-19 10:22:24.344 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.entries.price
[DEBUG] 2019-12-19 10:22:24.344 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.entries.ts
[DEBUG] 2019-12-19 10:22:24.344 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.entries.yugiohCard
[DEBUG] 2019-12-19 10:22:24.345 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : cards.entries.yugiohCard
[DEBUG] 2019-12-19 10:22:24.345 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.image
[DEBUG] 2019-12-19 10:22:24.345 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.price
[DEBUG] 2019-12-19 10:22:24.345 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.quantity
[DEBUG] 2019-12-19 10:22:24.345 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.status
[DEBUG] 2019-12-19 10:22:24.345 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cards.user
[DEBUG] 2019-12-19 10:22:24.345 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : cards.user
[DEBUG] 2019-12-19 10:22:24.345 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-12-19 10:22:24.345 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2019-12-19 10:22:24.345 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-12-19 10:22:24.349 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-12-19 10:22:24.349 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-12-19 10:22:24.350 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:0>, path=edu.yang.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.User.cards, querySpaceUid=<gen:1>, path=edu.yang.entity.User.cards)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:2>, path=edu.yang.entity.User.cards.<elements>)
                - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:3>, path=edu.yang.entity.User.cards.<elements>.entries)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:4>, path=edu.yang.entity.User.cards.<elements>.entries.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(cards)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.User.cards)
                - SQL table alias mapping - cards1_
                - alias suffix - 1_
                - suffixed key columns - {user_id13_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCard)
                      - SQL table alias mapping - cards1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(entries)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=edu.yang.entity.YugiohCard.entries)
                            - SQL table alias mapping - entries2_
                            - alias suffix - 3_
                            - suffixed key columns - {yugiohCa4_2_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_2_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=edu.yang.entity.YugiohCardHistory)
                                  - SQL table alias mapping - entries2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_2_4_}

[DEBUG] 2019-12-19 10:22:24.350 [http-nio-8080-exec-9] EntityLoader - Static select for entity edu.yang.entity.User [READ]: select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id13_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_edition as card_edi2_1_2_, cards1_.card_index as card_ind3_1_2_, cards1_.card_name as card_nam4_1_2_, cards1_.card_rarity as card_rar5_1_2_, cards1_.card_set as card_set6_1_2_, cards1_.card_set_full_name as card_set7_1_2_, cards1_.card_type as card_typ8_1_2_, cards1_.image as image9_1_2_, cards1_.price as price10_1_2_, cards1_.qty as qty11_1_2_, cards1_.status as status12_1_2_, cards1_.user_id as user_id13_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-12-19 10:22:24.401 [http-nio-8080-exec-9] Loader - Static select for action ACTION_MERGE on entity edu.yang.entity.User: select user0_.id as id1_0_1_, user0_.user_password as user_pas2_0_1_, user0_.user_role as user_rol3_0_1_, user0_.user_name as user_nam4_0_1_, cards1_.user_id as user_id13_1_3_, cards1_.id as id1_1_3_, cards1_.id as id1_1_0_, cards1_.card_edition as card_edi2_1_0_, cards1_.card_index as card_ind3_1_0_, cards1_.card_name as card_nam4_1_0_, cards1_.card_rarity as card_rar5_1_0_, cards1_.card_set as card_set6_1_0_, cards1_.card_set_full_name as card_set7_1_0_, cards1_.card_type as card_typ8_1_0_, cards1_.image as image9_1_0_, cards1_.price as price10_1_0_, cards1_.qty as qty11_1_0_, cards1_.status as status12_1_0_, cards1_.user_id as user_id13_1_0_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id where user0_.id=?
[DEBUG] 2019-12-19 10:22:24.404 [http-nio-8080-exec-9] Loader - Static select for action ACTION_REFRESH on entity edu.yang.entity.User: select user0_.id as id1_0_1_, user0_.user_password as user_pas2_0_1_, user0_.user_role as user_rol3_0_1_, user0_.user_name as user_nam4_0_1_, cards1_.user_id as user_id13_1_3_, cards1_.id as id1_1_3_, cards1_.id as id1_1_0_, cards1_.card_edition as card_edi2_1_0_, cards1_.card_index as card_ind3_1_0_, cards1_.card_name as card_nam4_1_0_, cards1_.card_rarity as card_rar5_1_0_, cards1_.card_set as card_set6_1_0_, cards1_.card_set_full_name as card_set7_1_0_, cards1_.card_type as card_typ8_1_0_, cards1_.image as image9_1_0_, cards1_.price as price10_1_0_, cards1_.qty as qty11_1_0_, cards1_.status as status12_1_0_, cards1_.user_id as user_id13_1_0_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id where user0_.id=?
[DEBUG] 2019-12-19 10:22:24.405 [http-nio-8080-exec-9] AbstractEntityPersister - Static SQL for entity: edu.yang.entity.YugiohCard
[DEBUG] 2019-12-19 10:22:24.405 [http-nio-8080-exec-9] AbstractEntityPersister -  Version select: select id from yugioh_card where id =?
[DEBUG] 2019-12-19 10:22:24.405 [http-nio-8080-exec-9] AbstractEntityPersister -  Snapshot select: select yugiohcard_.id, yugiohcard_.card_edition as card_edi2_1_, yugiohcard_.card_index as card_ind3_1_, yugiohcard_.card_name as card_nam4_1_, yugiohcard_.card_rarity as card_rar5_1_, yugiohcard_.card_set as card_set6_1_, yugiohcard_.card_set_full_name as card_set7_1_, yugiohcard_.card_type as card_typ8_1_, yugiohcard_.image as image9_1_, yugiohcard_.price as price10_1_, yugiohcard_.qty as qty11_1_, yugiohcard_.status as status12_1_, yugiohcard_.user_id as user_id13_1_ from yugioh_card yugiohcard_ where yugiohcard_.id=?
[DEBUG] 2019-12-19 10:22:24.405 [http-nio-8080-exec-9] AbstractEntityPersister -  Insert 0: insert into yugioh_card (card_edition, card_index, card_name, card_rarity, card_set, card_set_full_name, card_type, image, price, qty, status, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-12-19 10:22:24.405 [http-nio-8080-exec-9] AbstractEntityPersister -  Update 0: update yugioh_card set card_edition=?, card_index=?, card_name=?, card_rarity=?, card_set=?, card_set_full_name=?, card_type=?, image=?, price=?, qty=?, status=?, user_id=? where id=?
[DEBUG] 2019-12-19 10:22:24.405 [http-nio-8080-exec-9] AbstractEntityPersister -  Delete 0: delete from yugioh_card where id=?
[DEBUG] 2019-12-19 10:22:24.405 [http-nio-8080-exec-9] AbstractEntityPersister -  Identity insert: insert into yugioh_card (card_edition, card_index, card_name, card_rarity, card_set, card_set_full_name, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-12-19 10:22:24.405 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7517e934]
[DEBUG] 2019-12-19 10:22:24.405 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cardEdition
[DEBUG] 2019-12-19 10:22:24.405 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cardIndex
[DEBUG] 2019-12-19 10:22:24.405 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cardName
[DEBUG] 2019-12-19 10:22:24.405 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cardRarity
[DEBUG] 2019-12-19 10:22:24.405 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cardSet
[DEBUG] 2019-12-19 10:22:24.405 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cardSetFullName
[DEBUG] 2019-12-19 10:22:24.405 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cardType
[DEBUG] 2019-12-19 10:22:24.405 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : entries
[DEBUG] 2019-12-19 10:22:24.408 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a099700]
[DEBUG] 2019-12-19 10:22:24.408 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30193457]
[DEBUG] 2019-12-19 10:22:24.409 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : entries.price
[DEBUG] 2019-12-19 10:22:24.409 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : entries.ts
[DEBUG] 2019-12-19 10:22:24.409 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : entries.yugiohCard
[DEBUG] 2019-12-19 10:22:24.409 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : entries.yugiohCard
[DEBUG] 2019-12-19 10:22:24.409 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2019-12-19 10:22:24.409 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-12-19 10:22:24.409 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : quantity
[DEBUG] 2019-12-19 10:22:24.409 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2019-12-19 10:22:24.409 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-12-19 10:22:24.411 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a59c6fd]
[DEBUG] 2019-12-19 10:22:24.413 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.cards
[DEBUG] 2019-12-19 10:22:24.414 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.cards
[DEBUG] 2019-12-19 10:22:24.414 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2019-12-19 10:22:24.414 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.role
[DEBUG] 2019-12-19 10:22:24.414 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-12-19 10:22:24.414 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-12-19 10:22:24.414 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-12-19 10:22:24.418 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCard)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCard)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCard.entries)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCard.entries.<elements>)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:3>, path=edu.yang.entity.YugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCard)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(entries)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.YugiohCard.entries)
                - SQL table alias mapping - entries1_
                - alias suffix - 1_
                - suffixed key columns - {yugiohCa4_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_2_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCardHistory)
                      - SQL table alias mapping - entries1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.yang.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 3_
                - suffixed key columns - {id1_0_3_}

[DEBUG] 2019-12-19 10:22:24.418 [http-nio-8080-exec-9] EntityLoader - Static select for entity edu.yang.entity.YugiohCard [NONE]: select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_edition as card_edi2_1_0_, yugiohcard0_.card_index as card_ind3_1_0_, yugiohcard0_.card_name as card_nam4_1_0_, yugiohcard0_.card_rarity as card_rar5_1_0_, yugiohcard0_.card_set as card_set6_1_0_, yugiohcard0_.card_set_full_name as card_set7_1_0_, yugiohcard0_.card_type as card_typ8_1_0_, yugiohcard0_.image as image9_1_0_, yugiohcard0_.price as price10_1_0_, yugiohcard0_.qty as qty11_1_0_, yugiohcard0_.status as status12_1_0_, yugiohcard0_.user_id as user_id13_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-12-19 10:22:24.418 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62ef74c0]
[DEBUG] 2019-12-19 10:22:24.418 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cardEdition
[DEBUG] 2019-12-19 10:22:24.418 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cardIndex
[DEBUG] 2019-12-19 10:22:24.418 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cardName
[DEBUG] 2019-12-19 10:22:24.419 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cardRarity
[DEBUG] 2019-12-19 10:22:24.420 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cardSet
[DEBUG] 2019-12-19 10:22:24.420 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cardSetFullName
[DEBUG] 2019-12-19 10:22:24.421 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cardType
[DEBUG] 2019-12-19 10:22:24.421 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : entries
[DEBUG] 2019-12-19 10:22:24.425 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@349e6db4]
[DEBUG] 2019-12-19 10:22:24.425 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57c98e6c]
[DEBUG] 2019-12-19 10:22:24.425 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : entries.price
[DEBUG] 2019-12-19 10:22:24.426 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : entries.ts
[DEBUG] 2019-12-19 10:22:24.426 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : entries.yugiohCard
[DEBUG] 2019-12-19 10:22:24.426 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : entries.yugiohCard
[DEBUG] 2019-12-19 10:22:24.426 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2019-12-19 10:22:24.426 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-12-19 10:22:24.426 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : quantity
[DEBUG] 2019-12-19 10:22:24.426 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2019-12-19 10:22:24.426 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-12-19 10:22:24.426 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68c0b9be]
[DEBUG] 2019-12-19 10:22:24.426 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.cards
[DEBUG] 2019-12-19 10:22:24.426 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.cards
[DEBUG] 2019-12-19 10:22:24.426 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2019-12-19 10:22:24.426 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.role
[DEBUG] 2019-12-19 10:22:24.426 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-12-19 10:22:24.426 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-12-19 10:22:24.426 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-12-19 10:22:24.427 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCard)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCard)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCard.entries)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCard.entries.<elements>)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:3>, path=edu.yang.entity.YugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCard)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(entries)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.YugiohCard.entries)
                - SQL table alias mapping - entries1_
                - alias suffix - 1_
                - suffixed key columns - {yugiohCa4_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_2_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCardHistory)
                      - SQL table alias mapping - entries1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.yang.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 3_
                - suffixed key columns - {id1_0_3_}

[DEBUG] 2019-12-19 10:22:24.427 [http-nio-8080-exec-9] EntityLoader - Static select for entity edu.yang.entity.YugiohCard [READ]: select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_edition as card_edi2_1_0_, yugiohcard0_.card_index as card_ind3_1_0_, yugiohcard0_.card_name as card_nam4_1_0_, yugiohcard0_.card_rarity as card_rar5_1_0_, yugiohcard0_.card_set as card_set6_1_0_, yugiohcard0_.card_set_full_name as card_set7_1_0_, yugiohcard0_.card_type as card_typ8_1_0_, yugiohcard0_.image as image9_1_0_, yugiohcard0_.price as price10_1_0_, yugiohcard0_.qty as qty11_1_0_, yugiohcard0_.status as status12_1_0_, yugiohcard0_.user_id as user_id13_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-12-19 10:22:24.427 [http-nio-8080-exec-9] Loader - Static select for action ACTION_MERGE on entity edu.yang.entity.YugiohCard: select yugiohcard0_.id as id1_1_1_, yugiohcard0_.card_edition as card_edi2_1_1_, yugiohcard0_.card_index as card_ind3_1_1_, yugiohcard0_.card_name as card_nam4_1_1_, yugiohcard0_.card_rarity as card_rar5_1_1_, yugiohcard0_.card_set as card_set6_1_1_, yugiohcard0_.card_set_full_name as card_set7_1_1_, yugiohcard0_.card_type as card_typ8_1_1_, yugiohcard0_.image as image9_1_1_, yugiohcard0_.price as price10_1_1_, yugiohcard0_.qty as qty11_1_1_, yugiohcard0_.status as status12_1_1_, yugiohcard0_.user_id as user_id13_1_1_, entries1_.yugiohCard_id as yugiohCa4_2_3_, entries1_.id as id1_2_3_, entries1_.id as id1_2_0_, entries1_.price as price2_2_0_, entries1_.update_date as update_d3_2_0_, entries1_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id where yugiohcard0_.id=?
[DEBUG] 2019-12-19 10:22:24.432 [http-nio-8080-exec-9] Loader - Static select for action ACTION_REFRESH on entity edu.yang.entity.YugiohCard: select yugiohcard0_.id as id1_1_1_, yugiohcard0_.card_edition as card_edi2_1_1_, yugiohcard0_.card_index as card_ind3_1_1_, yugiohcard0_.card_name as card_nam4_1_1_, yugiohcard0_.card_rarity as card_rar5_1_1_, yugiohcard0_.card_set as card_set6_1_1_, yugiohcard0_.card_set_full_name as card_set7_1_1_, yugiohcard0_.card_type as card_typ8_1_1_, yugiohcard0_.image as image9_1_1_, yugiohcard0_.price as price10_1_1_, yugiohcard0_.qty as qty11_1_1_, yugiohcard0_.status as status12_1_1_, yugiohcard0_.user_id as user_id13_1_1_, entries1_.yugiohCard_id as yugiohCa4_2_3_, entries1_.id as id1_2_3_, entries1_.id as id1_2_0_, entries1_.price as price2_2_0_, entries1_.update_date as update_d3_2_0_, entries1_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id where yugiohcard0_.id=?
[DEBUG] 2019-12-19 10:22:24.435 [http-nio-8080-exec-9] AbstractEntityPersister - Static SQL for entity: edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-12-19 10:22:24.436 [http-nio-8080-exec-9] AbstractEntityPersister -  Version select: select id from yugioh_card_history where id =?
[DEBUG] 2019-12-19 10:22:24.436 [http-nio-8080-exec-9] AbstractEntityPersister -  Snapshot select: select yugiohcard_.id, yugiohcard_.price as price2_2_, yugiohcard_.yugiohCard_id as yugiohCa4_2_ from yugioh_card_history yugiohcard_ where yugiohcard_.id=?
[DEBUG] 2019-12-19 10:22:24.436 [http-nio-8080-exec-9] AbstractEntityPersister -  Insert 0: insert into yugioh_card_history (price, update_date, yugiohCard_id, id) values (?, ?, ?, ?)
[DEBUG] 2019-12-19 10:22:24.436 [http-nio-8080-exec-9] AbstractEntityPersister -  Update 0: update yugioh_card_history set price=?, yugiohCard_id=? where id=?
[DEBUG] 2019-12-19 10:22:24.436 [http-nio-8080-exec-9] AbstractEntityPersister -  Delete 0: delete from yugioh_card_history where id=?
[DEBUG] 2019-12-19 10:22:24.436 [http-nio-8080-exec-9] AbstractEntityPersister -  Identity insert: insert into yugioh_card_history (price, update_date, yugiohCard_id) values (?, ?, ?)
[DEBUG] 2019-12-19 10:22:24.436 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70b20fd8]
[DEBUG] 2019-12-19 10:22:24.436 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-12-19 10:22:24.436 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : ts
[DEBUG] 2019-12-19 10:22:24.436 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard
[DEBUG] 2019-12-19 10:22:24.436 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16bc7521]
[DEBUG] 2019-12-19 10:22:24.440 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardEdition
[DEBUG] 2019-12-19 10:22:24.440 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardIndex
[DEBUG] 2019-12-19 10:22:24.440 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardName
[DEBUG] 2019-12-19 10:22:24.440 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardRarity
[DEBUG] 2019-12-19 10:22:24.440 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardSet
[DEBUG] 2019-12-19 10:22:24.440 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardSetFullName
[DEBUG] 2019-12-19 10:22:24.440 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardType
[DEBUG] 2019-12-19 10:22:24.440 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.entries
[DEBUG] 2019-12-19 10:22:24.440 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.entries
[DEBUG] 2019-12-19 10:22:24.440 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.image
[DEBUG] 2019-12-19 10:22:24.440 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.price
[DEBUG] 2019-12-19 10:22:24.440 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.quantity
[DEBUG] 2019-12-19 10:22:24.440 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.status
[DEBUG] 2019-12-19 10:22:24.440 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user
[DEBUG] 2019-12-19 10:22:24.441 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0cd951]
[DEBUG] 2019-12-19 10:22:24.441 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.cards
[DEBUG] 2019-12-19 10:22:24.441 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.user.cards
[DEBUG] 2019-12-19 10:22:24.441 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.password
[DEBUG] 2019-12-19 10:22:24.441 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.role
[DEBUG] 2019-12-19 10:22:24.441 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.userName
[DEBUG] 2019-12-19 10:22:24.441 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-12-19 10:22:24.441 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCardHistory)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCardHistory)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCardHistory.yugiohCard)
             - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCardHistory.yugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCardHistory)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(yugiohCard)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCard)
                - SQL table alias mapping - yugiohcard1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] EntityLoader - Static select for entity edu.yang.entity.YugiohCardHistory [NONE]: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_, yugiohcard1_.id as id1_1_1_, yugiohcard1_.card_edition as card_edi2_1_1_, yugiohcard1_.card_index as card_ind3_1_1_, yugiohcard1_.card_name as card_nam4_1_1_, yugiohcard1_.card_rarity as card_rar5_1_1_, yugiohcard1_.card_set as card_set6_1_1_, yugiohcard1_.card_set_full_name as card_set7_1_1_, yugiohcard1_.card_type as card_typ8_1_1_, yugiohcard1_.image as image9_1_1_, yugiohcard1_.price as price10_1_1_, yugiohcard1_.qty as qty11_1_1_, yugiohcard1_.status as status12_1_1_, yugiohcard1_.user_id as user_id13_1_1_, user2_.id as id1_0_2_, user2_.user_password as user_pas2_0_2_, user2_.user_role as user_rol3_0_2_, user2_.user_name as user_nam4_0_2_ from yugioh_card_history yugiohcard0_ left outer join yugioh_card yugiohcard1_ on yugiohcard0_.yugiohCard_id=yugiohcard1_.id left outer join user user2_ on yugiohcard1_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65df5db0]
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : ts
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6581187b]
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardEdition
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardIndex
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardName
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardRarity
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardSet
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardSetFullName
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardType
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.entries
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.entries
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.image
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.price
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.quantity
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.status
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1345852f]
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.cards
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.user.cards
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.password
[DEBUG] 2019-12-19 10:22:24.442 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.role
[DEBUG] 2019-12-19 10:22:24.443 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.userName
[DEBUG] 2019-12-19 10:22:24.443 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-12-19 10:22:24.443 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-12-19 10:22:24.443 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCardHistory)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCardHistory)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCardHistory.yugiohCard)
             - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCardHistory.yugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCardHistory)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(yugiohCard)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCard)
                - SQL table alias mapping - yugiohcard1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-12-19 10:22:24.443 [http-nio-8080-exec-9] EntityLoader - Static select for entity edu.yang.entity.YugiohCardHistory [READ]: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_, yugiohcard1_.id as id1_1_1_, yugiohcard1_.card_edition as card_edi2_1_1_, yugiohcard1_.card_index as card_ind3_1_1_, yugiohcard1_.card_name as card_nam4_1_1_, yugiohcard1_.card_rarity as card_rar5_1_1_, yugiohcard1_.card_set as card_set6_1_1_, yugiohcard1_.card_set_full_name as card_set7_1_1_, yugiohcard1_.card_type as card_typ8_1_1_, yugiohcard1_.image as image9_1_1_, yugiohcard1_.price as price10_1_1_, yugiohcard1_.qty as qty11_1_1_, yugiohcard1_.status as status12_1_1_, yugiohcard1_.user_id as user_id13_1_1_, user2_.id as id1_0_2_, user2_.user_password as user_pas2_0_2_, user2_.user_role as user_rol3_0_2_, user2_.user_name as user_nam4_0_2_ from yugioh_card_history yugiohcard0_ left outer join yugioh_card yugiohcard1_ on yugiohcard0_.yugiohCard_id=yugiohcard1_.id left outer join user user2_ on yugiohcard1_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-12-19 10:22:24.443 [http-nio-8080-exec-9] Loader - Static select for action ACTION_MERGE on entity edu.yang.entity.YugiohCardHistory: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card_history yugiohcard0_ where yugiohcard0_.id=?
[DEBUG] 2019-12-19 10:22:24.443 [http-nio-8080-exec-9] Loader - Static select for action ACTION_REFRESH on entity edu.yang.entity.YugiohCardHistory: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card_history yugiohcard0_ where yugiohcard0_.id=?
[DEBUG] 2019-12-19 10:22:24.464 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3c5ccdbb]
[DEBUG] 2019-12-19 10:22:24.464 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@359aa952]
[DEBUG] 2019-12-19 10:22:24.464 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cardEdition
[DEBUG] 2019-12-19 10:22:24.464 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cardIndex
[DEBUG] 2019-12-19 10:22:24.464 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cardName
[DEBUG] 2019-12-19 10:22:24.464 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cardRarity
[DEBUG] 2019-12-19 10:22:24.464 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cardSet
[DEBUG] 2019-12-19 10:22:24.464 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cardSetFullName
[DEBUG] 2019-12-19 10:22:24.464 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : cardType
[DEBUG] 2019-12-19 10:22:24.472 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : entries
[DEBUG] 2019-12-19 10:22:24.472 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8e42665]
[DEBUG] 2019-12-19 10:22:24.472 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6854ce12]
[DEBUG] 2019-12-19 10:22:24.473 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2019-12-19 10:22:24.473 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-12-19 10:22:24.473 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : quantity
[DEBUG] 2019-12-19 10:22:24.473 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2019-12-19 10:22:24.473 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-12-19 10:22:24.473 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-12-19 10:22:24.474 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-12-19 10:22:24.484 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-12-19 10:22:24.488 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(collection=edu.yang.entity.User.cards)
    - Returns
       - CollectionReturnImpl(collection=edu.yang.entity.User.cards, querySpaceUid=<gen:0>, path=[edu.yang.entity.User.cards])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:1>, path=[edu.yang.entity.User.cards].<elements>)
             - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:2>, path=[edu.yang.entity.User.cards].<elements>.entries)
                - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:3>, path=[edu.yang.entity.User.cards].<elements>.entries.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.yang.entity.User.cards)
          - SQL table alias mapping - cards0_
          - alias suffix - 0_
          - suffixed key columns - {user_id13_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCard)
                - SQL table alias mapping - cards0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-12-19 10:22:24.489 [http-nio-8080-exec-9] CollectionLoader - Static select for collection edu.yang.entity.User.cards: select cards0_.user_id as user_id13_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_edition as card_edi2_1_1_, cards0_.card_index as card_ind3_1_1_, cards0_.card_name as card_nam4_1_1_, cards0_.card_rarity as card_rar5_1_1_, cards0_.card_set as card_set6_1_1_, cards0_.card_set_full_name as card_set7_1_1_, cards0_.card_type as card_typ8_1_1_, cards0_.image as image9_1_1_, cards0_.price as price10_1_1_, cards0_.qty as qty11_1_1_, cards0_.status as status12_1_1_, cards0_.user_id as user_id13_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-12-19 10:22:24.489 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@130fb314]
[DEBUG] 2019-12-19 10:22:24.489 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b773086]
[DEBUG] 2019-12-19 10:22:24.489 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-12-19 10:22:24.489 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : ts
[DEBUG] 2019-12-19 10:22:24.489 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : yugiohCard
[DEBUG] 2019-12-19 10:22:24.489 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard
[DEBUG] 2019-12-19 10:22:24.489 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-12-19 10:22:24.492 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-12-19 10:22:24.494 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(collection=edu.yang.entity.YugiohCard.entries)
    - Returns
       - CollectionReturnImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:0>, path=[edu.yang.entity.YugiohCard.entries])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:1>, path=[edu.yang.entity.YugiohCard.entries].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.yang.entity.YugiohCard.entries)
          - SQL table alias mapping - entries0_
          - alias suffix - 0_
          - suffixed key columns - {yugiohCa4_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCardHistory)
                - SQL table alias mapping - entries0_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

[DEBUG] 2019-12-19 10:22:24.494 [http-nio-8080-exec-9] CollectionLoader - Static select for collection edu.yang.entity.YugiohCard.entries: select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-12-19 10:22:24.813 [http-nio-8080-exec-9] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-12-19 10:22:24.815 [http-nio-8080-exec-9] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-12-19 10:22:24.815 [http-nio-8080-exec-9] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-12-19 10:22:24.854 [http-nio-8080-exec-9] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-12-19 10:22:24.854 [http-nio-8080-exec-9] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-12-19 10:22:24.860 [http-nio-8080-exec-9] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-12-19 10:22:24.865 [http-nio-8080-exec-9] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-12-19 10:22:24.875 [http-nio-8080-exec-9] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7c2e1c32
[DEBUG] 2019-12-19 10:22:24.905 [http-nio-8080-exec-9] SessionFactoryRegistry - Registering SessionFactory: 29e976b7-61d4-4764-a011-9313d797a638 (<unnamed>)
[DEBUG] 2019-12-19 10:22:24.905 [http-nio-8080-exec-9] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-12-19 10:22:25.108 [http-nio-8080-exec-9] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-12-19 10:22:25.151 [http-nio-8080-exec-9] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-12-19 10:22:25.152 [http-nio-8080-exec-9] TransactionImpl - begin
[DEBUG] 2019-12-19 10:22:25.180 [http-nio-8080-exec-9] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-12-19 10:22:25.195 [http-nio-8080-exec-9] SQL - insert into user (user_password, user_role, user_name) values (?, ?, ?)
[DEBUG] 2019-12-19 10:22:25.222 [http-nio-8080-exec-9] IdentifierGeneratorHelper - Natively generated identity: 25
[DEBUG] 2019-12-19 10:22:25.222 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-12-19 10:22:25.228 [http-nio-8080-exec-9] TransactionImpl - committing
[DEBUG] 2019-12-19 10:22:25.228 [http-nio-8080-exec-9] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-12-19 10:22:25.229 [http-nio-8080-exec-9] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-12-19 10:22:25.235 [http-nio-8080-exec-9] Collections - Collection found: [edu.yang.entity.User.cards#25], was: [<unreferenced>] (initialized)
[DEBUG] 2019-12-19 10:22:25.236 [http-nio-8080-exec-9] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-12-19 10:22:25.237 [http-nio-8080-exec-9] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-12-19 10:22:25.239 [http-nio-8080-exec-9] EntityPrinter - Listing entities:
[DEBUG] 2019-12-19 10:22:25.239 [http-nio-8080-exec-9] EntityPrinter - edu.yang.entity.User{password=Simple!123, cards=[], role=general, id=25, userName=saintAnita}
[DEBUG] 2019-12-19 10:22:25.273 [http-nio-8080-exec-9] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-12-19 10:22:25.275 [http-nio-8080-exec-9] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-12-19 10:22:40.537 [http-nio-8080-exec-2] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName like :param0
[DEBUG] 2019-12-19 10:22:40.582 [http-nio-8080-exec-2] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3480a908
[DEBUG] 2019-12-19 10:22:40.639 [http-nio-8080-exec-2] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.User as generatedAlias0 where generatedAlias0.userName like :param0
[DEBUG] 2019-12-19 10:22:40.649 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-12-19 10:22:40.669 [http-nio-8080-exec-2] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'yang'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'userName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-12-19 10:22:40.753 [http-nio-8080-exec-2] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-12-19 10:22:40.788 [http-nio-8080-exec-2] FromElement - FromClause{level=1} : edu.yang.entity.User (generatedAlias0) -> user0_
[DEBUG] 2019-12-19 10:22:40.789 [http-nio-8080-exec-2] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2019-12-19 10:22:40.793 [http-nio-8080-exec-2] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2019-12-19 10:22:40.795 [http-nio-8080-exec-2] DotNode - getDataType() : userName -> org.hibernate.type.StringType@66498900
[DEBUG] 2019-12-19 10:22:40.795 [http-nio-8080-exec-2] FromReferenceNode - Resolved : generatedAlias0.userName -> user0_.user_name
[DEBUG] 2019-12-19 10:22:40.797 [http-nio-8080-exec-2] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-12-19 10:22:40.797 [http-nio-8080-exec-2] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.user_name user0_.id userName ) ? ) ) )
[DEBUG] 2019-12-19 10:22:40.827 [http-nio-8080-exec-2] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2019-12-19 10:22:40.827 [http-nio-8080-exec-2] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-12-19 10:22:40.829 [http-nio-8080-exec-2] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_0_' {alias=generatedAlias0, className=edu.yang.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=edu.yang.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.user_name' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path=generatedAlias0.userName,tableAlias=user0_,className=edu.yang.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=edu.yang.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@66498900}

[DEBUG] 2019-12-19 10:22:40.829 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-12-19 10:22:40.874 [http-nio-8080-exec-2] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.User as generatedAlias0 where generatedAlias0.userName like :param0
[DEBUG] 2019-12-19 10:22:40.874 [http-nio-8080-exec-2] QueryTranslatorImpl - SQL: select user0_.id as id1_0_, user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_ from user user0_ where user0_.user_name like ?
[DEBUG] 2019-12-19 10:22:40.874 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-12-19 10:22:40.920 [http-nio-8080-exec-2] SQL - select user0_.id as id1_0_, user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_ from user user0_ where user0_.user_name like ?
[DEBUG] 2019-12-19 10:22:40.923 [http-nio-8080-exec-2] Loader - Result set row: 0
[DEBUG] 2019-12-19 10:22:40.924 [http-nio-8080-exec-2] Loader - Result row: EntityKey[edu.yang.entity.User#25]
[DEBUG] 2019-12-19 10:22:40.937 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#25]
[DEBUG] 2019-12-19 10:22:40.937 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-12-19 10:22:40.937 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:22:40.939 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = Simple!123
[DEBUG] 2019-12-19 10:22:40.939 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:22:40.939 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-12-19 10:22:40.939 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:22:40.939 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `userName` : value = saintAnita
[DEBUG] 2019-12-19 10:22:40.939 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:22:40.939 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#25]
[DEBUG] 2019-12-19 10:22:40.940 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#25]
[DEBUG] 2019-12-19 10:22:40.945 [http-nio-8080-exec-2] SQL - select cards0_.user_id as user_id13_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_edition as card_edi2_1_1_, cards0_.card_index as card_ind3_1_1_, cards0_.card_name as card_nam4_1_1_, cards0_.card_rarity as card_rar5_1_1_, cards0_.card_set as card_set6_1_1_, cards0_.card_set_full_name as card_set7_1_1_, cards0_.card_type as card_typ8_1_1_, cards0_.image as image9_1_1_, cards0_.price as price10_1_1_, cards0_.qty as qty11_1_1_, cards0_.status as status12_1_1_, cards0_.user_id as user_id13_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-12-19 10:22:40.953 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#25]
[DEBUG] 2019-12-19 10:22:40.963 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-12-19 10:22:40.963 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#25]
[DEBUG] 2019-12-19 10:22:40.963 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-12-19 10:22:40.963 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-12-19 10:22:40.963 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-12-19 10:22:40.967 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-12-19 10:22:40.988 [http-nio-8080-exec-2] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where ( generatedAlias0.user=:param0 ) and ( generatedAlias0.status=:param1 )
[DEBUG] 2019-12-19 10:22:40.988 [http-nio-8080-exec-2] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where ( generatedAlias0.user=:param0 ) and ( generatedAlias0.status=:param1 )
[DEBUG] 2019-12-19 10:22:40.992 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-12-19 10:22:40.997 [http-nio-8080-exec-2] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'yang'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'YugiohCard'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'user'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'status'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

[DEBUG] 2019-12-19 10:22:40.997 [http-nio-8080-exec-2] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-12-19 10:22:40.998 [http-nio-8080-exec-2] FromElement - FromClause{level=1} : edu.yang.entity.YugiohCard (generatedAlias0) -> yugiohcard0_
[DEBUG] 2019-12-19 10:22:40.998 [http-nio-8080-exec-2] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-12-19 10:22:40.998 [http-nio-8080-exec-2] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-12-19 10:22:40.998 [http-nio-8080-exec-2] DotNode - getDataType() : user -> org.hibernate.type.ManyToOneType(edu.yang.entity.User)
[DEBUG] 2019-12-19 10:22:40.998 [http-nio-8080-exec-2] DotNode - dereferenceShortcut() : property user in edu.yang.entity.YugiohCard does not require a join.
[DEBUG] 2019-12-19 10:22:40.998 [http-nio-8080-exec-2] DotNode - Terminal getPropertyPath = [user]
[DEBUG] 2019-12-19 10:22:40.998 [http-nio-8080-exec-2] FromReferenceNode - Resolved : generatedAlias0.user -> yugiohcard0_.user_id
[DEBUG] 2019-12-19 10:22:41.000 [http-nio-8080-exec-2] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-12-19 10:22:41.000 [http-nio-8080-exec-2] DotNode - getDataType() : status -> org.hibernate.type.StringType@66498900
[DEBUG] 2019-12-19 10:22:41.000 [http-nio-8080-exec-2] FromReferenceNode - Resolved : generatedAlias0.status -> yugiohcard0_.status
[DEBUG] 2019-12-19 10:22:41.002 [http-nio-8080-exec-2] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-12-19 10:22:41.002 [http-nio-8080-exec-2] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} yugiohcard0_.id ) ( FromClause{level=1} yugioh_card yugiohcard0_ ) ( where ( and ( = ( yugiohcard0_.user_id yugiohcard0_.id user ) ? ) ( = ( yugiohcard0_.status yugiohcard0_.id status ) ? ) ) ) )
[DEBUG] 2019-12-19 10:22:41.005 [http-nio-8080-exec-2] JoinProcessor - Using FROM fragment [yugioh_card yugiohcard0_]
[DEBUG] 2019-12-19 10:22:41.005 [http-nio-8080-exec-2] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-12-19 10:22:41.005 [http-nio-8080-exec-2] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (yugioh_card)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id as id1_1_' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
    |  \-[SQL_TOKEN] SqlFragment: 'yugiohcard0_.card_edition as card_edi2_1_, yugiohcard0_.card_index as card_ind3_1_, yugiohcard0_.card_name as card_nam4_1_, yugiohcard0_.card_rarity as card_rar5_1_, yugiohcard0_.card_set as card_set6_1_, yugiohcard0_.card_set_full_name as card_set7_1_, yugiohcard0_.card_type as card_typ8_1_, yugiohcard0_.image as image9_1_, yugiohcard0_.price as price10_1_, yugiohcard0_.qty as qty11_1_, yugiohcard0_.status as status12_1_, yugiohcard0_.user_id as user_id13_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[yugiohcard0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'yugioh_card yugiohcard0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=yugioh_card,tableAlias=yugiohcard0_,origin=null,columns={,className=edu.yang.entity.YugiohCard}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'yugiohcard0_.user_id' {propertyName=user,dereferenceType=UNKNOWN,getPropertyPath=user,path=generatedAlias0.user,tableAlias=yugiohcard0_,className=edu.yang.entity.YugiohCard,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
          |  |  \-[IDENT] IdentNode: 'user' {originalText=user}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(edu.yang.entity.User)}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'yugiohcard0_.status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=generatedAlias0.status,tableAlias=yugiohcard0_,className=edu.yang.entity.YugiohCard,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
             |  \-[IDENT] IdentNode: 'status' {originalText=status}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@66498900}

[DEBUG] 2019-12-19 10:22:41.005 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-12-19 10:22:41.005 [http-nio-8080-exec-2] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where ( generatedAlias0.user=:param0 ) and ( generatedAlias0.status=:param1 )
[DEBUG] 2019-12-19 10:22:41.005 [http-nio-8080-exec-2] QueryTranslatorImpl - SQL: select yugiohcard0_.id as id1_1_, yugiohcard0_.card_edition as card_edi2_1_, yugiohcard0_.card_index as card_ind3_1_, yugiohcard0_.card_name as card_nam4_1_, yugiohcard0_.card_rarity as card_rar5_1_, yugiohcard0_.card_set as card_set6_1_, yugiohcard0_.card_set_full_name as card_set7_1_, yugiohcard0_.card_type as card_typ8_1_, yugiohcard0_.image as image9_1_, yugiohcard0_.price as price10_1_, yugiohcard0_.qty as qty11_1_, yugiohcard0_.status as status12_1_, yugiohcard0_.user_id as user_id13_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.user_id=? and yugiohcard0_.status=?
[DEBUG] 2019-12-19 10:22:41.005 [http-nio-8080-exec-2] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-12-19 10:22:41.006 [http-nio-8080-exec-2] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_edition as card_edi2_1_, yugiohcard0_.card_index as card_ind3_1_, yugiohcard0_.card_name as card_nam4_1_, yugiohcard0_.card_rarity as card_rar5_1_, yugiohcard0_.card_set as card_set6_1_, yugiohcard0_.card_set_full_name as card_set7_1_, yugiohcard0_.card_type as card_typ8_1_, yugiohcard0_.image as image9_1_, yugiohcard0_.price as price10_1_, yugiohcard0_.qty as qty11_1_, yugiohcard0_.status as status12_1_, yugiohcard0_.user_id as user_id13_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.user_id=? and yugiohcard0_.status=?
[DEBUG] 2019-12-19 10:22:41.012 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-12-19 10:22:55.865 [http-nio-8080-exec-4] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-12-19 10:22:55.866 [http-nio-8080-exec-4] TransactionImpl - begin
[DEBUG] 2019-12-19 10:22:55.873 [http-nio-8080-exec-4] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-12-19 10:22:55.873 [http-nio-8080-exec-4] SQL - insert into yugioh_card (card_edition, card_index, card_name, card_rarity, card_set, card_set_full_name, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-12-19 10:22:55.901 [http-nio-8080-exec-4] IdentifierGeneratorHelper - Natively generated identity: 139
[DEBUG] 2019-12-19 10:22:55.902 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-12-19 10:22:55.902 [http-nio-8080-exec-4] TransactionImpl - committing
[DEBUG] 2019-12-19 10:22:55.902 [http-nio-8080-exec-4] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-12-19 10:22:55.902 [http-nio-8080-exec-4] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-12-19 10:22:55.902 [http-nio-8080-exec-4] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#139], was: [<unreferenced>] (initialized)
[DEBUG] 2019-12-19 10:22:55.902 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-12-19 10:22:55.902 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-12-19 10:22:55.902 [http-nio-8080-exec-4] EntityPrinter - Listing entities:
[DEBUG] 2019-12-19 10:22:55.903 [http-nio-8080-exec-4] EntityPrinter - edu.yang.entity.YugiohCard{image=https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/23112_200w.jpg, quantity=2, cardName=Black Luster Soldier Envoy of the Beginning, cardType=Monster, cardEdition=1st Edition, cardIndex=025, entries=[], cardSet=IOC, price=127.37, cardRarity=Ultra, id=139, cardSetFullName=Invasion of Chaos, user=edu.yang.entity.User#25, status=unsold}
[DEBUG] 2019-12-19 10:22:55.907 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-12-19 10:22:55.909 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-12-19 10:22:56.446 [http-nio-8080-exec-4] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-12-19 10:22:56.448 [http-nio-8080-exec-4] TransactionImpl - begin
[DEBUG] 2019-12-19 10:22:56.449 [http-nio-8080-exec-4] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-12-19 10:22:56.449 [http-nio-8080-exec-4] SQL - insert into yugioh_card (card_edition, card_index, card_name, card_rarity, card_set, card_set_full_name, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-12-19 10:22:56.453 [http-nio-8080-exec-4] IdentifierGeneratorHelper - Natively generated identity: 140
[DEBUG] 2019-12-19 10:22:56.453 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-12-19 10:22:56.453 [http-nio-8080-exec-4] TransactionImpl - committing
[DEBUG] 2019-12-19 10:22:56.453 [http-nio-8080-exec-4] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-12-19 10:22:56.453 [http-nio-8080-exec-4] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-12-19 10:22:56.453 [http-nio-8080-exec-4] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#140], was: [<unreferenced>] (initialized)
[DEBUG] 2019-12-19 10:22:56.453 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-12-19 10:22:56.453 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-12-19 10:22:56.453 [http-nio-8080-exec-4] EntityPrinter - Listing entities:
[DEBUG] 2019-12-19 10:22:56.454 [http-nio-8080-exec-4] EntityPrinter - edu.yang.entity.YugiohCard{image=https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/23110_200w.jpg, quantity=1, cardName=Chaos Sorcerer, cardType=Monster, cardEdition=1st Edition, cardIndex=023, entries=[], cardSet=IOC, price=1.17, cardRarity=Common, id=140, cardSetFullName=Invasion of Chaos, user=edu.yang.entity.User#25, status=unsold}
[DEBUG] 2019-12-19 10:22:56.456 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-12-19 10:22:56.456 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-12-19 10:22:57.036 [http-nio-8080-exec-4] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-12-19 10:22:57.036 [http-nio-8080-exec-4] TransactionImpl - begin
[DEBUG] 2019-12-19 10:22:57.041 [http-nio-8080-exec-4] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-12-19 10:22:57.041 [http-nio-8080-exec-4] SQL - insert into yugioh_card (card_edition, card_index, card_name, card_rarity, card_set, card_set_full_name, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-12-19 10:22:57.056 [http-nio-8080-exec-4] IdentifierGeneratorHelper - Natively generated identity: 141
[DEBUG] 2019-12-19 10:22:57.056 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-12-19 10:22:57.057 [http-nio-8080-exec-4] TransactionImpl - committing
[DEBUG] 2019-12-19 10:22:57.057 [http-nio-8080-exec-4] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-12-19 10:22:57.058 [http-nio-8080-exec-4] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-12-19 10:22:57.058 [http-nio-8080-exec-4] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#141], was: [<unreferenced>] (initialized)
[DEBUG] 2019-12-19 10:22:57.058 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-12-19 10:22:57.058 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-12-19 10:22:57.058 [http-nio-8080-exec-4] EntityPrinter - Listing entities:
[DEBUG] 2019-12-19 10:22:57.058 [http-nio-8080-exec-4] EntityPrinter - edu.yang.entity.YugiohCard{image=https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/22327_200w.jpg, quantity=2, cardName=Raigeki, cardType=Spell, cardEdition=1st Edition, cardIndex=E042, entries=[], cardSet=LOB, price=86.65, cardRarity=Super, id=141, cardSetFullName=The Legend of Blue Eyes White Dragon, user=edu.yang.entity.User#25, status=unsold}
[DEBUG] 2019-12-19 10:22:57.061 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-12-19 10:22:57.063 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-12-19 10:22:57.594 [http-nio-8080-exec-4] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-12-19 10:22:57.598 [http-nio-8080-exec-4] TransactionImpl - begin
[DEBUG] 2019-12-19 10:22:57.603 [http-nio-8080-exec-4] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-12-19 10:22:57.603 [http-nio-8080-exec-4] SQL - insert into yugioh_card (card_edition, card_index, card_name, card_rarity, card_set, card_set_full_name, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-12-19 10:22:57.610 [http-nio-8080-exec-4] IdentifierGeneratorHelper - Natively generated identity: 142
[DEBUG] 2019-12-19 10:22:57.610 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-12-19 10:22:57.611 [http-nio-8080-exec-4] TransactionImpl - committing
[DEBUG] 2019-12-19 10:22:57.611 [http-nio-8080-exec-4] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-12-19 10:22:57.611 [http-nio-8080-exec-4] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-12-19 10:22:57.611 [http-nio-8080-exec-4] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#142], was: [<unreferenced>] (initialized)
[DEBUG] 2019-12-19 10:22:57.611 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-12-19 10:22:57.611 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-12-19 10:22:57.611 [http-nio-8080-exec-4] EntityPrinter - Listing entities:
[DEBUG] 2019-12-19 10:22:57.611 [http-nio-8080-exec-4] EntityPrinter - edu.yang.entity.YugiohCard{image=https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/21873_200w.jpg, quantity=3, cardName=Dark Hole, cardType=Spell, cardEdition=1st Edition, cardIndex=052, entries=[], cardSet=LOB, price=69.98, cardRarity=Super, id=142, cardSetFullName=The Legend of Blue Eyes White Dragon, user=edu.yang.entity.User#25, status=unsold}
[DEBUG] 2019-12-19 10:22:57.616 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-12-19 10:22:57.620 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-12-19 10:22:58.244 [http-nio-8080-exec-4] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-12-19 10:22:58.244 [http-nio-8080-exec-4] TransactionImpl - begin
[DEBUG] 2019-12-19 10:22:58.255 [http-nio-8080-exec-4] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-12-19 10:22:58.255 [http-nio-8080-exec-4] SQL - insert into yugioh_card (card_edition, card_index, card_name, card_rarity, card_set, card_set_full_name, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-12-19 10:22:58.262 [http-nio-8080-exec-4] IdentifierGeneratorHelper - Natively generated identity: 143
[DEBUG] 2019-12-19 10:22:58.263 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-12-19 10:22:58.263 [http-nio-8080-exec-4] TransactionImpl - committing
[DEBUG] 2019-12-19 10:22:58.263 [http-nio-8080-exec-4] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-12-19 10:22:58.263 [http-nio-8080-exec-4] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-12-19 10:22:58.265 [http-nio-8080-exec-4] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#143], was: [<unreferenced>] (initialized)
[DEBUG] 2019-12-19 10:22:58.265 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-12-19 10:22:58.265 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-12-19 10:22:58.265 [http-nio-8080-exec-4] EntityPrinter - Listing entities:
[DEBUG] 2019-12-19 10:22:58.265 [http-nio-8080-exec-4] EntityPrinter - edu.yang.entity.YugiohCard{image=https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/22233_200w.jpg, quantity=1, cardName=Monster Reborn, cardType=Spell, cardEdition=1st Edition, cardIndex=118, entries=[], cardSet=LOB, price=99.34, cardRarity=Ultra, id=143, cardSetFullName=The Legend of Blue Eyes White Dragon, user=edu.yang.entity.User#25, status=unsold}
[DEBUG] 2019-12-19 10:22:58.268 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-12-19 10:22:58.278 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-12-19 10:22:58.801 [http-nio-8080-exec-4] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-12-19 10:22:58.801 [http-nio-8080-exec-4] TransactionImpl - begin
[DEBUG] 2019-12-19 10:22:58.804 [http-nio-8080-exec-4] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-12-19 10:22:58.806 [http-nio-8080-exec-4] SQL - insert into yugioh_card (card_edition, card_index, card_name, card_rarity, card_set, card_set_full_name, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-12-19 10:22:58.816 [http-nio-8080-exec-4] IdentifierGeneratorHelper - Natively generated identity: 144
[DEBUG] 2019-12-19 10:22:58.817 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-12-19 10:22:58.818 [http-nio-8080-exec-4] TransactionImpl - committing
[DEBUG] 2019-12-19 10:22:58.818 [http-nio-8080-exec-4] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-12-19 10:22:58.818 [http-nio-8080-exec-4] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-12-19 10:22:58.818 [http-nio-8080-exec-4] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#144], was: [<unreferenced>] (initialized)
[DEBUG] 2019-12-19 10:22:58.819 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-12-19 10:22:58.819 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-12-19 10:22:58.819 [http-nio-8080-exec-4] EntityPrinter - Listing entities:
[DEBUG] 2019-12-19 10:22:58.819 [http-nio-8080-exec-4] EntityPrinter - edu.yang.entity.YugiohCard{image=https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/22308_200w.jpg, quantity=1, cardName=Polymerization, cardType=Spell, cardEdition=1st Edition, cardIndex=059, entries=[], cardSet=LOB, price=74.98, cardRarity=Super, id=144, cardSetFullName=The Legend of Blue Eyes White Dragon, user=edu.yang.entity.User#25, status=unsold}
[DEBUG] 2019-12-19 10:22:58.826 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-12-19 10:22:58.827 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-12-19 10:22:59.332 [http-nio-8080-exec-4] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-12-19 10:22:59.333 [http-nio-8080-exec-4] TransactionImpl - begin
[DEBUG] 2019-12-19 10:22:59.336 [http-nio-8080-exec-4] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-12-19 10:22:59.337 [http-nio-8080-exec-4] SQL - insert into yugioh_card (card_edition, card_index, card_name, card_rarity, card_set, card_set_full_name, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-12-19 10:22:59.346 [http-nio-8080-exec-4] IdentifierGeneratorHelper - Natively generated identity: 145
[DEBUG] 2019-12-19 10:22:59.347 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-12-19 10:22:59.348 [http-nio-8080-exec-4] TransactionImpl - committing
[DEBUG] 2019-12-19 10:22:59.348 [http-nio-8080-exec-4] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-12-19 10:22:59.349 [http-nio-8080-exec-4] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-12-19 10:22:59.350 [http-nio-8080-exec-4] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#145], was: [<unreferenced>] (initialized)
[DEBUG] 2019-12-19 10:22:59.350 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-12-19 10:22:59.350 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-12-19 10:22:59.350 [http-nio-8080-exec-4] EntityPrinter - Listing entities:
[DEBUG] 2019-12-19 10:22:59.350 [http-nio-8080-exec-4] EntityPrinter - edu.yang.entity.YugiohCard{image=https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/22111_200w.jpg, quantity=1, cardName=Jinzo, cardType=Monster, cardEdition=1st Edition, cardIndex=000, entries=[], cardSet=PSV, price=167.81, cardRarity=Secret, id=145, cardSetFullName=Pharaoh's Servant, user=edu.yang.entity.User#25, status=unsold}
[DEBUG] 2019-12-19 10:22:59.353 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-12-19 10:22:59.356 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-12-19 10:22:59.892 [http-nio-8080-exec-4] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-12-19 10:22:59.895 [http-nio-8080-exec-4] TransactionImpl - begin
[DEBUG] 2019-12-19 10:22:59.903 [http-nio-8080-exec-4] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-12-19 10:22:59.903 [http-nio-8080-exec-4] SQL - insert into yugioh_card (card_edition, card_index, card_name, card_rarity, card_set, card_set_full_name, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-12-19 10:22:59.905 [http-nio-8080-exec-4] IdentifierGeneratorHelper - Natively generated identity: 146
[DEBUG] 2019-12-19 10:22:59.905 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-12-19 10:22:59.905 [http-nio-8080-exec-4] TransactionImpl - committing
[DEBUG] 2019-12-19 10:22:59.905 [http-nio-8080-exec-4] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-12-19 10:22:59.905 [http-nio-8080-exec-4] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-12-19 10:22:59.906 [http-nio-8080-exec-4] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#146], was: [<unreferenced>] (initialized)
[DEBUG] 2019-12-19 10:22:59.906 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-12-19 10:22:59.907 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-12-19 10:22:59.907 [http-nio-8080-exec-4] EntityPrinter - Listing entities:
[DEBUG] 2019-12-19 10:22:59.907 [http-nio-8080-exec-4] EntityPrinter - edu.yang.entity.YugiohCard{image=https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/22982_200w.jpg, quantity=1, cardName=Imperial Order, cardType=Trap, cardEdition=1st Edition, cardIndex=104, entries=[], cardSet=PSV, price=15.56, cardRarity=Secret, id=146, cardSetFullName=Pharaoh's Servant, user=edu.yang.entity.User#25, status=unsold}
[DEBUG] 2019-12-19 10:22:59.909 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-12-19 10:22:59.915 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-12-19 10:23:00.493 [http-nio-8080-exec-4] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-12-19 10:23:00.496 [http-nio-8080-exec-4] TransactionImpl - begin
[DEBUG] 2019-12-19 10:23:00.498 [http-nio-8080-exec-4] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-12-19 10:23:00.499 [http-nio-8080-exec-4] SQL - insert into yugioh_card (card_edition, card_index, card_name, card_rarity, card_set, card_set_full_name, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-12-19 10:23:00.504 [http-nio-8080-exec-4] IdentifierGeneratorHelper - Natively generated identity: 147
[DEBUG] 2019-12-19 10:23:00.504 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-12-19 10:23:00.504 [http-nio-8080-exec-4] TransactionImpl - committing
[DEBUG] 2019-12-19 10:23:00.504 [http-nio-8080-exec-4] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-12-19 10:23:00.505 [http-nio-8080-exec-4] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-12-19 10:23:00.505 [http-nio-8080-exec-4] Collections - Collection found: [edu.yang.entity.YugiohCard.entries#147], was: [<unreferenced>] (initialized)
[DEBUG] 2019-12-19 10:23:00.505 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-12-19 10:23:00.505 [http-nio-8080-exec-4] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-12-19 10:23:00.505 [http-nio-8080-exec-4] EntityPrinter - Listing entities:
[DEBUG] 2019-12-19 10:23:00.505 [http-nio-8080-exec-4] EntityPrinter - edu.yang.entity.YugiohCard{image=https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/21804_200w.jpg, quantity=1, cardName=Breaker the Magical Warrior, cardType=Monster, cardEdition=1st Edition, cardIndex=071, entries=[], cardSet=MFC, price=27.53, cardRarity=Ultra, id=147, cardSetFullName=Magician's Force, user=edu.yang.entity.User#25, status=unsold}
[DEBUG] 2019-12-19 10:23:00.509 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-12-19 10:23:00.514 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-12-19 10:23:01.024 [http-nio-8080-exec-4] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where generatedAlias0.user=:param0
[DEBUG] 2019-12-19 10:23:01.026 [http-nio-8080-exec-4] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.user=:param0
[DEBUG] 2019-12-19 10:23:01.031 [http-nio-8080-exec-4] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-12-19 10:23:01.032 [http-nio-8080-exec-4] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'yang'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'YugiohCard'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'user'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-12-19 10:23:01.032 [http-nio-8080-exec-4] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-12-19 10:23:01.032 [http-nio-8080-exec-4] FromElement - FromClause{level=1} : edu.yang.entity.YugiohCard (generatedAlias0) -> yugiohcard0_
[DEBUG] 2019-12-19 10:23:01.034 [http-nio-8080-exec-4] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-12-19 10:23:01.035 [http-nio-8080-exec-4] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-12-19 10:23:01.035 [http-nio-8080-exec-4] DotNode - getDataType() : user -> org.hibernate.type.ManyToOneType(edu.yang.entity.User)
[DEBUG] 2019-12-19 10:23:01.036 [http-nio-8080-exec-4] DotNode - dereferenceShortcut() : property user in edu.yang.entity.YugiohCard does not require a join.
[DEBUG] 2019-12-19 10:23:01.036 [http-nio-8080-exec-4] DotNode - Terminal getPropertyPath = [user]
[DEBUG] 2019-12-19 10:23:01.036 [http-nio-8080-exec-4] FromReferenceNode - Resolved : generatedAlias0.user -> yugiohcard0_.user_id
[DEBUG] 2019-12-19 10:23:01.036 [http-nio-8080-exec-4] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-12-19 10:23:01.036 [http-nio-8080-exec-4] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} yugiohcard0_.id ) ( FromClause{level=1} yugioh_card yugiohcard0_ ) ( where ( = ( yugiohcard0_.user_id yugiohcard0_.id user ) ? ) ) )
[DEBUG] 2019-12-19 10:23:01.036 [http-nio-8080-exec-4] JoinProcessor - Using FROM fragment [yugioh_card yugiohcard0_]
[DEBUG] 2019-12-19 10:23:01.036 [http-nio-8080-exec-4] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-12-19 10:23:01.037 [http-nio-8080-exec-4] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (yugioh_card)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id as id1_1_' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
    |  \-[SQL_TOKEN] SqlFragment: 'yugiohcard0_.card_edition as card_edi2_1_, yugiohcard0_.card_index as card_ind3_1_, yugiohcard0_.card_name as card_nam4_1_, yugiohcard0_.card_rarity as card_rar5_1_, yugiohcard0_.card_set as card_set6_1_, yugiohcard0_.card_set_full_name as card_set7_1_, yugiohcard0_.card_type as card_typ8_1_, yugiohcard0_.image as image9_1_, yugiohcard0_.price as price10_1_, yugiohcard0_.qty as qty11_1_, yugiohcard0_.status as status12_1_, yugiohcard0_.user_id as user_id13_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[yugiohcard0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'yugioh_card yugiohcard0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=yugioh_card,tableAlias=yugiohcard0_,origin=null,columns={,className=edu.yang.entity.YugiohCard}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'yugiohcard0_.user_id' {propertyName=user,dereferenceType=UNKNOWN,getPropertyPath=user,path=generatedAlias0.user,tableAlias=yugiohcard0_,className=edu.yang.entity.YugiohCard,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
          |  \-[IDENT] IdentNode: 'user' {originalText=user}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(edu.yang.entity.User)}

[DEBUG] 2019-12-19 10:23:01.037 [http-nio-8080-exec-4] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-12-19 10:23:01.037 [http-nio-8080-exec-4] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where generatedAlias0.user=:param0
[DEBUG] 2019-12-19 10:23:01.037 [http-nio-8080-exec-4] QueryTranslatorImpl - SQL: select yugiohcard0_.id as id1_1_, yugiohcard0_.card_edition as card_edi2_1_, yugiohcard0_.card_index as card_ind3_1_, yugiohcard0_.card_name as card_nam4_1_, yugiohcard0_.card_rarity as card_rar5_1_, yugiohcard0_.card_set as card_set6_1_, yugiohcard0_.card_set_full_name as card_set7_1_, yugiohcard0_.card_type as card_typ8_1_, yugiohcard0_.image as image9_1_, yugiohcard0_.price as price10_1_, yugiohcard0_.qty as qty11_1_, yugiohcard0_.status as status12_1_, yugiohcard0_.user_id as user_id13_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.user_id=?
[DEBUG] 2019-12-19 10:23:01.037 [http-nio-8080-exec-4] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-12-19 10:23:01.037 [http-nio-8080-exec-4] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_edition as card_edi2_1_, yugiohcard0_.card_index as card_ind3_1_, yugiohcard0_.card_name as card_nam4_1_, yugiohcard0_.card_rarity as card_rar5_1_, yugiohcard0_.card_set as card_set6_1_, yugiohcard0_.card_set_full_name as card_set7_1_, yugiohcard0_.card_type as card_typ8_1_, yugiohcard0_.image as image9_1_, yugiohcard0_.price as price10_1_, yugiohcard0_.qty as qty11_1_, yugiohcard0_.status as status12_1_, yugiohcard0_.user_id as user_id13_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.user_id=?
[DEBUG] 2019-12-19 10:23:01.046 [http-nio-8080-exec-4] Loader - Result set row: 0
[DEBUG] 2019-12-19 10:23:01.046 [http-nio-8080-exec-4] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#139]
[DEBUG] 2019-12-19 10:23:01.053 [http-nio-8080-exec-4] Loader - Result set row: 1
[DEBUG] 2019-12-19 10:23:01.054 [http-nio-8080-exec-4] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#140]
[DEBUG] 2019-12-19 10:23:01.054 [http-nio-8080-exec-4] Loader - Result set row: 2
[DEBUG] 2019-12-19 10:23:01.054 [http-nio-8080-exec-4] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#141]
[DEBUG] 2019-12-19 10:23:01.054 [http-nio-8080-exec-4] Loader - Result set row: 3
[DEBUG] 2019-12-19 10:23:01.054 [http-nio-8080-exec-4] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#142]
[DEBUG] 2019-12-19 10:23:01.055 [http-nio-8080-exec-4] Loader - Result set row: 4
[DEBUG] 2019-12-19 10:23:01.055 [http-nio-8080-exec-4] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#143]
[DEBUG] 2019-12-19 10:23:01.055 [http-nio-8080-exec-4] Loader - Result set row: 5
[DEBUG] 2019-12-19 10:23:01.055 [http-nio-8080-exec-4] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#144]
[DEBUG] 2019-12-19 10:23:01.055 [http-nio-8080-exec-4] Loader - Result set row: 6
[DEBUG] 2019-12-19 10:23:01.055 [http-nio-8080-exec-4] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#145]
[DEBUG] 2019-12-19 10:23:01.059 [http-nio-8080-exec-4] Loader - Result set row: 7
[DEBUG] 2019-12-19 10:23:01.059 [http-nio-8080-exec-4] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#146]
[DEBUG] 2019-12-19 10:23:01.059 [http-nio-8080-exec-4] Loader - Result set row: 8
[DEBUG] 2019-12-19 10:23:01.059 [http-nio-8080-exec-4] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#147]
[DEBUG] 2019-12-19 10:23:01.059 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#139]
[DEBUG] 2019-12-19 10:23:01.059 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardEdition` : value = 1st Edition
[DEBUG] 2019-12-19 10:23:01.059 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardEdition`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.059 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardIndex` : value = 025
[DEBUG] 2019-12-19 10:23:01.059 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.060 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardName` : value = Black Luster Soldier Envoy of the Beginning
[DEBUG] 2019-12-19 10:23:01.060 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.060 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-12-19 10:23:01.060 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.060 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-12-19 10:23:01.060 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.062 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardSetFullName` : value = Invasion of Chaos
[DEBUG] 2019-12-19 10:23:01.062 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardSetFullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.062 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-12-19 10:23:01.062 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.062 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-12-19 10:23:01.062 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.062 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `image` : value = https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/23112_200w.jpg
[DEBUG] 2019-12-19 10:23:01.062 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.062 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `price` : value = 127.37
[DEBUG] 2019-12-19 10:23:01.062 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.062 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-12-19 10:23:01.062 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.062 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-12-19 10:23:01.062 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.062 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 25
[DEBUG] 2019-12-19 10:23:01.062 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.077 [http-nio-8080-exec-4] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id13_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_edition as card_edi2_1_2_, cards1_.card_index as card_ind3_1_2_, cards1_.card_name as card_nam4_1_2_, cards1_.card_rarity as card_rar5_1_2_, cards1_.card_set as card_set6_1_2_, cards1_.card_set_full_name as card_set7_1_2_, cards1_.card_type as card_typ8_1_2_, cards1_.image as image9_1_2_, cards1_.price as price10_1_2_, cards1_.qty as qty11_1_2_, cards1_.status as status12_1_2_, cards1_.user_id as user_id13_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-12-19 10:23:01.084 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-12-19 10:23:01.086 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-12-19 10:23:01.094 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#139]
[DEBUG] 2019-12-19 10:23:01.096 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#25]
[DEBUG] 2019-12-19 10:23:01.097 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-12-19 10:23:01.097 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-12-19 10:23:01.097 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#140]
[DEBUG] 2019-12-19 10:23:01.097 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#25]
[DEBUG] 2019-12-19 10:23:01.097 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-12-19 10:23:01.098 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-12-19 10:23:01.098 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#141]
[DEBUG] 2019-12-19 10:23:01.098 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#25]
[DEBUG] 2019-12-19 10:23:01.099 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2019-12-19 10:23:01.099 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-12-19 10:23:01.099 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#142]
[DEBUG] 2019-12-19 10:23:01.099 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#25]
[DEBUG] 2019-12-19 10:23:01.100 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2019-12-19 10:23:01.100 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-12-19 10:23:01.100 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#143]
[DEBUG] 2019-12-19 10:23:01.100 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#25]
[DEBUG] 2019-12-19 10:23:01.100 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2019-12-19 10:23:01.103 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-12-19 10:23:01.104 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#144]
[DEBUG] 2019-12-19 10:23:01.104 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#25]
[DEBUG] 2019-12-19 10:23:01.104 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #6
[DEBUG] 2019-12-19 10:23:01.104 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-12-19 10:23:01.104 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#145]
[DEBUG] 2019-12-19 10:23:01.104 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#25]
[DEBUG] 2019-12-19 10:23:01.104 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #7
[DEBUG] 2019-12-19 10:23:01.105 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-12-19 10:23:01.105 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#146]
[DEBUG] 2019-12-19 10:23:01.105 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#25]
[DEBUG] 2019-12-19 10:23:01.105 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #8
[DEBUG] 2019-12-19 10:23:01.105 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-12-19 10:23:01.105 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#147]
[DEBUG] 2019-12-19 10:23:01.105 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#25]
[DEBUG] 2019-12-19 10:23:01.105 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#25]
[DEBUG] 2019-12-19 10:23:01.105 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-12-19 10:23:01.105 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.105 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `password` : value = Simple!123
[DEBUG] 2019-12-19 10:23:01.105 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.105 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-12-19 10:23:01.106 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.106 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `userName` : value = saintAnita
[DEBUG] 2019-12-19 10:23:01.106 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.106 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#25]
[DEBUG] 2019-12-19 10:23:01.106 [http-nio-8080-exec-4] CollectionLoadContext - 9 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-12-19 10:23:01.106 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#140]
[DEBUG] 2019-12-19 10:23:01.106 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#141]
[DEBUG] 2019-12-19 10:23:01.106 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#142]
[DEBUG] 2019-12-19 10:23:01.106 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#143]
[DEBUG] 2019-12-19 10:23:01.106 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#144]
[DEBUG] 2019-12-19 10:23:01.106 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#145]
[DEBUG] 2019-12-19 10:23:01.106 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#146]
[DEBUG] 2019-12-19 10:23:01.106 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#147]
[DEBUG] 2019-12-19 10:23:01.106 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#139]
[DEBUG] 2019-12-19 10:23:01.106 [http-nio-8080-exec-4] CollectionLoadContext - 9 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-12-19 10:23:01.106 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-12-19 10:23:01.106 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#25]
[DEBUG] 2019-12-19 10:23:01.106 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-12-19 10:23:01.107 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-12-19 10:23:01.107 [http-nio-8080-exec-4] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#25
[DEBUG] 2019-12-19 10:23:01.109 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#139]
[DEBUG] 2019-12-19 10:23:01.109 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#140]
[DEBUG] 2019-12-19 10:23:01.109 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardEdition` : value = 1st Edition
[DEBUG] 2019-12-19 10:23:01.109 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardEdition`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.109 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardIndex` : value = 023
[DEBUG] 2019-12-19 10:23:01.109 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.109 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardName` : value = Chaos Sorcerer
[DEBUG] 2019-12-19 10:23:01.109 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.109 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardRarity` : value = Common
[DEBUG] 2019-12-19 10:23:01.109 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.109 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-12-19 10:23:01.109 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.109 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardSetFullName` : value = Invasion of Chaos
[DEBUG] 2019-12-19 10:23:01.109 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardSetFullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.109 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-12-19 10:23:01.109 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.109 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-12-19 10:23:01.109 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.113 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `image` : value = https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/23110_200w.jpg
[DEBUG] 2019-12-19 10:23:01.113 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.113 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `price` : value = 1.17
[DEBUG] 2019-12-19 10:23:01.113 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.114 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-12-19 10:23:01.114 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.114 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-12-19 10:23:01.114 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.114 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 25
[DEBUG] 2019-12-19 10:23:01.114 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.115 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#140]
[DEBUG] 2019-12-19 10:23:01.115 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#141]
[DEBUG] 2019-12-19 10:23:01.115 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardEdition` : value = 1st Edition
[DEBUG] 2019-12-19 10:23:01.116 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardEdition`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.116 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardIndex` : value = E042
[DEBUG] 2019-12-19 10:23:01.116 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.116 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardName` : value = Raigeki
[DEBUG] 2019-12-19 10:23:01.116 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.116 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-12-19 10:23:01.116 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.116 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-12-19 10:23:01.116 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.116 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardSetFullName` : value = The Legend of Blue Eyes White Dragon
[DEBUG] 2019-12-19 10:23:01.116 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardSetFullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.116 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-12-19 10:23:01.116 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.116 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-12-19 10:23:01.116 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.116 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `image` : value = https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/22327_200w.jpg
[DEBUG] 2019-12-19 10:23:01.116 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.116 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `price` : value = 86.65
[DEBUG] 2019-12-19 10:23:01.120 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.120 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-12-19 10:23:01.120 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.120 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-12-19 10:23:01.120 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.120 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 25
[DEBUG] 2019-12-19 10:23:01.120 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#141]
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#142]
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardEdition` : value = 1st Edition
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardEdition`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardIndex` : value = 052
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Hole
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardSetFullName` : value = The Legend of Blue Eyes White Dragon
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardSetFullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `image` : value = https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/21873_200w.jpg
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `price` : value = 69.98
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `quantity` : value = 3
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 25
[DEBUG] 2019-12-19 10:23:01.121 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.122 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#142]
[DEBUG] 2019-12-19 10:23:01.122 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#143]
[DEBUG] 2019-12-19 10:23:01.122 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardEdition` : value = 1st Edition
[DEBUG] 2019-12-19 10:23:01.122 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardEdition`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.122 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardIndex` : value = 118
[DEBUG] 2019-12-19 10:23:01.122 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.122 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardName` : value = Monster Reborn
[DEBUG] 2019-12-19 10:23:01.122 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.122 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-12-19 10:23:01.122 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.122 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-12-19 10:23:01.122 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.122 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardSetFullName` : value = The Legend of Blue Eyes White Dragon
[DEBUG] 2019-12-19 10:23:01.122 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardSetFullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.122 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-12-19 10:23:01.122 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.122 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-12-19 10:23:01.122 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.122 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `image` : value = https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/22233_200w.jpg
[DEBUG] 2019-12-19 10:23:01.122 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `price` : value = 99.34
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 25
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#143]
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#144]
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardEdition` : value = 1st Edition
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardEdition`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardIndex` : value = 059
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardName` : value = Polymerization
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardSetFullName` : value = The Legend of Blue Eyes White Dragon
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardSetFullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `image` : value = https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/22308_200w.jpg
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `price` : value = 74.98
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 25
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.123 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#144]
[DEBUG] 2019-12-19 10:23:01.124 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#145]
[DEBUG] 2019-12-19 10:23:01.124 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardEdition` : value = 1st Edition
[DEBUG] 2019-12-19 10:23:01.124 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardEdition`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.124 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardIndex` : value = 000
[DEBUG] 2019-12-19 10:23:01.124 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.124 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardName` : value = Jinzo
[DEBUG] 2019-12-19 10:23:01.124 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.124 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-12-19 10:23:01.124 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.124 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardSet` : value = PSV
[DEBUG] 2019-12-19 10:23:01.124 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.124 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardSetFullName` : value = Pharaoh's Servant
[DEBUG] 2019-12-19 10:23:01.126 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardSetFullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.126 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-12-19 10:23:01.126 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.126 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-12-19 10:23:01.126 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.126 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `image` : value = https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/22111_200w.jpg
[DEBUG] 2019-12-19 10:23:01.126 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.126 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `price` : value = 167.81
[DEBUG] 2019-12-19 10:23:01.126 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.126 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-12-19 10:23:01.126 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.126 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-12-19 10:23:01.126 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.126 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 25
[DEBUG] 2019-12-19 10:23:01.126 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.127 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#145]
[DEBUG] 2019-12-19 10:23:01.128 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#146]
[DEBUG] 2019-12-19 10:23:01.128 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardEdition` : value = 1st Edition
[DEBUG] 2019-12-19 10:23:01.128 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardEdition`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.128 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardIndex` : value = 104
[DEBUG] 2019-12-19 10:23:01.128 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.128 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardName` : value = Imperial Order
[DEBUG] 2019-12-19 10:23:01.128 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.128 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-12-19 10:23:01.128 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.128 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardSet` : value = PSV
[DEBUG] 2019-12-19 10:23:01.128 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.128 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardSetFullName` : value = Pharaoh's Servant
[DEBUG] 2019-12-19 10:23:01.128 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardSetFullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.128 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardType` : value = Trap
[DEBUG] 2019-12-19 10:23:01.128 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.128 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-12-19 10:23:01.128 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.128 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `image` : value = https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/22982_200w.jpg
[DEBUG] 2019-12-19 10:23:01.130 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.130 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `price` : value = 15.56
[DEBUG] 2019-12-19 10:23:01.130 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.130 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-12-19 10:23:01.130 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.130 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 25
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#146]
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#147]
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardEdition` : value = 1st Edition
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardEdition`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardIndex` : value = 071
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardName` : value = Breaker the Magical Warrior
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardSetFullName` : value = Magician's Force
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardSetFullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `image` : value = https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/21804_200w.jpg
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `price` : value = 27.53
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 25
[DEBUG] 2019-12-19 10:23:01.131 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:01.134 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#147]
[DEBUG] 2019-12-19 10:23:01.134 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-12-19 10:23:31.404 [http-nio-8080-exec-9] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where ( generatedAlias0.user=:param0 ) and ( generatedAlias0.status=:param1 )
[DEBUG] 2019-12-19 10:23:31.412 [http-nio-8080-exec-9] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_edition as card_edi2_1_, yugiohcard0_.card_index as card_ind3_1_, yugiohcard0_.card_name as card_nam4_1_, yugiohcard0_.card_rarity as card_rar5_1_, yugiohcard0_.card_set as card_set6_1_, yugiohcard0_.card_set_full_name as card_set7_1_, yugiohcard0_.card_type as card_typ8_1_, yugiohcard0_.image as image9_1_, yugiohcard0_.price as price10_1_, yugiohcard0_.qty as qty11_1_, yugiohcard0_.status as status12_1_, yugiohcard0_.user_id as user_id13_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.user_id=? and yugiohcard0_.status=?
[DEBUG] 2019-12-19 10:23:31.424 [http-nio-8080-exec-9] Loader - Result set row: 0
[DEBUG] 2019-12-19 10:23:31.424 [http-nio-8080-exec-9] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#139]
[DEBUG] 2019-12-19 10:23:31.467 [http-nio-8080-exec-9] Loader - Result set row: 1
[DEBUG] 2019-12-19 10:23:31.467 [http-nio-8080-exec-9] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#140]
[DEBUG] 2019-12-19 10:23:31.489 [http-nio-8080-exec-9] Loader - Result set row: 2
[DEBUG] 2019-12-19 10:23:31.500 [http-nio-8080-exec-9] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#141]
[DEBUG] 2019-12-19 10:23:31.506 [http-nio-8080-exec-9] Loader - Result set row: 3
[DEBUG] 2019-12-19 10:23:31.506 [http-nio-8080-exec-9] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#142]
[DEBUG] 2019-12-19 10:23:31.516 [http-nio-8080-exec-9] Loader - Result set row: 4
[DEBUG] 2019-12-19 10:23:31.516 [http-nio-8080-exec-9] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#143]
[DEBUG] 2019-12-19 10:23:31.535 [http-nio-8080-exec-9] Loader - Result set row: 5
[DEBUG] 2019-12-19 10:23:31.535 [http-nio-8080-exec-9] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#144]
[DEBUG] 2019-12-19 10:23:31.536 [http-nio-8080-exec-9] Loader - Result set row: 6
[DEBUG] 2019-12-19 10:23:31.542 [http-nio-8080-exec-9] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#145]
[DEBUG] 2019-12-19 10:23:31.543 [http-nio-8080-exec-9] Loader - Result set row: 7
[DEBUG] 2019-12-19 10:23:31.543 [http-nio-8080-exec-9] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#146]
[DEBUG] 2019-12-19 10:23:31.544 [http-nio-8080-exec-9] Loader - Result set row: 8
[DEBUG] 2019-12-19 10:23:31.544 [http-nio-8080-exec-9] Loader - Result row: EntityKey[edu.yang.entity.YugiohCard#147]
[DEBUG] 2019-12-19 10:23:31.568 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#139]
[DEBUG] 2019-12-19 10:23:31.568 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardEdition` : value = 1st Edition
[DEBUG] 2019-12-19 10:23:31.568 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardEdition`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.569 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardIndex` : value = 025
[DEBUG] 2019-12-19 10:23:31.569 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.569 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardName` : value = Black Luster Soldier Envoy of the Beginning
[DEBUG] 2019-12-19 10:23:31.569 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.569 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-12-19 10:23:31.569 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.569 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-12-19 10:23:31.569 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.569 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardSetFullName` : value = Invasion of Chaos
[DEBUG] 2019-12-19 10:23:31.569 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardSetFullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.569 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-12-19 10:23:31.569 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.569 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-12-19 10:23:31.569 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.569 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `image` : value = https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/23112_200w.jpg
[DEBUG] 2019-12-19 10:23:31.569 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.574 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `price` : value = 127.37
[DEBUG] 2019-12-19 10:23:31.574 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.574 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-12-19 10:23:31.574 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.574 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-12-19 10:23:31.574 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.574 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 25
[DEBUG] 2019-12-19 10:23:31.574 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.575 [http-nio-8080-exec-9] SQL - select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id13_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_edition as card_edi2_1_2_, cards1_.card_index as card_ind3_1_2_, cards1_.card_name as card_nam4_1_2_, cards1_.card_rarity as card_rar5_1_2_, cards1_.card_set as card_set6_1_2_, cards1_.card_set_full_name as card_set7_1_2_, cards1_.card_type as card_typ8_1_2_, cards1_.image as image9_1_2_, cards1_.price as price10_1_2_, cards1_.qty as qty11_1_2_, cards1_.status as status12_1_2_, cards1_.user_id as user_id13_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-12-19 10:23:31.590 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-12-19 10:23:31.590 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-12-19 10:23:31.593 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#139]
[DEBUG] 2019-12-19 10:23:31.593 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#25]
[DEBUG] 2019-12-19 10:23:31.603 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-12-19 10:23:31.603 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-12-19 10:23:31.603 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#140]
[DEBUG] 2019-12-19 10:23:31.603 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#25]
[DEBUG] 2019-12-19 10:23:31.603 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-12-19 10:23:31.603 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-12-19 10:23:31.615 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#141]
[DEBUG] 2019-12-19 10:23:31.615 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#25]
[DEBUG] 2019-12-19 10:23:31.616 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2019-12-19 10:23:31.616 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-12-19 10:23:31.616 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#142]
[DEBUG] 2019-12-19 10:23:31.616 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#25]
[DEBUG] 2019-12-19 10:23:31.616 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2019-12-19 10:23:31.616 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-12-19 10:23:31.616 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#143]
[DEBUG] 2019-12-19 10:23:31.616 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#25]
[DEBUG] 2019-12-19 10:23:31.621 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2019-12-19 10:23:31.621 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-12-19 10:23:31.621 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#144]
[DEBUG] 2019-12-19 10:23:31.621 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#25]
[DEBUG] 2019-12-19 10:23:31.621 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #6
[DEBUG] 2019-12-19 10:23:31.621 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-12-19 10:23:31.621 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#145]
[DEBUG] 2019-12-19 10:23:31.621 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#25]
[DEBUG] 2019-12-19 10:23:31.621 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #7
[DEBUG] 2019-12-19 10:23:31.621 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-12-19 10:23:31.622 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#146]
[DEBUG] 2019-12-19 10:23:31.622 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#25]
[DEBUG] 2019-12-19 10:23:31.622 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #8
[DEBUG] 2019-12-19 10:23:31.622 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-12-19 10:23:31.622 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [edu.yang.entity.YugiohCard.entries#147]
[DEBUG] 2019-12-19 10:23:31.622 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [edu.yang.entity.User.cards#25]
[DEBUG] 2019-12-19 10:23:31.622 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#25]
[DEBUG] 2019-12-19 10:23:31.622 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-12-19 10:23:31.622 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.622 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `password` : value = Simple!123
[DEBUG] 2019-12-19 10:23:31.622 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.622 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-12-19 10:23:31.622 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.622 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `userName` : value = saintAnita
[DEBUG] 2019-12-19 10:23:31.622 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.622 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#25]
[DEBUG] 2019-12-19 10:23:31.622 [http-nio-8080-exec-9] CollectionLoadContext - 9 collections were found in result set for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-12-19 10:23:31.622 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#140]
[DEBUG] 2019-12-19 10:23:31.622 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#141]
[DEBUG] 2019-12-19 10:23:31.627 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#142]
[DEBUG] 2019-12-19 10:23:31.628 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#143]
[DEBUG] 2019-12-19 10:23:31.628 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#144]
[DEBUG] 2019-12-19 10:23:31.628 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#145]
[DEBUG] 2019-12-19 10:23:31.628 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#146]
[DEBUG] 2019-12-19 10:23:31.628 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#147]
[DEBUG] 2019-12-19 10:23:31.628 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.YugiohCard.entries#139]
[DEBUG] 2019-12-19 10:23:31.628 [http-nio-8080-exec-9] CollectionLoadContext - 9 collections initialized for role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-12-19 10:23:31.628 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-12-19 10:23:31.628 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#25]
[DEBUG] 2019-12-19 10:23:31.628 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-12-19 10:23:31.629 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-12-19 10:23:31.629 [http-nio-8080-exec-9] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.yang.entity.User#25
[DEBUG] 2019-12-19 10:23:31.629 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#139]
[DEBUG] 2019-12-19 10:23:31.629 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#140]
[DEBUG] 2019-12-19 10:23:31.629 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardEdition` : value = 1st Edition
[DEBUG] 2019-12-19 10:23:31.629 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardEdition`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.629 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardIndex` : value = 023
[DEBUG] 2019-12-19 10:23:31.629 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.629 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardName` : value = Chaos Sorcerer
[DEBUG] 2019-12-19 10:23:31.629 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.629 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardRarity` : value = Common
[DEBUG] 2019-12-19 10:23:31.629 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.629 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardSet` : value = IOC
[DEBUG] 2019-12-19 10:23:31.629 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.629 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardSetFullName` : value = Invasion of Chaos
[DEBUG] 2019-12-19 10:23:31.629 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardSetFullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.629 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-12-19 10:23:31.629 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.629 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-12-19 10:23:31.629 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.630 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `image` : value = https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/23110_200w.jpg
[DEBUG] 2019-12-19 10:23:31.630 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `price` : value = 1.17
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 25
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#140]
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#141]
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardEdition` : value = 1st Edition
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardEdition`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardIndex` : value = E042
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardName` : value = Raigeki
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardSetFullName` : value = The Legend of Blue Eyes White Dragon
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardSetFullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `image` : value = https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/22327_200w.jpg
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `price` : value = 86.65
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `quantity` : value = 2
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 25
[DEBUG] 2019-12-19 10:23:31.631 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.635 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#141]
[DEBUG] 2019-12-19 10:23:31.635 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#142]
[DEBUG] 2019-12-19 10:23:31.635 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardEdition` : value = 1st Edition
[DEBUG] 2019-12-19 10:23:31.635 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardEdition`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.635 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardIndex` : value = 052
[DEBUG] 2019-12-19 10:23:31.635 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.635 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardName` : value = Dark Hole
[DEBUG] 2019-12-19 10:23:31.635 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.635 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-12-19 10:23:31.635 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.635 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-12-19 10:23:31.635 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.635 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardSetFullName` : value = The Legend of Blue Eyes White Dragon
[DEBUG] 2019-12-19 10:23:31.635 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardSetFullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.635 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-12-19 10:23:31.635 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.635 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-12-19 10:23:31.635 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.636 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `image` : value = https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/21873_200w.jpg
[DEBUG] 2019-12-19 10:23:31.636 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.636 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `price` : value = 69.98
[DEBUG] 2019-12-19 10:23:31.636 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.636 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `quantity` : value = 3
[DEBUG] 2019-12-19 10:23:31.636 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.636 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-12-19 10:23:31.636 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.636 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 25
[DEBUG] 2019-12-19 10:23:31.636 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.637 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#142]
[DEBUG] 2019-12-19 10:23:31.637 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#143]
[DEBUG] 2019-12-19 10:23:31.637 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardEdition` : value = 1st Edition
[DEBUG] 2019-12-19 10:23:31.637 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardEdition`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.637 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardIndex` : value = 118
[DEBUG] 2019-12-19 10:23:31.637 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.637 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardName` : value = Monster Reborn
[DEBUG] 2019-12-19 10:23:31.642 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.642 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-12-19 10:23:31.642 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.642 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-12-19 10:23:31.642 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.642 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardSetFullName` : value = The Legend of Blue Eyes White Dragon
[DEBUG] 2019-12-19 10:23:31.642 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardSetFullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.642 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-12-19 10:23:31.642 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.642 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-12-19 10:23:31.642 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.642 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `image` : value = https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/22233_200w.jpg
[DEBUG] 2019-12-19 10:23:31.642 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.642 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `price` : value = 99.34
[DEBUG] 2019-12-19 10:23:31.643 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.643 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-12-19 10:23:31.643 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.643 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-12-19 10:23:31.643 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.643 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 25
[DEBUG] 2019-12-19 10:23:31.643 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.644 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#143]
[DEBUG] 2019-12-19 10:23:31.644 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#144]
[DEBUG] 2019-12-19 10:23:31.644 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardEdition` : value = 1st Edition
[DEBUG] 2019-12-19 10:23:31.644 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardEdition`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.644 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardIndex` : value = 059
[DEBUG] 2019-12-19 10:23:31.644 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.644 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardName` : value = Polymerization
[DEBUG] 2019-12-19 10:23:31.645 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.645 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardRarity` : value = Super
[DEBUG] 2019-12-19 10:23:31.645 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.645 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardSet` : value = LOB
[DEBUG] 2019-12-19 10:23:31.645 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.645 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardSetFullName` : value = The Legend of Blue Eyes White Dragon
[DEBUG] 2019-12-19 10:23:31.645 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardSetFullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.647 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardType` : value = Spell
[DEBUG] 2019-12-19 10:23:31.647 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.647 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-12-19 10:23:31.647 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.647 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `image` : value = https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/22308_200w.jpg
[DEBUG] 2019-12-19 10:23:31.647 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.647 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `price` : value = 74.98
[DEBUG] 2019-12-19 10:23:31.647 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.647 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-12-19 10:23:31.647 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.648 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-12-19 10:23:31.648 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.648 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 25
[DEBUG] 2019-12-19 10:23:31.648 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.648 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#144]
[DEBUG] 2019-12-19 10:23:31.648 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#145]
[DEBUG] 2019-12-19 10:23:31.648 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardEdition` : value = 1st Edition
[DEBUG] 2019-12-19 10:23:31.648 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardEdition`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.648 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardIndex` : value = 000
[DEBUG] 2019-12-19 10:23:31.648 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.648 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardName` : value = Jinzo
[DEBUG] 2019-12-19 10:23:31.648 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.648 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-12-19 10:23:31.648 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.648 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardSet` : value = PSV
[DEBUG] 2019-12-19 10:23:31.648 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.648 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardSetFullName` : value = Pharaoh's Servant
[DEBUG] 2019-12-19 10:23:31.648 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardSetFullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.648 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-12-19 10:23:31.648 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.648 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-12-19 10:23:31.648 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.650 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `image` : value = https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/22111_200w.jpg
[DEBUG] 2019-12-19 10:23:31.650 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.650 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `price` : value = 167.81
[DEBUG] 2019-12-19 10:23:31.650 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.650 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-12-19 10:23:31.650 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.650 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-12-19 10:23:31.650 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.650 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 25
[DEBUG] 2019-12-19 10:23:31.650 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.653 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#145]
[DEBUG] 2019-12-19 10:23:31.654 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#146]
[DEBUG] 2019-12-19 10:23:31.654 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardEdition` : value = 1st Edition
[DEBUG] 2019-12-19 10:23:31.654 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardEdition`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.654 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardIndex` : value = 104
[DEBUG] 2019-12-19 10:23:31.654 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.654 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardName` : value = Imperial Order
[DEBUG] 2019-12-19 10:23:31.654 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.654 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardRarity` : value = Secret
[DEBUG] 2019-12-19 10:23:31.654 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.654 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardSet` : value = PSV
[DEBUG] 2019-12-19 10:23:31.654 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.654 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardSetFullName` : value = Pharaoh's Servant
[DEBUG] 2019-12-19 10:23:31.654 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardSetFullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.654 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardType` : value = Trap
[DEBUG] 2019-12-19 10:23:31.654 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.654 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-12-19 10:23:31.654 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.654 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `image` : value = https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/22982_200w.jpg
[DEBUG] 2019-12-19 10:23:31.654 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.654 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `price` : value = 15.56
[DEBUG] 2019-12-19 10:23:31.665 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.665 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-12-19 10:23:31.665 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.665 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-12-19 10:23:31.665 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.665 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 25
[DEBUG] 2019-12-19 10:23:31.665 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.665 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#146]
[DEBUG] 2019-12-19 10:23:31.673 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.YugiohCard#147]
[DEBUG] 2019-12-19 10:23:31.673 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardEdition` : value = 1st Edition
[DEBUG] 2019-12-19 10:23:31.673 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardEdition`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.673 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardIndex` : value = 071
[DEBUG] 2019-12-19 10:23:31.673 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardIndex`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.673 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardName` : value = Breaker the Magical Warrior
[DEBUG] 2019-12-19 10:23:31.673 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.673 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardRarity` : value = Ultra
[DEBUG] 2019-12-19 10:23:31.673 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardRarity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.673 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardSet` : value = MFC
[DEBUG] 2019-12-19 10:23:31.673 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardSet`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.673 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardSetFullName` : value = Magician's Force
[DEBUG] 2019-12-19 10:23:31.673 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardSetFullName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.673 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `cardType` : value = Monster
[DEBUG] 2019-12-19 10:23:31.673 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`cardType`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.673 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `entries` : value = NOT NULL COLLECTION
[DEBUG] 2019-12-19 10:23:31.679 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`entries`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.679 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `image` : value = https://6d4be195623157e28848-7697ece4918e0a73861de0eb37d08968.ssl.cf1.rackcdn.com/21804_200w.jpg
[DEBUG] 2019-12-19 10:23:31.679 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`image`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.679 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `price` : value = 27.53
[DEBUG] 2019-12-19 10:23:31.679 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`price`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.679 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `quantity` : value = 1
[DEBUG] 2019-12-19 10:23:31.680 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`quantity`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.680 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `status` : value = unsold
[DEBUG] 2019-12-19 10:23:31.680 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`status`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.680 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 25
[DEBUG] 2019-12-19 10:23:31.680 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-19 10:23:31.686 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [edu.yang.entity.YugiohCard#147]
[DEBUG] 2019-12-19 10:23:31.687 [http-nio-8080-exec-9] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
