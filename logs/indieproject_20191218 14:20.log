[DEBUG] 2019-12-18 14:20:46.629 [http-nio-8080-exec-4] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-12-18 14:20:46.631 [http-nio-8080-exec-4] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-12-18 14:20:46.638 [http-nio-8080-exec-4] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-12-18 14:20:46.859 [http-nio-8080-exec-4] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-12-18 14:20:46.869 [http-nio-8080-exec-4] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-12-18 14:20:47.211 [http-nio-8080-exec-4] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-12-18 14:20:47.212 [http-nio-8080-exec-4] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-12-18 14:20:47.265 [http-nio-8080-exec-4] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-12-18 14:20:48.237 [http-nio-8080-exec-4] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-12-18 14:20:48.264 [http-nio-8080-exec-4] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-12-18 14:20:48.266 [http-nio-8080-exec-4] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-12-18 14:20:48.290 [http-nio-8080-exec-4] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-12-18 14:20:48.373 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3be827ce
[DEBUG] 2019-12-18 14:20:48.376 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3be827ce
[DEBUG] 2019-12-18 14:20:48.376 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3be827ce
[DEBUG] 2019-12-18 14:20:48.377 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@29a46180
[DEBUG] 2019-12-18 14:20:48.377 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5e41a74
[DEBUG] 2019-12-18 14:20:48.378 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@55dc0347
[DEBUG] 2019-12-18 14:20:48.379 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7399081e
[DEBUG] 2019-12-18 14:20:48.379 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7399081e
[DEBUG] 2019-12-18 14:20:48.379 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7399081e
[DEBUG] 2019-12-18 14:20:48.382 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@236b2d61
[DEBUG] 2019-12-18 14:20:48.383 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@236b2d61
[DEBUG] 2019-12-18 14:20:48.383 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@236b2d61
[DEBUG] 2019-12-18 14:20:48.384 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@124bb246
[DEBUG] 2019-12-18 14:20:48.387 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@124bb246
[DEBUG] 2019-12-18 14:20:48.388 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@124bb246
[DEBUG] 2019-12-18 14:20:48.388 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@69649da9
[DEBUG] 2019-12-18 14:20:48.389 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@69649da9
[DEBUG] 2019-12-18 14:20:48.389 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@69649da9
[DEBUG] 2019-12-18 14:20:48.389 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@792641b7
[DEBUG] 2019-12-18 14:20:48.389 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@792641b7
[DEBUG] 2019-12-18 14:20:48.390 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@792641b7
[DEBUG] 2019-12-18 14:20:48.391 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1821b440
[DEBUG] 2019-12-18 14:20:48.391 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1821b440
[DEBUG] 2019-12-18 14:20:48.395 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1821b440
[DEBUG] 2019-12-18 14:20:48.396 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@66a05632
[DEBUG] 2019-12-18 14:20:48.396 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@66a05632
[DEBUG] 2019-12-18 14:20:48.399 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@66a05632
[DEBUG] 2019-12-18 14:20:48.402 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@743412fa
[DEBUG] 2019-12-18 14:20:48.402 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@743412fa
[DEBUG] 2019-12-18 14:20:48.403 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4d18dcfc
[DEBUG] 2019-12-18 14:20:48.403 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4d18dcfc
[DEBUG] 2019-12-18 14:20:48.403 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@595c6687
[DEBUG] 2019-12-18 14:20:48.403 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@595c6687
[DEBUG] 2019-12-18 14:20:48.404 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1d0a4650
[DEBUG] 2019-12-18 14:20:48.404 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@52c779fa
[DEBUG] 2019-12-18 14:20:48.407 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@71b0e6ab
[DEBUG] 2019-12-18 14:20:48.407 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71b0e6ab
[DEBUG] 2019-12-18 14:20:48.408 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@41135cc
[DEBUG] 2019-12-18 14:20:48.413 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@41135cc
[DEBUG] 2019-12-18 14:20:48.422 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4d702494
[DEBUG] 2019-12-18 14:20:48.422 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4d702494
[DEBUG] 2019-12-18 14:20:48.424 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2f3ab875
[DEBUG] 2019-12-18 14:20:48.425 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2f3ab875
[DEBUG] 2019-12-18 14:20:48.427 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@494f9fd9
[DEBUG] 2019-12-18 14:20:48.427 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@494f9fd9
[DEBUG] 2019-12-18 14:20:48.436 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1a8895f
[DEBUG] 2019-12-18 14:20:48.436 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1a8895f
[DEBUG] 2019-12-18 14:20:48.438 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@31b4d896
[DEBUG] 2019-12-18 14:20:48.438 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@31b4d896
[DEBUG] 2019-12-18 14:20:48.441 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5b7b91d3
[DEBUG] 2019-12-18 14:20:48.441 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5b7b91d3
[DEBUG] 2019-12-18 14:20:48.444 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7c1712ba
[DEBUG] 2019-12-18 14:20:48.444 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7c1712ba
[DEBUG] 2019-12-18 14:20:48.445 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@38cc4701
[DEBUG] 2019-12-18 14:20:48.445 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38cc4701
[DEBUG] 2019-12-18 14:20:48.452 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@489419e6
[DEBUG] 2019-12-18 14:20:48.452 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@489419e6
[DEBUG] 2019-12-18 14:20:48.453 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4c008643
[DEBUG] 2019-12-18 14:20:48.453 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4c008643
[DEBUG] 2019-12-18 14:20:48.454 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4c008643
[DEBUG] 2019-12-18 14:20:48.458 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1086042b
[DEBUG] 2019-12-18 14:20:48.460 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4983db33
[DEBUG] 2019-12-18 14:20:48.460 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4983db33
[DEBUG] 2019-12-18 14:20:48.465 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4983db33
[DEBUG] 2019-12-18 14:20:48.467 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7d939a35
[DEBUG] 2019-12-18 14:20:48.468 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4d5fbe18
[DEBUG] 2019-12-18 14:20:48.468 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4d5fbe18
[DEBUG] 2019-12-18 14:20:48.472 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@14f780c0
[DEBUG] 2019-12-18 14:20:48.472 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@14f780c0
[DEBUG] 2019-12-18 14:20:48.473 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@ff486d9
[DEBUG] 2019-12-18 14:20:48.473 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@ff486d9
[DEBUG] 2019-12-18 14:20:48.474 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@21bd8437
[DEBUG] 2019-12-18 14:20:48.474 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@21bd8437
[DEBUG] 2019-12-18 14:20:48.477 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5ceb218f
[DEBUG] 2019-12-18 14:20:48.477 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5ceb218f
[DEBUG] 2019-12-18 14:20:48.477 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@319a499d
[DEBUG] 2019-12-18 14:20:48.481 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@33b0d1ea
[DEBUG] 2019-12-18 14:20:48.481 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@33b0d1ea
[DEBUG] 2019-12-18 14:20:48.482 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@33b0d1ea
[DEBUG] 2019-12-18 14:20:48.482 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@42b7eca8
[DEBUG] 2019-12-18 14:20:48.485 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@42b7eca8
[DEBUG] 2019-12-18 14:20:48.485 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@42b7eca8
[DEBUG] 2019-12-18 14:20:48.486 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6fd29093
[DEBUG] 2019-12-18 14:20:48.487 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5d3d2d2a
[DEBUG] 2019-12-18 14:20:48.492 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3a407618
[DEBUG] 2019-12-18 14:20:48.492 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a407618
[DEBUG] 2019-12-18 14:20:48.492 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3a407618
[DEBUG] 2019-12-18 14:20:48.493 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@290643fc
[DEBUG] 2019-12-18 14:20:48.493 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@290643fc
[DEBUG] 2019-12-18 14:20:48.496 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@290643fc
[DEBUG] 2019-12-18 14:20:48.497 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7839e894
[DEBUG] 2019-12-18 14:20:48.498 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@294f94cc
[DEBUG] 2019-12-18 14:20:48.499 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@594b625a
[DEBUG] 2019-12-18 14:20:48.499 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@594b625a
[DEBUG] 2019-12-18 14:20:48.500 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26238011
[DEBUG] 2019-12-18 14:20:48.505 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@26ff097d
[DEBUG] 2019-12-18 14:20:48.505 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@26ff097d
[DEBUG] 2019-12-18 14:20:48.510 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@445e8900
[DEBUG] 2019-12-18 14:20:48.510 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@445e8900
[DEBUG] 2019-12-18 14:20:48.510 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3f20c707
[DEBUG] 2019-12-18 14:20:48.511 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3857b372
[DEBUG] 2019-12-18 14:20:48.516 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@35fd4006
[DEBUG] 2019-12-18 14:20:48.520 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@efcb014
[DEBUG] 2019-12-18 14:20:48.520 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@efcb014
[DEBUG] 2019-12-18 14:20:48.521 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4cc44a44
[DEBUG] 2019-12-18 14:20:48.521 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@67dc6b79
[DEBUG] 2019-12-18 14:20:48.521 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@12346e5f
[DEBUG] 2019-12-18 14:20:48.521 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2c4c4851
[DEBUG] 2019-12-18 14:20:48.521 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@42b4b1f6
[DEBUG] 2019-12-18 14:20:48.524 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@46b79d7a
[DEBUG] 2019-12-18 14:20:48.524 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@77c05565
[DEBUG] 2019-12-18 14:20:48.525 [http-nio-8080-exec-4] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3980850c
[DEBUG] 2019-12-18 14:20:48.594 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-12-18 14:20:48.596 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-12-18 14:20:48.599 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-12-18 14:20:48.600 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-12-18 14:20:48.601 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-12-18 14:20:48.602 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-12-18 14:20:48.602 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-12-18 14:20:48.604 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-12-18 14:20:48.604 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-12-18 14:20:48.613 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-12-18 14:20:48.613 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-12-18 14:20:48.614 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-12-18 14:20:48.614 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-12-18 14:20:48.615 [http-nio-8080-exec-4] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-12-18 14:20:48.635 [http-nio-8080-exec-4] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/yugioh_card_db
[INFO ] 2019-12-18 14:20:48.635 [http-nio-8080-exec-4] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-12-18 14:20:48.635 [http-nio-8080-exec-4] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-12-18 14:20:48.973 [http-nio-8080-exec-4] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-12-18 14:20:49.433 [http-nio-8080-exec-4] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-12-18 14:20:49.434 [http-nio-8080-exec-4] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-12-18 14:20:49.434 [http-nio-8080-exec-4] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-12-18 14:20:49.524 [http-nio-8080-exec-4] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-12-18 14:20:49.573 [http-nio-8080-exec-4] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-12-18 14:20:49.634 [http-nio-8080-exec-4] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-12-18 14:20:49.739 [http-nio-8080-exec-4] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-12-18 14:20:49.753 [http-nio-8080-exec-4] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@69f0f6c5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1d0698b3]
[DEBUG] 2019-12-18 14:20:49.858 [http-nio-8080-exec-4] AnnotationBinder - Binding entity from annotated class: edu.yang.entity.YugiohCard
[DEBUG] 2019-12-18 14:20:49.903 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-12-18 14:20:49.912 [http-nio-8080-exec-4] EntityBinder - Import with entity name YugiohCard
[DEBUG] 2019-12-18 14:20:49.923 [http-nio-8080-exec-4] EntityBinder - Bind entity edu.yang.entity.YugiohCard on table yugioh_card
[DEBUG] 2019-12-18 14:20:50.015 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.025 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-12-18 14:20:50.026 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:id]
[DEBUG] 2019-12-18 14:20:50.036 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-12-18 14:20:50.064 [http-nio-8080-exec-4] PropertyBinder - Building property id
[DEBUG] 2019-12-18 14:20:50.071 [http-nio-8080-exec-4] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-12-18 14:20:50.081 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_edition, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.081 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property cardEdition with lazy=false
[DEBUG] 2019-12-18 14:20:50.081 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardEdition]
[DEBUG] 2019-12-18 14:20:50.081 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for cardEdition
[DEBUG] 2019-12-18 14:20:50.081 [http-nio-8080-exec-4] PropertyBinder - Building property cardEdition
[DEBUG] 2019-12-18 14:20:50.081 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_index, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.082 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property cardIndex with lazy=false
[DEBUG] 2019-12-18 14:20:50.082 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardIndex]
[DEBUG] 2019-12-18 14:20:50.082 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for cardIndex
[DEBUG] 2019-12-18 14:20:50.082 [http-nio-8080-exec-4] PropertyBinder - Building property cardIndex
[DEBUG] 2019-12-18 14:20:50.083 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.083 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property cardName with lazy=false
[DEBUG] 2019-12-18 14:20:50.083 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardName]
[DEBUG] 2019-12-18 14:20:50.084 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for cardName
[DEBUG] 2019-12-18 14:20:50.084 [http-nio-8080-exec-4] PropertyBinder - Building property cardName
[DEBUG] 2019-12-18 14:20:50.084 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_rarity, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.084 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property cardRarity with lazy=false
[DEBUG] 2019-12-18 14:20:50.089 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardRarity]
[DEBUG] 2019-12-18 14:20:50.090 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for cardRarity
[DEBUG] 2019-12-18 14:20:50.090 [http-nio-8080-exec-4] PropertyBinder - Building property cardRarity
[DEBUG] 2019-12-18 14:20:50.090 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_set, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.090 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property cardSet with lazy=false
[DEBUG] 2019-12-18 14:20:50.090 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardSet]
[DEBUG] 2019-12-18 14:20:50.090 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for cardSet
[DEBUG] 2019-12-18 14:20:50.090 [http-nio-8080-exec-4] PropertyBinder - Building property cardSet
[DEBUG] 2019-12-18 14:20:50.090 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_set_full_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.090 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property cardSetFullName with lazy=false
[DEBUG] 2019-12-18 14:20:50.090 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardSetFullName]
[DEBUG] 2019-12-18 14:20:50.090 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for cardSetFullName
[DEBUG] 2019-12-18 14:20:50.090 [http-nio-8080-exec-4] PropertyBinder - Building property cardSetFullName
[DEBUG] 2019-12-18 14:20:50.093 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=card_type, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.093 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property cardType with lazy=false
[DEBUG] 2019-12-18 14:20:50.093 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:cardType]
[DEBUG] 2019-12-18 14:20:50.093 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for cardType
[DEBUG] 2019-12-18 14:20:50.093 [http-nio-8080-exec-4] PropertyBinder - Building property cardType
[DEBUG] 2019-12-18 14:20:50.095 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='yugiohCard'}
[DEBUG] 2019-12-18 14:20:50.095 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=entries, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.103 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.123 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.124 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=entries_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.126 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='entries_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-12-18 14:20:50.128 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='yugiohCard'}
[DEBUG] 2019-12-18 14:20:50.128 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='yugiohCard'}
[DEBUG] 2019-12-18 14:20:50.132 [http-nio-8080-exec-4] CollectionBinder - Collection role: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-12-18 14:20:50.139 [http-nio-8080-exec-4] PropertyBinder - Building property entries
[DEBUG] 2019-12-18 14:20:50.139 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=image, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.139 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property image with lazy=false
[DEBUG] 2019-12-18 14:20:50.139 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:image]
[DEBUG] 2019-12-18 14:20:50.140 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for image
[DEBUG] 2019-12-18 14:20:50.140 [http-nio-8080-exec-4] PropertyBinder - Building property image
[DEBUG] 2019-12-18 14:20:50.141 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.141 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2019-12-18 14:20:50.145 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:price]
[DEBUG] 2019-12-18 14:20:50.145 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2019-12-18 14:20:50.145 [http-nio-8080-exec-4] PropertyBinder - Building property price
[DEBUG] 2019-12-18 14:20:50.146 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=qty, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.147 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property quantity with lazy=false
[DEBUG] 2019-12-18 14:20:50.147 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:quantity]
[DEBUG] 2019-12-18 14:20:50.147 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for quantity
[DEBUG] 2019-12-18 14:20:50.147 [http-nio-8080-exec-4] PropertyBinder - Building property quantity
[DEBUG] 2019-12-18 14:20:50.147 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=status, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.147 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[DEBUG] 2019-12-18 14:20:50.147 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCard:status]
[DEBUG] 2019-12-18 14:20:50.148 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for status
[DEBUG] 2019-12-18 14:20:50.148 [http-nio-8080-exec-4] PropertyBinder - Building property status
[DEBUG] 2019-12-18 14:20:50.148 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-12-18 14:20:50.148 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.151 [http-nio-8080-exec-4] PropertyBinder - Building property user
[DEBUG] 2019-12-18 14:20:50.156 [http-nio-8080-exec-4] AnnotationBinder - Binding entity from annotated class: edu.yang.entity.User
[DEBUG] 2019-12-18 14:20:50.156 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-12-18 14:20:50.156 [http-nio-8080-exec-4] EntityBinder - Import with entity name User
[DEBUG] 2019-12-18 14:20:50.157 [http-nio-8080-exec-4] EntityBinder - Bind entity edu.yang.entity.User on table user
[DEBUG] 2019-12-18 14:20:50.158 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.158 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-12-18 14:20:50.158 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:id]
[DEBUG] 2019-12-18 14:20:50.158 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-12-18 14:20:50.158 [http-nio-8080-exec-4] PropertyBinder - Building property id
[DEBUG] 2019-12-18 14:20:50.158 [http-nio-8080-exec-4] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-12-18 14:20:50.158 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-12-18 14:20:50.158 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=cards, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.159 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.160 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.160 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=cards_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.161 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='cards_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-12-18 14:20:50.161 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-12-18 14:20:50.161 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-12-18 14:20:50.161 [http-nio-8080-exec-4] CollectionBinder - Collection role: edu.yang.entity.User.cards
[DEBUG] 2019-12-18 14:20:50.161 [http-nio-8080-exec-4] PropertyBinder - Building property cards
[DEBUG] 2019-12-18 14:20:50.161 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_password, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.163 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2019-12-18 14:20:50.163 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:password]
[DEBUG] 2019-12-18 14:20:50.165 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2019-12-18 14:20:50.167 [http-nio-8080-exec-4] PropertyBinder - Building property password
[DEBUG] 2019-12-18 14:20:50.171 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_role, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.171 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property role with lazy=false
[DEBUG] 2019-12-18 14:20:50.171 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:role]
[DEBUG] 2019-12-18 14:20:50.172 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for role
[DEBUG] 2019-12-18 14:20:50.172 [http-nio-8080-exec-4] PropertyBinder - Building property role
[DEBUG] 2019-12-18 14:20:50.172 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.172 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-12-18 14:20:50.172 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.User:userName]
[DEBUG] 2019-12-18 14:20:50.173 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-12-18 14:20:50.173 [http-nio-8080-exec-4] PropertyBinder - Building property userName
[DEBUG] 2019-12-18 14:20:50.173 [http-nio-8080-exec-4] AnnotationBinder - Binding entity from annotated class: edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-12-18 14:20:50.173 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-12-18 14:20:50.173 [http-nio-8080-exec-4] EntityBinder - Import with entity name YugiohCardHistory
[DEBUG] 2019-12-18 14:20:50.173 [http-nio-8080-exec-4] EntityBinder - Bind entity edu.yang.entity.YugiohCardHistory on table yugioh_card_history
[DEBUG] 2019-12-18 14:20:50.178 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.178 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-12-18 14:20:50.178 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCardHistory:id]
[DEBUG] 2019-12-18 14:20:50.179 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-12-18 14:20:50.179 [http-nio-8080-exec-4] PropertyBinder - Building property id
[DEBUG] 2019-12-18 14:20:50.179 [http-nio-8080-exec-4] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-12-18 14:20:50.179 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=price, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.182 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property price with lazy=false
[DEBUG] 2019-12-18 14:20:50.183 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCardHistory:price]
[DEBUG] 2019-12-18 14:20:50.183 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for price
[DEBUG] 2019-12-18 14:20:50.183 [http-nio-8080-exec-4] PropertyBinder - Building property price
[DEBUG] 2019-12-18 14:20:50.183 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=update_date, insertable=true, updatable=false, unique=false}
[DEBUG] 2019-12-18 14:20:50.184 [http-nio-8080-exec-4] PropertyBinder - MetadataSourceProcessor property ts with lazy=false
[DEBUG] 2019-12-18 14:20:50.184 [http-nio-8080-exec-4] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.yang.entity.YugiohCardHistory:ts]
[DEBUG] 2019-12-18 14:20:50.184 [http-nio-8080-exec-4] SimpleValueBinder - building SimpleValue for ts
[DEBUG] 2019-12-18 14:20:50.184 [http-nio-8080-exec-4] PropertyBinder - Building property ts
[DEBUG] 2019-12-18 14:20:50.209 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-12-18 14:20:50.209 [http-nio-8080-exec-4] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(yugioh_card_history), mappingColumn=yugiohCard, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-12-18 14:20:50.209 [http-nio-8080-exec-4] PropertyBinder - Building property yugiohCard
[DEBUG] 2019-12-18 14:20:50.211 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-12-18 14:20:50.211 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for cardEdition
[DEBUG] 2019-12-18 14:20:50.211 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for cardIndex
[DEBUG] 2019-12-18 14:20:50.211 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for cardName
[DEBUG] 2019-12-18 14:20:50.212 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for cardRarity
[DEBUG] 2019-12-18 14:20:50.212 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for cardSet
[DEBUG] 2019-12-18 14:20:50.212 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for cardSetFullName
[DEBUG] 2019-12-18 14:20:50.212 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for cardType
[DEBUG] 2019-12-18 14:20:50.212 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for image
[DEBUG] 2019-12-18 14:20:50.212 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2019-12-18 14:20:50.213 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for quantity
[DEBUG] 2019-12-18 14:20:50.213 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for status
[DEBUG] 2019-12-18 14:20:50.213 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-12-18 14:20:50.213 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2019-12-18 14:20:50.213 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for role
[DEBUG] 2019-12-18 14:20:50.213 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-12-18 14:20:50.213 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-12-18 14:20:50.214 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for price
[DEBUG] 2019-12-18 14:20:50.214 [http-nio-8080-exec-4] SimpleValueBinder - Starting fillSimpleValue for ts
[DEBUG] 2019-12-18 14:20:50.222 [http-nio-8080-exec-4] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [yugioh_card]
[DEBUG] 2019-12-18 14:20:50.222 [http-nio-8080-exec-4] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2019-12-18 14:20:50.223 [http-nio-8080-exec-4] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [yugioh_card_history]
[DEBUG] 2019-12-18 14:20:50.223 [http-nio-8080-exec-4] CollectionSecondPass - Second pass for collection: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-12-18 14:20:50.223 [http-nio-8080-exec-4] CollectionBinder - Binding a OneToMany: edu.yang.entity.YugiohCard.entries through a foreign key
[DEBUG] 2019-12-18 14:20:50.227 [http-nio-8080-exec-4] CollectionBinder - Mapping collection: edu.yang.entity.YugiohCard.entries -> yugioh_card_history
[DEBUG] 2019-12-18 14:20:50.228 [http-nio-8080-exec-4] TableBinder - Retrieving property edu.yang.entity.YugiohCardHistory.yugiohCard
[DEBUG] 2019-12-18 14:20:50.228 [http-nio-8080-exec-4] CollectionSecondPass - Mapped collection key: yugiohCard_id, one-to-many: edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-12-18 14:20:50.229 [http-nio-8080-exec-4] CollectionSecondPass - Second pass for collection: edu.yang.entity.User.cards
[DEBUG] 2019-12-18 14:20:50.229 [http-nio-8080-exec-4] CollectionBinder - Binding a OneToMany: edu.yang.entity.User.cards through a foreign key
[DEBUG] 2019-12-18 14:20:50.229 [http-nio-8080-exec-4] CollectionBinder - Mapping collection: edu.yang.entity.User.cards -> yugioh_card
[DEBUG] 2019-12-18 14:20:50.234 [http-nio-8080-exec-4] TableBinder - Retrieving property edu.yang.entity.YugiohCard.user
[DEBUG] 2019-12-18 14:20:50.234 [http-nio-8080-exec-4] CollectionSecondPass - Mapped collection key: user_id, one-to-many: edu.yang.entity.YugiohCard
[DEBUG] 2019-12-18 14:20:50.236 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.User
[DEBUG] 2019-12-18 14:20:50.240 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.YugiohCard
[DEBUG] 2019-12-18 14:20:50.249 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.User
[DEBUG] 2019-12-18 14:20:50.249 [http-nio-8080-exec-4] InFlightMetadataCollectorImpl - Resolving reference to class: edu.yang.entity.YugiohCard
[DEBUG] 2019-12-18 14:20:50.338 [http-nio-8080-exec-4] SessionFactoryImpl - Building session factory
[DEBUG] 2019-12-18 14:20:50.347 [http-nio-8080-exec-4] Settings - SessionFactory name : null
[DEBUG] 2019-12-18 14:20:50.347 [http-nio-8080-exec-4] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-12-18 14:20:50.348 [http-nio-8080-exec-4] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-12-18 14:20:50.348 [http-nio-8080-exec-4] Settings - Statistics: disabled
[DEBUG] 2019-12-18 14:20:50.348 [http-nio-8080-exec-4] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-12-18 14:20:50.348 [http-nio-8080-exec-4] Settings - Default entity-mode: pojo
[DEBUG] 2019-12-18 14:20:50.348 [http-nio-8080-exec-4] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-12-18 14:20:50.348 [http-nio-8080-exec-4] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-12-18 14:20:50.348 [http-nio-8080-exec-4] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-12-18 14:20:50.348 [http-nio-8080-exec-4] Settings - Default batch fetch size: -1
[DEBUG] 2019-12-18 14:20:50.348 [http-nio-8080-exec-4] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-12-18 14:20:50.348 [http-nio-8080-exec-4] Settings - Default null ordering: NONE
[DEBUG] 2019-12-18 14:20:50.348 [http-nio-8080-exec-4] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-12-18 14:20:50.350 [http-nio-8080-exec-4] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-12-18 14:20:50.350 [http-nio-8080-exec-4] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-12-18 14:20:50.350 [http-nio-8080-exec-4] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-12-18 14:20:50.350 [http-nio-8080-exec-4] Settings - Query language substitutions: {}
[DEBUG] 2019-12-18 14:20:50.350 [http-nio-8080-exec-4] Settings - Named query checking : enabled
[DEBUG] 2019-12-18 14:20:50.350 [http-nio-8080-exec-4] Settings - Second-level cache: disabled
[DEBUG] 2019-12-18 14:20:50.351 [http-nio-8080-exec-4] Settings - Second-level query cache: disabled
[DEBUG] 2019-12-18 14:20:50.351 [http-nio-8080-exec-4] Settings - Second-level query cache factory: null
[DEBUG] 2019-12-18 14:20:50.351 [http-nio-8080-exec-4] Settings - Second-level cache region prefix: null
[DEBUG] 2019-12-18 14:20:50.351 [http-nio-8080-exec-4] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-12-18 14:20:50.351 [http-nio-8080-exec-4] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-12-18 14:20:50.351 [http-nio-8080-exec-4] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-12-18 14:20:50.351 [http-nio-8080-exec-4] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-12-18 14:20:50.353 [http-nio-8080-exec-4] Settings - JDBC batch size: 15
[DEBUG] 2019-12-18 14:20:50.353 [http-nio-8080-exec-4] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-12-18 14:20:50.353 [http-nio-8080-exec-4] Settings - Scrollable result sets: enabled
[DEBUG] 2019-12-18 14:20:50.353 [http-nio-8080-exec-4] Settings - Wrap result sets: disabled
[DEBUG] 2019-12-18 14:20:50.353 [http-nio-8080-exec-4] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-12-18 14:20:50.354 [http-nio-8080-exec-4] Settings - JDBC result set fetch size: null
[DEBUG] 2019-12-18 14:20:50.354 [http-nio-8080-exec-4] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-12-18 14:20:50.354 [http-nio-8080-exec-4] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-12-18 14:20:50.354 [http-nio-8080-exec-4] Settings - JPA compliance - query : 
[DEBUG] 2019-12-18 14:20:50.354 [http-nio-8080-exec-4] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-12-18 14:20:50.354 [http-nio-8080-exec-4] Settings - JPA compliance - lists : 
[DEBUG] 2019-12-18 14:20:50.354 [http-nio-8080-exec-4] Settings - JPA compliance - transactions : 
[INFO ] 2019-12-18 14:20:50.497 [http-nio-8080-exec-4] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-12-18 14:20:50.556 [http-nio-8080-exec-4] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-12-18 14:20:50.558 [http-nio-8080-exec-4] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=Unknown, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-10-15, java.home=/usr/lib/jvm/java-11-openjdk-amd64, ignore.endorsed.dirs=, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject/jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, java.util.logging.config.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject/conf/logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.5+10-post-Ubuntu-0ubuntu1.118.04, user.name=student, org.apache.johnzon.max-string-length=8192, file.encoding=UTF-8, derby.system.home=/home/student/tomcat/bin, org.apache.catalina.security.SecurityListener.UMASK=0027, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=/home/student/tomcat/temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.5, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Private Build, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=gnome, java.class.path=/home/student/tomcat/bin/bootstrap.jar:/home/student/tomcat/bin/tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Private Build, openejb.home=/home/student/tomcat, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject/jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=:, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar","/home/student/tomcat/lib","/home/student/tomcat/lib/*.jar", hibernate.connection.username=****, os.version=5.0.0-37-generic, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/yugioh_card_db, java.vm.name=OpenJDK 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=Unknown, tomee.remote.support=true, catalina.home=/home/student/tomcat, user.dir=/home/student/tomcat/bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=/home/student/.IntelliJIdea2019.1/system/tomcat/Unnamed_indieproject, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4bed5e2c, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, sharing, java.vm.version=11.0.5+10-post-Ubuntu-0ubuntu1.118.04, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/yugioh_card_db, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2019-12-18 14:20:50.611 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.User] is safe
[DEBUG] 2019-12-18 14:20:50.611 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.User
[DEBUG] 2019-12-18 14:20:50.653 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCard] is safe
[DEBUG] 2019-12-18 14:20:50.653 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCard
[DEBUG] 2019-12-18 14:20:50.658 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCardHistory] is safe
[DEBUG] 2019-12-18 14:20:50.658 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-12-18 14:20:50.666 [http-nio-8080-exec-4] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-12-18 14:20:50.673 [http-nio-8080-exec-4] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-12-18 14:20:50.673 [http-nio-8080-exec-4] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@69f0f6c5] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@12ec213f]
[DEBUG] 2019-12-18 14:20:50.750 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.User] is safe
[DEBUG] 2019-12-18 14:20:50.751 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.User
[DEBUG] 2019-12-18 14:20:50.786 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.User] is safe
[DEBUG] 2019-12-18 14:20:50.786 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.User
[DEBUG] 2019-12-18 14:20:51.137 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCard] is safe
[DEBUG] 2019-12-18 14:20:51.137 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCard
[DEBUG] 2019-12-18 14:20:51.139 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCard] is safe
[DEBUG] 2019-12-18 14:20:51.139 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCard
[DEBUG] 2019-12-18 14:20:51.257 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCardHistory] is safe
[DEBUG] 2019-12-18 14:20:51.259 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-12-18 14:20:51.266 [http-nio-8080-exec-4] ClassLoaderAccessImpl - Not known whether passed class name [edu.yang.entity.YugiohCardHistory] is safe
[DEBUG] 2019-12-18 14:20:51.266 [http-nio-8080-exec-4] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-12-18 14:20:51.334 [http-nio-8080-exec-4] AbstractCollectionPersister - Static SQL for collection: edu.yang.entity.User.cards
[DEBUG] 2019-12-18 14:20:51.334 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row insert: update yugioh_card set user_id=? where id=?
[DEBUG] 2019-12-18 14:20:51.334 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row update: update yugioh_card set  where id=?
[DEBUG] 2019-12-18 14:20:51.334 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row delete: update yugioh_card set user_id=null where user_id=? and id=?
[DEBUG] 2019-12-18 14:20:51.334 [http-nio-8080-exec-4] AbstractCollectionPersister -  One-shot delete: update yugioh_card set user_id=null where user_id=?
[DEBUG] 2019-12-18 14:20:51.337 [http-nio-8080-exec-4] AbstractCollectionPersister - Static SQL for collection: edu.yang.entity.YugiohCard.entries
[DEBUG] 2019-12-18 14:20:51.338 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row insert: update yugioh_card_history set yugiohCard_id=? where id=?
[DEBUG] 2019-12-18 14:20:51.338 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row update: update yugioh_card_history set  where id=?
[DEBUG] 2019-12-18 14:20:51.339 [http-nio-8080-exec-4] AbstractCollectionPersister -  Row delete: update yugioh_card_history set yugiohCard_id=null where yugiohCard_id=? and id=?
[DEBUG] 2019-12-18 14:20:51.340 [http-nio-8080-exec-4] AbstractCollectionPersister -  One-shot delete: update yugioh_card_history set yugiohCard_id=null where yugiohCard_id=?
[DEBUG] 2019-12-18 14:20:51.353 [http-nio-8080-exec-4] AbstractEntityPersister - Static SQL for entity: edu.yang.entity.User
[DEBUG] 2019-12-18 14:20:51.354 [http-nio-8080-exec-4] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2019-12-18 14:20:51.354 [http-nio-8080-exec-4] AbstractEntityPersister -  Snapshot select: select user_.id, user_.user_password as user_pas2_0_, user_.user_role as user_rol3_0_, user_.user_name as user_nam4_0_ from user user_ where user_.id=?
[DEBUG] 2019-12-18 14:20:51.354 [http-nio-8080-exec-4] AbstractEntityPersister -  Insert 0: insert into user (user_password, user_role, user_name, id) values (?, ?, ?, ?)
[DEBUG] 2019-12-18 14:20:51.354 [http-nio-8080-exec-4] AbstractEntityPersister -  Update 0: update user set user_password=?, user_role=?, user_name=? where id=?
[DEBUG] 2019-12-18 14:20:51.354 [http-nio-8080-exec-4] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2019-12-18 14:20:51.354 [http-nio-8080-exec-4] AbstractEntityPersister -  Identity insert: insert into user (user_password, user_role, user_name) values (?, ?, ?)
[DEBUG] 2019-12-18 14:20:51.405 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@332cbc5a]
[DEBUG] 2019-12-18 14:20:51.413 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards
[DEBUG] 2019-12-18 14:20:51.420 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f3346d4]
[DEBUG] 2019-12-18 14:20:51.424 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@950288e]
[DEBUG] 2019-12-18 14:20:51.426 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.cardEdition
[DEBUG] 2019-12-18 14:20:51.426 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.cardIndex
[DEBUG] 2019-12-18 14:20:51.426 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.cardName
[DEBUG] 2019-12-18 14:20:51.427 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.cardRarity
[DEBUG] 2019-12-18 14:20:51.427 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.cardSet
[DEBUG] 2019-12-18 14:20:51.427 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.cardSetFullName
[DEBUG] 2019-12-18 14:20:51.429 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.cardType
[DEBUG] 2019-12-18 14:20:51.429 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.entries
[DEBUG] 2019-12-18 14:20:51.429 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c3dfabd]
[DEBUG] 2019-12-18 14:20:51.429 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@630323e9]
[DEBUG] 2019-12-18 14:20:51.429 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.entries.price
[DEBUG] 2019-12-18 14:20:51.431 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.entries.ts
[DEBUG] 2019-12-18 14:20:51.432 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.entries.yugiohCard
[DEBUG] 2019-12-18 14:20:51.432 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : cards.entries.yugiohCard
[DEBUG] 2019-12-18 14:20:51.434 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.image
[DEBUG] 2019-12-18 14:20:51.435 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.price
[DEBUG] 2019-12-18 14:20:51.435 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.quantity
[DEBUG] 2019-12-18 14:20:51.435 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.status
[DEBUG] 2019-12-18 14:20:51.435 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.user
[DEBUG] 2019-12-18 14:20:51.435 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : cards.user
[DEBUG] 2019-12-18 14:20:51.436 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-12-18 14:20:51.437 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2019-12-18 14:20:51.437 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-12-18 14:20:51.437 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-12-18 14:20:51.471 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-12-18 14:20:51.489 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:0>, path=edu.yang.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.User.cards, querySpaceUid=<gen:1>, path=edu.yang.entity.User.cards)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:2>, path=edu.yang.entity.User.cards.<elements>)
                - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:3>, path=edu.yang.entity.User.cards.<elements>.entries)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:4>, path=edu.yang.entity.User.cards.<elements>.entries.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(cards)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.User.cards)
                - SQL table alias mapping - cards1_
                - alias suffix - 1_
                - suffixed key columns - {user_id13_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCard)
                      - SQL table alias mapping - cards1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(entries)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=edu.yang.entity.YugiohCard.entries)
                            - SQL table alias mapping - entries2_
                            - alias suffix - 3_
                            - suffixed key columns - {yugiohCa4_2_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_2_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=edu.yang.entity.YugiohCardHistory)
                                  - SQL table alias mapping - entries2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_2_4_}

[DEBUG] 2019-12-18 14:20:51.491 [http-nio-8080-exec-4] EntityLoader - Static select for entity edu.yang.entity.User [NONE]: select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id13_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_edition as card_edi2_1_2_, cards1_.card_index as card_ind3_1_2_, cards1_.card_name as card_nam4_1_2_, cards1_.card_rarity as card_rar5_1_2_, cards1_.card_set as card_set6_1_2_, cards1_.card_set_full_name as card_set7_1_2_, cards1_.card_type as card_typ8_1_2_, cards1_.image as image9_1_2_, cards1_.price as price10_1_2_, cards1_.qty as qty11_1_2_, cards1_.status as status12_1_2_, cards1_.user_id as user_id13_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-12-18 14:20:51.491 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60ec9aea]
[DEBUG] 2019-12-18 14:20:51.492 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards
[DEBUG] 2019-12-18 14:20:51.492 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@749e43f1]
[DEBUG] 2019-12-18 14:20:51.492 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@621f8f40]
[DEBUG] 2019-12-18 14:20:51.492 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.cardEdition
[DEBUG] 2019-12-18 14:20:51.492 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.cardIndex
[DEBUG] 2019-12-18 14:20:51.493 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.cardName
[DEBUG] 2019-12-18 14:20:51.493 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.cardRarity
[DEBUG] 2019-12-18 14:20:51.494 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.cardSet
[DEBUG] 2019-12-18 14:20:51.494 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.cardSetFullName
[DEBUG] 2019-12-18 14:20:51.494 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.cardType
[DEBUG] 2019-12-18 14:20:51.494 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.entries
[DEBUG] 2019-12-18 14:20:51.494 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2450d8bd]
[DEBUG] 2019-12-18 14:20:51.494 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3aab36f8]
[DEBUG] 2019-12-18 14:20:51.494 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.entries.price
[DEBUG] 2019-12-18 14:20:51.494 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.entries.ts
[DEBUG] 2019-12-18 14:20:51.494 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.entries.yugiohCard
[DEBUG] 2019-12-18 14:20:51.494 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : cards.entries.yugiohCard
[DEBUG] 2019-12-18 14:20:51.494 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.image
[DEBUG] 2019-12-18 14:20:51.494 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.price
[DEBUG] 2019-12-18 14:20:51.494 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.quantity
[DEBUG] 2019-12-18 14:20:51.494 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.status
[DEBUG] 2019-12-18 14:20:51.494 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cards.user
[DEBUG] 2019-12-18 14:20:51.494 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : cards.user
[DEBUG] 2019-12-18 14:20:51.495 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-12-18 14:20:51.495 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : role
[DEBUG] 2019-12-18 14:20:51.495 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-12-18 14:20:51.495 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-12-18 14:20:51.495 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-12-18 14:20:51.497 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:0>, path=edu.yang.entity.User)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.User.cards, querySpaceUid=<gen:1>, path=edu.yang.entity.User.cards)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:2>, path=edu.yang.entity.User.cards.<elements>)
                - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:3>, path=edu.yang.entity.User.cards.<elements>.entries)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:4>, path=edu.yang.entity.User.cards.<elements>.entries.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(cards)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.User.cards)
                - SQL table alias mapping - cards1_
                - alias suffix - 1_
                - suffixed key columns - {user_id13_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCard)
                      - SQL table alias mapping - cards1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(entries)) : <gen:2> -> <gen:3>
                         - CollectionQuerySpaceImpl(uid=<gen:3>, collection=edu.yang.entity.YugiohCard.entries)
                            - SQL table alias mapping - entries2_
                            - alias suffix - 3_
                            - suffixed key columns - {yugiohCa4_2_3_}
                            - entity-element alias suffix - 4_
                            - 4_entity-element suffixed key columns - id1_2_4_
                            - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                               - EntityQuerySpaceImpl(uid=<gen:4>, entity=edu.yang.entity.YugiohCardHistory)
                                  - SQL table alias mapping - entries2_
                                  - alias suffix - 4_
                                  - suffixed key columns - {id1_2_4_}

[DEBUG] 2019-12-18 14:20:51.498 [http-nio-8080-exec-4] EntityLoader - Static select for entity edu.yang.entity.User [READ]: select user0_.id as id1_0_0_, user0_.user_password as user_pas2_0_0_, user0_.user_role as user_rol3_0_0_, user0_.user_name as user_nam4_0_0_, cards1_.user_id as user_id13_1_1_, cards1_.id as id1_1_1_, cards1_.id as id1_1_2_, cards1_.card_edition as card_edi2_1_2_, cards1_.card_index as card_ind3_1_2_, cards1_.card_name as card_nam4_1_2_, cards1_.card_rarity as card_rar5_1_2_, cards1_.card_set as card_set6_1_2_, cards1_.card_set_full_name as card_set7_1_2_, cards1_.card_type as card_typ8_1_2_, cards1_.image as image9_1_2_, cards1_.price as price10_1_2_, cards1_.qty as qty11_1_2_, cards1_.status as status12_1_2_, cards1_.user_id as user_id13_1_2_, entries2_.yugiohCard_id as yugiohCa4_2_3_, entries2_.id as id1_2_3_, entries2_.id as id1_2_4_, entries2_.price as price2_2_4_, entries2_.update_date as update_d3_2_4_, entries2_.yugiohCard_id as yugiohCa4_2_4_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id left outer join yugioh_card_history entries2_ on cards1_.id=entries2_.yugiohCard_id where user0_.id=?
[DEBUG] 2019-12-18 14:20:51.516 [http-nio-8080-exec-4] Loader - Static select for action ACTION_MERGE on entity edu.yang.entity.User: select user0_.id as id1_0_1_, user0_.user_password as user_pas2_0_1_, user0_.user_role as user_rol3_0_1_, user0_.user_name as user_nam4_0_1_, cards1_.user_id as user_id13_1_3_, cards1_.id as id1_1_3_, cards1_.id as id1_1_0_, cards1_.card_edition as card_edi2_1_0_, cards1_.card_index as card_ind3_1_0_, cards1_.card_name as card_nam4_1_0_, cards1_.card_rarity as card_rar5_1_0_, cards1_.card_set as card_set6_1_0_, cards1_.card_set_full_name as card_set7_1_0_, cards1_.card_type as card_typ8_1_0_, cards1_.image as image9_1_0_, cards1_.price as price10_1_0_, cards1_.qty as qty11_1_0_, cards1_.status as status12_1_0_, cards1_.user_id as user_id13_1_0_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id where user0_.id=?
[DEBUG] 2019-12-18 14:20:51.516 [http-nio-8080-exec-4] Loader - Static select for action ACTION_REFRESH on entity edu.yang.entity.User: select user0_.id as id1_0_1_, user0_.user_password as user_pas2_0_1_, user0_.user_role as user_rol3_0_1_, user0_.user_name as user_nam4_0_1_, cards1_.user_id as user_id13_1_3_, cards1_.id as id1_1_3_, cards1_.id as id1_1_0_, cards1_.card_edition as card_edi2_1_0_, cards1_.card_index as card_ind3_1_0_, cards1_.card_name as card_nam4_1_0_, cards1_.card_rarity as card_rar5_1_0_, cards1_.card_set as card_set6_1_0_, cards1_.card_set_full_name as card_set7_1_0_, cards1_.card_type as card_typ8_1_0_, cards1_.image as image9_1_0_, cards1_.price as price10_1_0_, cards1_.qty as qty11_1_0_, cards1_.status as status12_1_0_, cards1_.user_id as user_id13_1_0_ from user user0_ left outer join yugioh_card cards1_ on user0_.id=cards1_.user_id where user0_.id=?
[DEBUG] 2019-12-18 14:20:51.516 [http-nio-8080-exec-4] AbstractEntityPersister - Static SQL for entity: edu.yang.entity.YugiohCard
[DEBUG] 2019-12-18 14:20:51.516 [http-nio-8080-exec-4] AbstractEntityPersister -  Version select: select id from yugioh_card where id =?
[DEBUG] 2019-12-18 14:20:51.516 [http-nio-8080-exec-4] AbstractEntityPersister -  Snapshot select: select yugiohcard_.id, yugiohcard_.card_edition as card_edi2_1_, yugiohcard_.card_index as card_ind3_1_, yugiohcard_.card_name as card_nam4_1_, yugiohcard_.card_rarity as card_rar5_1_, yugiohcard_.card_set as card_set6_1_, yugiohcard_.card_set_full_name as card_set7_1_, yugiohcard_.card_type as card_typ8_1_, yugiohcard_.image as image9_1_, yugiohcard_.price as price10_1_, yugiohcard_.qty as qty11_1_, yugiohcard_.status as status12_1_, yugiohcard_.user_id as user_id13_1_ from yugioh_card yugiohcard_ where yugiohcard_.id=?
[DEBUG] 2019-12-18 14:20:51.516 [http-nio-8080-exec-4] AbstractEntityPersister -  Insert 0: insert into yugioh_card (card_edition, card_index, card_name, card_rarity, card_set, card_set_full_name, card_type, image, price, qty, status, user_id, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-12-18 14:20:51.516 [http-nio-8080-exec-4] AbstractEntityPersister -  Update 0: update yugioh_card set card_edition=?, card_index=?, card_name=?, card_rarity=?, card_set=?, card_set_full_name=?, card_type=?, image=?, price=?, qty=?, status=?, user_id=? where id=?
[DEBUG] 2019-12-18 14:20:51.516 [http-nio-8080-exec-4] AbstractEntityPersister -  Delete 0: delete from yugioh_card where id=?
[DEBUG] 2019-12-18 14:20:51.516 [http-nio-8080-exec-4] AbstractEntityPersister -  Identity insert: insert into yugioh_card (card_edition, card_index, card_name, card_rarity, card_set, card_set_full_name, card_type, image, price, qty, status, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2019-12-18 14:20:51.516 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a5e043d]
[DEBUG] 2019-12-18 14:20:51.517 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cardEdition
[DEBUG] 2019-12-18 14:20:51.517 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cardIndex
[DEBUG] 2019-12-18 14:20:51.517 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cardName
[DEBUG] 2019-12-18 14:20:51.517 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cardRarity
[DEBUG] 2019-12-18 14:20:51.517 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cardSet
[DEBUG] 2019-12-18 14:20:51.517 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cardSetFullName
[DEBUG] 2019-12-18 14:20:51.517 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cardType
[DEBUG] 2019-12-18 14:20:51.517 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : entries
[DEBUG] 2019-12-18 14:20:51.517 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f2f15f0]
[DEBUG] 2019-12-18 14:20:51.517 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ad4e9ee]
[DEBUG] 2019-12-18 14:20:51.517 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : entries.price
[DEBUG] 2019-12-18 14:20:51.517 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : entries.ts
[DEBUG] 2019-12-18 14:20:51.518 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : entries.yugiohCard
[DEBUG] 2019-12-18 14:20:51.518 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : entries.yugiohCard
[DEBUG] 2019-12-18 14:20:51.518 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2019-12-18 14:20:51.518 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-12-18 14:20:51.518 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : quantity
[DEBUG] 2019-12-18 14:20:51.518 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2019-12-18 14:20:51.518 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-12-18 14:20:51.518 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24557f60]
[DEBUG] 2019-12-18 14:20:51.524 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.cards
[DEBUG] 2019-12-18 14:20:51.524 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.cards
[DEBUG] 2019-12-18 14:20:51.524 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2019-12-18 14:20:51.524 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.role
[DEBUG] 2019-12-18 14:20:51.524 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-12-18 14:20:51.524 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-12-18 14:20:51.524 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-12-18 14:20:51.526 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCard)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCard)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCard.entries)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCard.entries.<elements>)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:3>, path=edu.yang.entity.YugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCard)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(entries)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.YugiohCard.entries)
                - SQL table alias mapping - entries1_
                - alias suffix - 1_
                - suffixed key columns - {yugiohCa4_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_2_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCardHistory)
                      - SQL table alias mapping - entries1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.yang.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 3_
                - suffixed key columns - {id1_0_3_}

[DEBUG] 2019-12-18 14:20:51.526 [http-nio-8080-exec-4] EntityLoader - Static select for entity edu.yang.entity.YugiohCard [NONE]: select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_edition as card_edi2_1_0_, yugiohcard0_.card_index as card_ind3_1_0_, yugiohcard0_.card_name as card_nam4_1_0_, yugiohcard0_.card_rarity as card_rar5_1_0_, yugiohcard0_.card_set as card_set6_1_0_, yugiohcard0_.card_set_full_name as card_set7_1_0_, yugiohcard0_.card_type as card_typ8_1_0_, yugiohcard0_.image as image9_1_0_, yugiohcard0_.price as price10_1_0_, yugiohcard0_.qty as qty11_1_0_, yugiohcard0_.status as status12_1_0_, yugiohcard0_.user_id as user_id13_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-12-18 14:20:51.526 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e807e66]
[DEBUG] 2019-12-18 14:20:51.526 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cardEdition
[DEBUG] 2019-12-18 14:20:51.526 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cardIndex
[DEBUG] 2019-12-18 14:20:51.526 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cardName
[DEBUG] 2019-12-18 14:20:51.532 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cardRarity
[DEBUG] 2019-12-18 14:20:51.533 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cardSet
[DEBUG] 2019-12-18 14:20:51.535 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cardSetFullName
[DEBUG] 2019-12-18 14:20:51.535 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cardType
[DEBUG] 2019-12-18 14:20:51.536 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : entries
[DEBUG] 2019-12-18 14:20:51.536 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f8affa7]
[DEBUG] 2019-12-18 14:20:51.536 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7800e36b]
[DEBUG] 2019-12-18 14:20:51.537 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : entries.price
[DEBUG] 2019-12-18 14:20:51.537 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : entries.ts
[DEBUG] 2019-12-18 14:20:51.537 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : entries.yugiohCard
[DEBUG] 2019-12-18 14:20:51.537 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : entries.yugiohCard
[DEBUG] 2019-12-18 14:20:51.538 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2019-12-18 14:20:51.538 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-12-18 14:20:51.538 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : quantity
[DEBUG] 2019-12-18 14:20:51.538 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2019-12-18 14:20:51.538 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-12-18 14:20:51.538 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@586692a0]
[DEBUG] 2019-12-18 14:20:51.538 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.cards
[DEBUG] 2019-12-18 14:20:51.538 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user.cards
[DEBUG] 2019-12-18 14:20:51.538 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2019-12-18 14:20:51.538 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.role
[DEBUG] 2019-12-18 14:20:51.538 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-12-18 14:20:51.538 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-12-18 14:20:51.539 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-12-18 14:20:51.540 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCard)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCard)
          - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCard.entries)
             - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCard.entries.<elements>)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:3>, path=edu.yang.entity.YugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCard)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(entries)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=edu.yang.entity.YugiohCard.entries)
                - SQL table alias mapping - entries1_
                - alias suffix - 1_
                - suffixed key columns - {yugiohCa4_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_2_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.YugiohCardHistory)
                      - SQL table alias mapping - entries1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.yang.entity.User)
                - SQL table alias mapping - user2_
                - alias suffix - 3_
                - suffixed key columns - {id1_0_3_}

[DEBUG] 2019-12-18 14:20:51.540 [http-nio-8080-exec-4] EntityLoader - Static select for entity edu.yang.entity.YugiohCard [READ]: select yugiohcard0_.id as id1_1_0_, yugiohcard0_.card_edition as card_edi2_1_0_, yugiohcard0_.card_index as card_ind3_1_0_, yugiohcard0_.card_name as card_nam4_1_0_, yugiohcard0_.card_rarity as card_rar5_1_0_, yugiohcard0_.card_set as card_set6_1_0_, yugiohcard0_.card_set_full_name as card_set7_1_0_, yugiohcard0_.card_type as card_typ8_1_0_, yugiohcard0_.image as image9_1_0_, yugiohcard0_.price as price10_1_0_, yugiohcard0_.qty as qty11_1_0_, yugiohcard0_.status as status12_1_0_, yugiohcard0_.user_id as user_id13_1_0_, entries1_.yugiohCard_id as yugiohCa4_2_1_, entries1_.id as id1_2_1_, entries1_.id as id1_2_2_, entries1_.price as price2_2_2_, entries1_.update_date as update_d3_2_2_, entries1_.yugiohCard_id as yugiohCa4_2_2_, user2_.id as id1_0_3_, user2_.user_password as user_pas2_0_3_, user2_.user_role as user_rol3_0_3_, user2_.user_name as user_nam4_0_3_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id left outer join user user2_ on yugiohcard0_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-12-18 14:20:51.542 [http-nio-8080-exec-4] Loader - Static select for action ACTION_MERGE on entity edu.yang.entity.YugiohCard: select yugiohcard0_.id as id1_1_1_, yugiohcard0_.card_edition as card_edi2_1_1_, yugiohcard0_.card_index as card_ind3_1_1_, yugiohcard0_.card_name as card_nam4_1_1_, yugiohcard0_.card_rarity as card_rar5_1_1_, yugiohcard0_.card_set as card_set6_1_1_, yugiohcard0_.card_set_full_name as card_set7_1_1_, yugiohcard0_.card_type as card_typ8_1_1_, yugiohcard0_.image as image9_1_1_, yugiohcard0_.price as price10_1_1_, yugiohcard0_.qty as qty11_1_1_, yugiohcard0_.status as status12_1_1_, yugiohcard0_.user_id as user_id13_1_1_, entries1_.yugiohCard_id as yugiohCa4_2_3_, entries1_.id as id1_2_3_, entries1_.id as id1_2_0_, entries1_.price as price2_2_0_, entries1_.update_date as update_d3_2_0_, entries1_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id where yugiohcard0_.id=?
[DEBUG] 2019-12-18 14:20:51.547 [http-nio-8080-exec-4] Loader - Static select for action ACTION_REFRESH on entity edu.yang.entity.YugiohCard: select yugiohcard0_.id as id1_1_1_, yugiohcard0_.card_edition as card_edi2_1_1_, yugiohcard0_.card_index as card_ind3_1_1_, yugiohcard0_.card_name as card_nam4_1_1_, yugiohcard0_.card_rarity as card_rar5_1_1_, yugiohcard0_.card_set as card_set6_1_1_, yugiohcard0_.card_set_full_name as card_set7_1_1_, yugiohcard0_.card_type as card_typ8_1_1_, yugiohcard0_.image as image9_1_1_, yugiohcard0_.price as price10_1_1_, yugiohcard0_.qty as qty11_1_1_, yugiohcard0_.status as status12_1_1_, yugiohcard0_.user_id as user_id13_1_1_, entries1_.yugiohCard_id as yugiohCa4_2_3_, entries1_.id as id1_2_3_, entries1_.id as id1_2_0_, entries1_.price as price2_2_0_, entries1_.update_date as update_d3_2_0_, entries1_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card yugiohcard0_ left outer join yugioh_card_history entries1_ on yugiohcard0_.id=entries1_.yugiohCard_id where yugiohcard0_.id=?
[DEBUG] 2019-12-18 14:20:51.547 [http-nio-8080-exec-4] AbstractEntityPersister - Static SQL for entity: edu.yang.entity.YugiohCardHistory
[DEBUG] 2019-12-18 14:20:51.548 [http-nio-8080-exec-4] AbstractEntityPersister -  Version select: select id from yugioh_card_history where id =?
[DEBUG] 2019-12-18 14:20:51.548 [http-nio-8080-exec-4] AbstractEntityPersister -  Snapshot select: select yugiohcard_.id, yugiohcard_.price as price2_2_, yugiohcard_.yugiohCard_id as yugiohCa4_2_ from yugioh_card_history yugiohcard_ where yugiohcard_.id=?
[DEBUG] 2019-12-18 14:20:51.549 [http-nio-8080-exec-4] AbstractEntityPersister -  Insert 0: insert into yugioh_card_history (price, update_date, yugiohCard_id, id) values (?, ?, ?, ?)
[DEBUG] 2019-12-18 14:20:51.549 [http-nio-8080-exec-4] AbstractEntityPersister -  Update 0: update yugioh_card_history set price=?, yugiohCard_id=? where id=?
[DEBUG] 2019-12-18 14:20:51.549 [http-nio-8080-exec-4] AbstractEntityPersister -  Delete 0: delete from yugioh_card_history where id=?
[DEBUG] 2019-12-18 14:20:51.549 [http-nio-8080-exec-4] AbstractEntityPersister -  Identity insert: insert into yugioh_card_history (price, update_date, yugiohCard_id) values (?, ?, ?)
[DEBUG] 2019-12-18 14:20:51.549 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34751016]
[DEBUG] 2019-12-18 14:20:51.550 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-12-18 14:20:51.550 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : ts
[DEBUG] 2019-12-18 14:20:51.551 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard
[DEBUG] 2019-12-18 14:20:51.551 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16c4da7]
[DEBUG] 2019-12-18 14:20:51.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardEdition
[DEBUG] 2019-12-18 14:20:51.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardIndex
[DEBUG] 2019-12-18 14:20:51.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardName
[DEBUG] 2019-12-18 14:20:51.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardRarity
[DEBUG] 2019-12-18 14:20:51.552 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardSet
[DEBUG] 2019-12-18 14:20:51.553 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardSetFullName
[DEBUG] 2019-12-18 14:20:51.553 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardType
[DEBUG] 2019-12-18 14:20:51.553 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.entries
[DEBUG] 2019-12-18 14:20:51.553 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.entries
[DEBUG] 2019-12-18 14:20:51.553 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.image
[DEBUG] 2019-12-18 14:20:51.553 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.price
[DEBUG] 2019-12-18 14:20:51.553 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.quantity
[DEBUG] 2019-12-18 14:20:51.553 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.status
[DEBUG] 2019-12-18 14:20:51.553 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user
[DEBUG] 2019-12-18 14:20:51.553 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b7a9e6b]
[DEBUG] 2019-12-18 14:20:51.553 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.cards
[DEBUG] 2019-12-18 14:20:51.553 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.user.cards
[DEBUG] 2019-12-18 14:20:51.553 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.password
[DEBUG] 2019-12-18 14:20:51.553 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.role
[DEBUG] 2019-12-18 14:20:51.553 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.userName
[DEBUG] 2019-12-18 14:20:51.553 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-12-18 14:20:51.553 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-12-18 14:20:51.558 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCardHistory)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCardHistory)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCardHistory.yugiohCard)
             - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCardHistory.yugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCardHistory)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(yugiohCard)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCard)
                - SQL table alias mapping - yugiohcard1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-12-18 14:20:51.558 [http-nio-8080-exec-4] EntityLoader - Static select for entity edu.yang.entity.YugiohCardHistory [NONE]: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_, yugiohcard1_.id as id1_1_1_, yugiohcard1_.card_edition as card_edi2_1_1_, yugiohcard1_.card_index as card_ind3_1_1_, yugiohcard1_.card_name as card_nam4_1_1_, yugiohcard1_.card_rarity as card_rar5_1_1_, yugiohcard1_.card_set as card_set6_1_1_, yugiohcard1_.card_set_full_name as card_set7_1_1_, yugiohcard1_.card_type as card_typ8_1_1_, yugiohcard1_.image as image9_1_1_, yugiohcard1_.price as price10_1_1_, yugiohcard1_.qty as qty11_1_1_, yugiohcard1_.status as status12_1_1_, yugiohcard1_.user_id as user_id13_1_1_, user2_.id as id1_0_2_, user2_.user_password as user_pas2_0_2_, user2_.user_role as user_rol3_0_2_, user2_.user_name as user_nam4_0_2_ from yugioh_card_history yugiohcard0_ left outer join yugioh_card yugiohcard1_ on yugiohcard0_.yugiohCard_id=yugiohcard1_.id left outer join user user2_ on yugiohcard1_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-12-18 14:20:51.558 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c16776a]
[DEBUG] 2019-12-18 14:20:51.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-12-18 14:20:51.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : ts
[DEBUG] 2019-12-18 14:20:51.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard
[DEBUG] 2019-12-18 14:20:51.558 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ab3e267]
[DEBUG] 2019-12-18 14:20:51.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardEdition
[DEBUG] 2019-12-18 14:20:51.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardIndex
[DEBUG] 2019-12-18 14:20:51.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardName
[DEBUG] 2019-12-18 14:20:51.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardRarity
[DEBUG] 2019-12-18 14:20:51.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardSet
[DEBUG] 2019-12-18 14:20:51.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardSetFullName
[DEBUG] 2019-12-18 14:20:51.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.cardType
[DEBUG] 2019-12-18 14:20:51.558 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.entries
[DEBUG] 2019-12-18 14:20:51.559 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.entries
[DEBUG] 2019-12-18 14:20:51.559 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.image
[DEBUG] 2019-12-18 14:20:51.560 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.price
[DEBUG] 2019-12-18 14:20:51.560 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.quantity
[DEBUG] 2019-12-18 14:20:51.560 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.status
[DEBUG] 2019-12-18 14:20:51.560 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user
[DEBUG] 2019-12-18 14:20:51.561 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a58f93d]
[DEBUG] 2019-12-18 14:20:51.561 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.cards
[DEBUG] 2019-12-18 14:20:51.561 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard.user.cards
[DEBUG] 2019-12-18 14:20:51.561 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.password
[DEBUG] 2019-12-18 14:20:51.561 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.role
[DEBUG] 2019-12-18 14:20:51.561 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard.user.userName
[DEBUG] 2019-12-18 14:20:51.561 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-12-18 14:20:51.561 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-12-18 14:20:51.566 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(entity=edu.yang.entity.YugiohCardHistory)
    - Returns
       - EntityReturnImpl(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:0>, path=edu.yang.entity.YugiohCardHistory)
          - EntityAttributeFetchImpl(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:1>, path=edu.yang.entity.YugiohCardHistory.yugiohCard)
             - EntityAttributeFetchImpl(entity=edu.yang.entity.User, querySpaceUid=<gen:2>, path=edu.yang.entity.YugiohCardHistory.yugiohCard.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.yang.entity.YugiohCardHistory)
          - SQL table alias mapping - yugiohcard0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(yugiohCard)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCard)
                - SQL table alias mapping - yugiohcard1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.yang.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-12-18 14:20:51.566 [http-nio-8080-exec-4] EntityLoader - Static select for entity edu.yang.entity.YugiohCardHistory [READ]: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_, yugiohcard1_.id as id1_1_1_, yugiohcard1_.card_edition as card_edi2_1_1_, yugiohcard1_.card_index as card_ind3_1_1_, yugiohcard1_.card_name as card_nam4_1_1_, yugiohcard1_.card_rarity as card_rar5_1_1_, yugiohcard1_.card_set as card_set6_1_1_, yugiohcard1_.card_set_full_name as card_set7_1_1_, yugiohcard1_.card_type as card_typ8_1_1_, yugiohcard1_.image as image9_1_1_, yugiohcard1_.price as price10_1_1_, yugiohcard1_.qty as qty11_1_1_, yugiohcard1_.status as status12_1_1_, yugiohcard1_.user_id as user_id13_1_1_, user2_.id as id1_0_2_, user2_.user_password as user_pas2_0_2_, user2_.user_role as user_rol3_0_2_, user2_.user_name as user_nam4_0_2_ from yugioh_card_history yugiohcard0_ left outer join yugioh_card yugiohcard1_ on yugiohcard0_.yugiohCard_id=yugiohcard1_.id left outer join user user2_ on yugiohcard1_.user_id=user2_.id where yugiohcard0_.id=?
[DEBUG] 2019-12-18 14:20:51.569 [http-nio-8080-exec-4] Loader - Static select for action ACTION_MERGE on entity edu.yang.entity.YugiohCardHistory: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card_history yugiohcard0_ where yugiohcard0_.id=?
[DEBUG] 2019-12-18 14:20:51.569 [http-nio-8080-exec-4] Loader - Static select for action ACTION_REFRESH on entity edu.yang.entity.YugiohCardHistory: select yugiohcard0_.id as id1_2_0_, yugiohcard0_.price as price2_2_0_, yugiohcard0_.update_date as update_d3_2_0_, yugiohcard0_.yugiohCard_id as yugiohCa4_2_0_ from yugioh_card_history yugiohcard0_ where yugiohcard0_.id=?
[DEBUG] 2019-12-18 14:20:51.584 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@76db905f]
[DEBUG] 2019-12-18 14:20:51.585 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@493eafeb]
[DEBUG] 2019-12-18 14:20:51.585 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cardEdition
[DEBUG] 2019-12-18 14:20:51.585 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cardIndex
[DEBUG] 2019-12-18 14:20:51.585 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cardName
[DEBUG] 2019-12-18 14:20:51.585 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cardRarity
[DEBUG] 2019-12-18 14:20:51.585 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cardSet
[DEBUG] 2019-12-18 14:20:51.585 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cardSetFullName
[DEBUG] 2019-12-18 14:20:51.585 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : cardType
[DEBUG] 2019-12-18 14:20:51.585 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : entries
[DEBUG] 2019-12-18 14:20:51.585 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@684bda7e]
[DEBUG] 2019-12-18 14:20:51.585 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5436616b]
[DEBUG] 2019-12-18 14:20:51.585 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : image
[DEBUG] 2019-12-18 14:20:51.585 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-12-18 14:20:51.585 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : quantity
[DEBUG] 2019-12-18 14:20:51.586 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : status
[DEBUG] 2019-12-18 14:20:51.586 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-12-18 14:20:51.586 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-12-18 14:20:51.587 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-12-18 14:20:51.593 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-12-18 14:20:51.595 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(collection=edu.yang.entity.User.cards)
    - Returns
       - CollectionReturnImpl(collection=edu.yang.entity.User.cards, querySpaceUid=<gen:0>, path=[edu.yang.entity.User.cards])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCard, querySpaceUid=<gen:1>, path=[edu.yang.entity.User.cards].<elements>)
             - CollectionAttributeFetchImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:2>, path=[edu.yang.entity.User.cards].<elements>.entries)
                - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:3>, path=[edu.yang.entity.User.cards].<elements>.entries.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.yang.entity.User.cards)
          - SQL table alias mapping - cards0_
          - alias suffix - 0_
          - suffixed key columns - {user_id13_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCard)
                - SQL table alias mapping - cards0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-12-18 14:20:51.596 [http-nio-8080-exec-4] CollectionLoader - Static select for collection edu.yang.entity.User.cards: select cards0_.user_id as user_id13_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_edition as card_edi2_1_1_, cards0_.card_index as card_ind3_1_1_, cards0_.card_name as card_nam4_1_1_, cards0_.card_rarity as card_rar5_1_1_, cards0_.card_set as card_set6_1_1_, cards0_.card_set_full_name as card_set7_1_1_, cards0_.card_type as card_typ8_1_1_, cards0_.image as image9_1_1_, cards0_.price as price10_1_1_, cards0_.qty as qty11_1_1_, cards0_.status as status12_1_1_, cards0_.user_id as user_id13_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-12-18 14:20:51.596 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60136c24]
[DEBUG] 2019-12-18 14:20:51.596 [http-nio-8080-exec-4] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65d16351]
[DEBUG] 2019-12-18 14:20:51.597 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : price
[DEBUG] 2019-12-18 14:20:51.597 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : ts
[DEBUG] 2019-12-18 14:20:51.597 [http-nio-8080-exec-4] MetamodelGraphWalker - Visiting attribute path : yugiohCard
[DEBUG] 2019-12-18 14:20:51.597 [http-nio-8080-exec-4] MetamodelGraphWalker - Property path deemed to be circular : yugiohCard
[DEBUG] 2019-12-18 14:20:51.597 [http-nio-8080-exec-4] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-12-18 14:20:51.597 [http-nio-8080-exec-4] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-12-18 14:20:51.597 [http-nio-8080-exec-4] LoadPlanTreePrinter - LoadPlan(collection=edu.yang.entity.YugiohCard.entries)
    - Returns
       - CollectionReturnImpl(collection=edu.yang.entity.YugiohCard.entries, querySpaceUid=<gen:0>, path=[edu.yang.entity.YugiohCard.entries])
          - (collection element) CollectionFetchableElementEntityGraph(entity=edu.yang.entity.YugiohCardHistory, querySpaceUid=<gen:1>, path=[edu.yang.entity.YugiohCard.entries].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=edu.yang.entity.YugiohCard.entries)
          - SQL table alias mapping - entries0_
          - alias suffix - 0_
          - suffixed key columns - {yugiohCa4_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.yang.entity.YugiohCardHistory)
                - SQL table alias mapping - entries0_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

[DEBUG] 2019-12-18 14:20:51.597 [http-nio-8080-exec-4] CollectionLoader - Static select for collection edu.yang.entity.YugiohCard.entries: select entries0_.yugiohCard_id as yugiohCa4_2_0_, entries0_.id as id1_2_0_, entries0_.id as id1_2_1_, entries0_.price as price2_2_1_, entries0_.update_date as update_d3_2_1_, entries0_.yugiohCard_id as yugiohCa4_2_1_ from yugioh_card_history entries0_ where entries0_.yugiohCard_id=?
[DEBUG] 2019-12-18 14:20:51.701 [http-nio-8080-exec-4] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-12-18 14:20:51.702 [http-nio-8080-exec-4] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-12-18 14:20:51.703 [http-nio-8080-exec-4] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-12-18 14:20:51.751 [http-nio-8080-exec-4] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-12-18 14:20:51.752 [http-nio-8080-exec-4] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-12-18 14:20:51.763 [http-nio-8080-exec-4] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-12-18 14:20:51.764 [http-nio-8080-exec-4] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-12-18 14:20:51.773 [http-nio-8080-exec-4] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@39c35e23
[DEBUG] 2019-12-18 14:20:51.784 [http-nio-8080-exec-4] SessionFactoryRegistry - Registering SessionFactory: 2cac6ffe-1a2d-43d1-96ae-4589c156da40 (<unnamed>)
[DEBUG] 2019-12-18 14:20:51.784 [http-nio-8080-exec-4] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-12-18 14:20:51.961 [http-nio-8080-exec-4] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-12-18 14:20:52.009 [http-nio-8080-exec-4] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName like :param0
[DEBUG] 2019-12-18 14:20:52.030 [http-nio-8080-exec-4] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4cac0ac1
[DEBUG] 2019-12-18 14:20:52.066 [http-nio-8080-exec-4] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.User as generatedAlias0 where generatedAlias0.userName like :param0
[DEBUG] 2019-12-18 14:20:52.073 [http-nio-8080-exec-4] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-12-18 14:20:52.089 [http-nio-8080-exec-4] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'yang'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'userName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-12-18 14:20:52.123 [http-nio-8080-exec-4] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-12-18 14:20:52.142 [http-nio-8080-exec-4] FromElement - FromClause{level=1} : edu.yang.entity.User (generatedAlias0) -> user0_
[DEBUG] 2019-12-18 14:20:52.143 [http-nio-8080-exec-4] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2019-12-18 14:20:52.146 [http-nio-8080-exec-4] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2019-12-18 14:20:52.147 [http-nio-8080-exec-4] DotNode - getDataType() : userName -> org.hibernate.type.StringType@595c6687
[DEBUG] 2019-12-18 14:20:52.147 [http-nio-8080-exec-4] FromReferenceNode - Resolved : generatedAlias0.userName -> user0_.user_name
[DEBUG] 2019-12-18 14:20:52.152 [http-nio-8080-exec-4] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-12-18 14:20:52.152 [http-nio-8080-exec-4] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( like ( user0_.user_name user0_.id userName ) ? ) ) )
[DEBUG] 2019-12-18 14:20:52.162 [http-nio-8080-exec-4] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2019-12-18 14:20:52.164 [http-nio-8080-exec-4] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-12-18 14:20:52.166 [http-nio-8080-exec-4] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_0_' {alias=generatedAlias0, className=edu.yang.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=edu.yang.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'user0_.user_name' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path=generatedAlias0.userName,tableAlias=user0_,className=edu.yang.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=edu.yang.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@595c6687}

[DEBUG] 2019-12-18 14:20:52.166 [http-nio-8080-exec-4] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-12-18 14:20:52.172 [http-nio-8080-exec-4] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.User as generatedAlias0 where generatedAlias0.userName like :param0
[DEBUG] 2019-12-18 14:20:52.172 [http-nio-8080-exec-4] QueryTranslatorImpl - SQL: select user0_.id as id1_0_, user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_ from user user0_ where user0_.user_name like ?
[DEBUG] 2019-12-18 14:20:52.172 [http-nio-8080-exec-4] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-12-18 14:20:52.197 [http-nio-8080-exec-4] SQL - select user0_.id as id1_0_, user0_.user_password as user_pas2_0_, user0_.user_role as user_rol3_0_, user0_.user_name as user_nam4_0_ from user user0_ where user0_.user_name like ?
[DEBUG] 2019-12-18 14:20:52.225 [http-nio-8080-exec-4] Loader - Result set row: 0
[DEBUG] 2019-12-18 14:20:52.227 [http-nio-8080-exec-4] Loader - Result row: EntityKey[edu.yang.entity.User#1]
[DEBUG] 2019-12-18 14:20:52.239 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [edu.yang.entity.User#1]
[DEBUG] 2019-12-18 14:20:52.240 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `cards` : value = NOT NULL COLLECTION
[DEBUG] 2019-12-18 14:20:52.240 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`cards`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-18 14:20:52.250 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `password` : value = greenbayPackers
[DEBUG] 2019-12-18 14:20:52.250 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-18 14:20:52.250 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `role` : value = general
[DEBUG] 2019-12-18 14:20:52.250 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`role`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-18 14:20:52.250 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `userName` : value = leeyang2019
[DEBUG] 2019-12-18 14:20:52.250 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-12-18 14:20:52.251 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [edu.yang.entity.User#1]
[DEBUG] 2019-12-18 14:20:52.253 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-12-18 14:20:52.253 [http-nio-8080-exec-4] SQL - select cards0_.user_id as user_id13_1_0_, cards0_.id as id1_1_0_, cards0_.id as id1_1_1_, cards0_.card_edition as card_edi2_1_1_, cards0_.card_index as card_ind3_1_1_, cards0_.card_name as card_nam4_1_1_, cards0_.card_rarity as card_rar5_1_1_, cards0_.card_set as card_set6_1_1_, cards0_.card_set_full_name as card_set7_1_1_, cards0_.card_type as card_typ8_1_1_, cards0_.image as image9_1_1_, cards0_.price as price10_1_1_, cards0_.qty as qty11_1_1_, cards0_.status as status12_1_1_, cards0_.user_id as user_id13_1_1_ from yugioh_card cards0_ where cards0_.user_id=?
[DEBUG] 2019-12-18 14:20:52.260 [http-nio-8080-exec-4] ResultSetProcessorImpl - Preparing collection initializer : [edu.yang.entity.User.cards#1]
[DEBUG] 2019-12-18 14:20:52.268 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: edu.yang.entity.User.cards
[DEBUG] 2019-12-18 14:20:52.268 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [edu.yang.entity.User.cards#1]
[DEBUG] 2019-12-18 14:20:52.268 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: edu.yang.entity.User.cards
[DEBUG] 2019-12-18 14:20:52.268 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-12-18 14:20:52.268 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-12-18 14:20:52.277 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-12-18 14:20:52.288 [http-nio-8080-exec-4] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from YugiohCard as generatedAlias0 where ( generatedAlias0.user=:param0 ) and ( generatedAlias0.status=:param1 )
[DEBUG] 2019-12-18 14:20:52.289 [http-nio-8080-exec-4] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where ( generatedAlias0.user=:param0 ) and ( generatedAlias0.status=:param1 )
[DEBUG] 2019-12-18 14:20:52.293 [http-nio-8080-exec-4] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-12-18 14:20:52.294 [http-nio-8080-exec-4] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'yang'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'YugiohCard'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'user'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'status'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

[DEBUG] 2019-12-18 14:20:52.295 [http-nio-8080-exec-4] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-12-18 14:20:52.297 [http-nio-8080-exec-4] FromElement - FromClause{level=1} : edu.yang.entity.YugiohCard (generatedAlias0) -> yugiohcard0_
[DEBUG] 2019-12-18 14:20:52.299 [http-nio-8080-exec-4] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-12-18 14:20:52.299 [http-nio-8080-exec-4] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-12-18 14:20:52.299 [http-nio-8080-exec-4] DotNode - getDataType() : user -> org.hibernate.type.ManyToOneType(edu.yang.entity.User)
[DEBUG] 2019-12-18 14:20:52.299 [http-nio-8080-exec-4] DotNode - dereferenceShortcut() : property user in edu.yang.entity.YugiohCard does not require a join.
[DEBUG] 2019-12-18 14:20:52.299 [http-nio-8080-exec-4] DotNode - Terminal getPropertyPath = [user]
[DEBUG] 2019-12-18 14:20:52.299 [http-nio-8080-exec-4] FromReferenceNode - Resolved : generatedAlias0.user -> yugiohcard0_.user_id
[DEBUG] 2019-12-18 14:20:52.300 [http-nio-8080-exec-4] FromReferenceNode - Resolved : generatedAlias0 -> yugiohcard0_.id
[DEBUG] 2019-12-18 14:20:52.300 [http-nio-8080-exec-4] DotNode - getDataType() : status -> org.hibernate.type.StringType@595c6687
[DEBUG] 2019-12-18 14:20:52.300 [http-nio-8080-exec-4] FromReferenceNode - Resolved : generatedAlias0.status -> yugiohcard0_.status
[DEBUG] 2019-12-18 14:20:52.300 [http-nio-8080-exec-4] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-12-18 14:20:52.300 [http-nio-8080-exec-4] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} yugiohcard0_.id ) ( FromClause{level=1} yugioh_card yugiohcard0_ ) ( where ( and ( = ( yugiohcard0_.user_id yugiohcard0_.id user ) ? ) ( = ( yugiohcard0_.status yugiohcard0_.id status ) ? ) ) ) )
[DEBUG] 2019-12-18 14:20:52.301 [http-nio-8080-exec-4] JoinProcessor - Using FROM fragment [yugioh_card yugiohcard0_]
[DEBUG] 2019-12-18 14:20:52.301 [http-nio-8080-exec-4] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-12-18 14:20:52.302 [http-nio-8080-exec-4] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (yugioh_card)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id as id1_1_' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
    |  \-[SQL_TOKEN] SqlFragment: 'yugiohcard0_.card_edition as card_edi2_1_, yugiohcard0_.card_index as card_ind3_1_, yugiohcard0_.card_name as card_nam4_1_, yugiohcard0_.card_rarity as card_rar5_1_, yugiohcard0_.card_set as card_set6_1_, yugiohcard0_.card_set_full_name as card_set7_1_, yugiohcard0_.card_type as card_typ8_1_, yugiohcard0_.image as image9_1_, yugiohcard0_.price as price10_1_, yugiohcard0_.qty as qty11_1_, yugiohcard0_.status as status12_1_, yugiohcard0_.user_id as user_id13_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[yugiohcard0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'yugioh_card yugiohcard0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=yugioh_card,tableAlias=yugiohcard0_,origin=null,columns={,className=edu.yang.entity.YugiohCard}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'yugiohcard0_.user_id' {propertyName=user,dereferenceType=UNKNOWN,getPropertyPath=user,path=generatedAlias0.user,tableAlias=yugiohcard0_,className=edu.yang.entity.YugiohCard,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
          |  |  \-[IDENT] IdentNode: 'user' {originalText=user}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.ManyToOneType(edu.yang.entity.User)}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'yugiohcard0_.status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=generatedAlias0.status,tableAlias=yugiohcard0_,className=edu.yang.entity.YugiohCard,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'yugiohcard0_.id' {alias=generatedAlias0, className=edu.yang.entity.YugiohCard, tableAlias=yugiohcard0_}
             |  \-[IDENT] IdentNode: 'status' {originalText=status}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@595c6687}

[DEBUG] 2019-12-18 14:20:52.302 [http-nio-8080-exec-4] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-12-18 14:20:52.303 [http-nio-8080-exec-4] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.yang.entity.YugiohCard as generatedAlias0 where ( generatedAlias0.user=:param0 ) and ( generatedAlias0.status=:param1 )
[DEBUG] 2019-12-18 14:20:52.303 [http-nio-8080-exec-4] QueryTranslatorImpl - SQL: select yugiohcard0_.id as id1_1_, yugiohcard0_.card_edition as card_edi2_1_, yugiohcard0_.card_index as card_ind3_1_, yugiohcard0_.card_name as card_nam4_1_, yugiohcard0_.card_rarity as card_rar5_1_, yugiohcard0_.card_set as card_set6_1_, yugiohcard0_.card_set_full_name as card_set7_1_, yugiohcard0_.card_type as card_typ8_1_, yugiohcard0_.image as image9_1_, yugiohcard0_.price as price10_1_, yugiohcard0_.qty as qty11_1_, yugiohcard0_.status as status12_1_, yugiohcard0_.user_id as user_id13_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.user_id=? and yugiohcard0_.status=?
[DEBUG] 2019-12-18 14:20:52.304 [http-nio-8080-exec-4] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-12-18 14:20:52.305 [http-nio-8080-exec-4] SQL - select yugiohcard0_.id as id1_1_, yugiohcard0_.card_edition as card_edi2_1_, yugiohcard0_.card_index as card_ind3_1_, yugiohcard0_.card_name as card_nam4_1_, yugiohcard0_.card_rarity as card_rar5_1_, yugiohcard0_.card_set as card_set6_1_, yugiohcard0_.card_set_full_name as card_set7_1_, yugiohcard0_.card_type as card_typ8_1_, yugiohcard0_.image as image9_1_, yugiohcard0_.price as price10_1_, yugiohcard0_.qty as qty11_1_, yugiohcard0_.status as status12_1_, yugiohcard0_.user_id as user_id13_1_ from yugioh_card yugiohcard0_ where yugiohcard0_.user_id=? and yugiohcard0_.status=?
[DEBUG] 2019-12-18 14:20:52.316 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
